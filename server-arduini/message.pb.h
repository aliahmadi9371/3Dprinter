// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: message.proto

#ifndef PROTOBUF_INCLUDED_message_2eproto
#define PROTOBUF_INCLUDED_message_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_message_2eproto 

namespace protobuf_message_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[7];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_message_2eproto
namespace network_messages {
class Job3D;
class Job3DDefaultTypeInternal;
extern Job3DDefaultTypeInternal _Job3D_default_instance_;
class MachineConfig;
class MachineConfigDefaultTypeInternal;
extern MachineConfigDefaultTypeInternal _MachineConfig_default_instance_;
class MaterialConfig;
class MaterialConfigDefaultTypeInternal;
extern MaterialConfigDefaultTypeInternal _MaterialConfig_default_instance_;
class MotionConfig;
class MotionConfigDefaultTypeInternal;
extern MotionConfigDefaultTypeInternal _MotionConfig_default_instance_;
class NetClientRes;
class NetClientResDefaultTypeInternal;
extern NetClientResDefaultTypeInternal _NetClientRes_default_instance_;
class NetServerCommands;
class NetServerCommandsDefaultTypeInternal;
extern NetServerCommandsDefaultTypeInternal _NetServerCommands_default_instance_;
class PrintProgress;
class PrintProgressDefaultTypeInternal;
extern PrintProgressDefaultTypeInternal _PrintProgress_default_instance_;
}  // namespace network_messages
namespace google {
namespace protobuf {
template<> ::network_messages::Job3D* Arena::CreateMaybeMessage<::network_messages::Job3D>(Arena*);
template<> ::network_messages::MachineConfig* Arena::CreateMaybeMessage<::network_messages::MachineConfig>(Arena*);
template<> ::network_messages::MaterialConfig* Arena::CreateMaybeMessage<::network_messages::MaterialConfig>(Arena*);
template<> ::network_messages::MotionConfig* Arena::CreateMaybeMessage<::network_messages::MotionConfig>(Arena*);
template<> ::network_messages::NetClientRes* Arena::CreateMaybeMessage<::network_messages::NetClientRes>(Arena*);
template<> ::network_messages::NetServerCommands* Arena::CreateMaybeMessage<::network_messages::NetServerCommands>(Arena*);
template<> ::network_messages::PrintProgress* Arena::CreateMaybeMessage<::network_messages::PrintProgress>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace network_messages {

enum NetServerCommands_PacketType {
  NetServerCommands_PacketType_ZeroPacketCode = 0,
  NetServerCommands_PacketType_Projector = 1,
  NetServerCommands_PacketType_Print = 2,
  NetServerCommands_PacketType_MachinStatus = 3,
  NetServerCommands_PacketType_Material = 4,
  NetServerCommands_PacketType_Motion = 5,
  NetServerCommands_PacketType_LicenseStatus = 6,
  NetServerCommands_PacketType_Job = 7,
  NetServerCommands_PacketType_Config = 8,
  NetServerCommands_PacketType_LicenseKey = 9,
  NetServerCommands_PacketType_ManualMV = 10,
  NetServerCommands_PacketType_GetState = 11,
  NetServerCommands_PacketType_NetServerCommands_PacketType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  NetServerCommands_PacketType_NetServerCommands_PacketType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool NetServerCommands_PacketType_IsValid(int value);
const NetServerCommands_PacketType NetServerCommands_PacketType_PacketType_MIN = NetServerCommands_PacketType_ZeroPacketCode;
const NetServerCommands_PacketType NetServerCommands_PacketType_PacketType_MAX = NetServerCommands_PacketType_GetState;
const int NetServerCommands_PacketType_PacketType_ARRAYSIZE = NetServerCommands_PacketType_PacketType_MAX + 1;

const ::google::protobuf::EnumDescriptor* NetServerCommands_PacketType_descriptor();
inline const ::std::string& NetServerCommands_PacketType_Name(NetServerCommands_PacketType value) {
  return ::google::protobuf::internal::NameOfEnum(
    NetServerCommands_PacketType_descriptor(), value);
}
inline bool NetServerCommands_PacketType_Parse(
    const ::std::string& name, NetServerCommands_PacketType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<NetServerCommands_PacketType>(
    NetServerCommands_PacketType_descriptor(), name, value);
}
enum NetServerCommands_ProjectorCalibrate {
  NetServerCommands_ProjectorCalibrate_ZeroCalibrate = 0,
  NetServerCommands_ProjectorCalibrate_StartCalibrate = 7,
  NetServerCommands_ProjectorCalibrate_FinishCalibrate = 8,
  NetServerCommands_ProjectorCalibrate_GoHomeCalibrate = 16776977,
  NetServerCommands_ProjectorCalibrate_PositionCalibrate = 16776993,
  NetServerCommands_ProjectorCalibrate_LEDIntensityCalibrate = 16777105,
  NetServerCommands_ProjectorCalibrate_MaterialTestCalibrate = 16777089,
  NetServerCommands_ProjectorCalibrate_ProjectorOffCalibrate = 9,
  NetServerCommands_ProjectorCalibrate_EjectUpCalibrate = 16777009,
  NetServerCommands_ProjectorCalibrate_EjectDownCalibrate = 16777010,
  NetServerCommands_ProjectorCalibrate_LEDTurnOn = 11,
  NetServerCommands_ProjectorCalibrate_LEDTurnOff = 12,
  NetServerCommands_ProjectorCalibrate_ShowPattern = 13,
  NetServerCommands_ProjectorCalibrate_MaterialLevel = 14,
  NetServerCommands_ProjectorCalibrate_VacuumFill = 15,
  NetServerCommands_ProjectorCalibrate_GetSensor = 16,
  NetServerCommands_ProjectorCalibrate_NetServerCommands_ProjectorCalibrate_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  NetServerCommands_ProjectorCalibrate_NetServerCommands_ProjectorCalibrate_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool NetServerCommands_ProjectorCalibrate_IsValid(int value);
const NetServerCommands_ProjectorCalibrate NetServerCommands_ProjectorCalibrate_ProjectorCalibrate_MIN = NetServerCommands_ProjectorCalibrate_ZeroCalibrate;
const NetServerCommands_ProjectorCalibrate NetServerCommands_ProjectorCalibrate_ProjectorCalibrate_MAX = NetServerCommands_ProjectorCalibrate_LEDIntensityCalibrate;
const int NetServerCommands_ProjectorCalibrate_ProjectorCalibrate_ARRAYSIZE = NetServerCommands_ProjectorCalibrate_ProjectorCalibrate_MAX + 1;

const ::google::protobuf::EnumDescriptor* NetServerCommands_ProjectorCalibrate_descriptor();
inline const ::std::string& NetServerCommands_ProjectorCalibrate_Name(NetServerCommands_ProjectorCalibrate value) {
  return ::google::protobuf::internal::NameOfEnum(
    NetServerCommands_ProjectorCalibrate_descriptor(), value);
}
inline bool NetServerCommands_ProjectorCalibrate_Parse(
    const ::std::string& name, NetServerCommands_ProjectorCalibrate* value) {
  return ::google::protobuf::internal::ParseNamedEnum<NetServerCommands_ProjectorCalibrate>(
    NetServerCommands_ProjectorCalibrate_descriptor(), name, value);
}
enum NetServerCommands_PrintState {
  NetServerCommands_PrintState_ZeroPirint = 0,
  NetServerCommands_PrintState_StartPrint = 11,
  NetServerCommands_PrintState_StopPrint = 12,
  NetServerCommands_PrintState_PausePrint = 13,
  NetServerCommands_PrintState_NetServerCommands_PrintState_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  NetServerCommands_PrintState_NetServerCommands_PrintState_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool NetServerCommands_PrintState_IsValid(int value);
const NetServerCommands_PrintState NetServerCommands_PrintState_PrintState_MIN = NetServerCommands_PrintState_ZeroPirint;
const NetServerCommands_PrintState NetServerCommands_PrintState_PrintState_MAX = NetServerCommands_PrintState_PausePrint;
const int NetServerCommands_PrintState_PrintState_ARRAYSIZE = NetServerCommands_PrintState_PrintState_MAX + 1;

const ::google::protobuf::EnumDescriptor* NetServerCommands_PrintState_descriptor();
inline const ::std::string& NetServerCommands_PrintState_Name(NetServerCommands_PrintState value) {
  return ::google::protobuf::internal::NameOfEnum(
    NetServerCommands_PrintState_descriptor(), value);
}
inline bool NetServerCommands_PrintState_Parse(
    const ::std::string& name, NetServerCommands_PrintState* value) {
  return ::google::protobuf::internal::ParseNamedEnum<NetServerCommands_PrintState>(
    NetServerCommands_PrintState_descriptor(), name, value);
}
enum NetServerCommands_ManualMVStep {
  NetServerCommands_ManualMVStep_ZeroManualMV = 0,
  NetServerCommands_ManualMVStep_BuidlOneUp = 101,
  NetServerCommands_ManualMVStep_BuidlOneDown = 102,
  NetServerCommands_ManualMVStep_BuidlTenUp = 111,
  NetServerCommands_ManualMVStep_BuidlTenDown = 112,
  NetServerCommands_ManualMVStep_BuidlFiftyUp = 121,
  NetServerCommands_ManualMVStep_BuidlFiftyDown = 122,
  NetServerCommands_ManualMVStep_TiltUp = 13,
  NetServerCommands_ManualMVStep_TiltDown = 14,
  NetServerCommands_ManualMVStep_DoorUp = 15,
  NetServerCommands_ManualMVStep_DoorDown = 16,
  NetServerCommands_ManualMVStep_NetServerCommands_ManualMVStep_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  NetServerCommands_ManualMVStep_NetServerCommands_ManualMVStep_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool NetServerCommands_ManualMVStep_IsValid(int value);
const NetServerCommands_ManualMVStep NetServerCommands_ManualMVStep_ManualMVStep_MIN = NetServerCommands_ManualMVStep_ZeroManualMV;
const NetServerCommands_ManualMVStep NetServerCommands_ManualMVStep_ManualMVStep_MAX = NetServerCommands_ManualMVStep_BuidlFiftyDown;
const int NetServerCommands_ManualMVStep_ManualMVStep_ARRAYSIZE = NetServerCommands_ManualMVStep_ManualMVStep_MAX + 1;

const ::google::protobuf::EnumDescriptor* NetServerCommands_ManualMVStep_descriptor();
inline const ::std::string& NetServerCommands_ManualMVStep_Name(NetServerCommands_ManualMVStep value) {
  return ::google::protobuf::internal::NameOfEnum(
    NetServerCommands_ManualMVStep_descriptor(), value);
}
inline bool NetServerCommands_ManualMVStep_Parse(
    const ::std::string& name, NetServerCommands_ManualMVStep* value) {
  return ::google::protobuf::internal::ParseNamedEnum<NetServerCommands_ManualMVStep>(
    NetServerCommands_ManualMVStep_descriptor(), name, value);
}
enum NetClientRes_PacketType {
  NetClientRes_PacketType_ZeroPacketCode = 0,
  NetClientRes_PacketType_NotFound = 1,
  NetClientRes_PacketType_Founded = 2,
  NetClientRes_PacketType_Done = 3,
  NetClientRes_PacketType_Error = 4,
  NetClientRes_PacketType_Progress = 5,
  NetClientRes_PacketType_Ready = 6,
  NetClientRes_PacketType_ReadVal = 7,
  NetClientRes_PacketType_CheckFile = 8,
  NetClientRes_PacketType_NetClientRes_PacketType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  NetClientRes_PacketType_NetClientRes_PacketType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool NetClientRes_PacketType_IsValid(int value);
const NetClientRes_PacketType NetClientRes_PacketType_PacketType_MIN = NetClientRes_PacketType_ZeroPacketCode;
const NetClientRes_PacketType NetClientRes_PacketType_PacketType_MAX = NetClientRes_PacketType_CheckFile;
const int NetClientRes_PacketType_PacketType_ARRAYSIZE = NetClientRes_PacketType_PacketType_MAX + 1;

const ::google::protobuf::EnumDescriptor* NetClientRes_PacketType_descriptor();
inline const ::std::string& NetClientRes_PacketType_Name(NetClientRes_PacketType value) {
  return ::google::protobuf::internal::NameOfEnum(
    NetClientRes_PacketType_descriptor(), value);
}
inline bool NetClientRes_PacketType_Parse(
    const ::std::string& name, NetClientRes_PacketType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<NetClientRes_PacketType>(
    NetClientRes_PacketType_descriptor(), name, value);
}
enum MachineConfig_PacketType {
  MachineConfig_PacketType_ZeroPacketCode = 0,
  MachineConfig_PacketType_Add = 1,
  MachineConfig_PacketType_Edit = 2,
  MachineConfig_PacketType_Delete = 3,
  MachineConfig_PacketType_Get = 4,
  MachineConfig_PacketType_GetALL = 5,
  MachineConfig_PacketType_SET = 6,
  MachineConfig_PacketType_MachineConfig_PacketType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  MachineConfig_PacketType_MachineConfig_PacketType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool MachineConfig_PacketType_IsValid(int value);
const MachineConfig_PacketType MachineConfig_PacketType_PacketType_MIN = MachineConfig_PacketType_ZeroPacketCode;
const MachineConfig_PacketType MachineConfig_PacketType_PacketType_MAX = MachineConfig_PacketType_SET;
const int MachineConfig_PacketType_PacketType_ARRAYSIZE = MachineConfig_PacketType_PacketType_MAX + 1;

const ::google::protobuf::EnumDescriptor* MachineConfig_PacketType_descriptor();
inline const ::std::string& MachineConfig_PacketType_Name(MachineConfig_PacketType value) {
  return ::google::protobuf::internal::NameOfEnum(
    MachineConfig_PacketType_descriptor(), value);
}
inline bool MachineConfig_PacketType_Parse(
    const ::std::string& name, MachineConfig_PacketType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MachineConfig_PacketType>(
    MachineConfig_PacketType_descriptor(), name, value);
}
enum MaterialConfig_PacketType {
  MaterialConfig_PacketType_ZeroPacketCode = 0,
  MaterialConfig_PacketType_Add = 1,
  MaterialConfig_PacketType_Edit = 2,
  MaterialConfig_PacketType_Delete = 3,
  MaterialConfig_PacketType_Get = 4,
  MaterialConfig_PacketType_GetALL = 5,
  MaterialConfig_PacketType_MaterialConfig_PacketType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  MaterialConfig_PacketType_MaterialConfig_PacketType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool MaterialConfig_PacketType_IsValid(int value);
const MaterialConfig_PacketType MaterialConfig_PacketType_PacketType_MIN = MaterialConfig_PacketType_ZeroPacketCode;
const MaterialConfig_PacketType MaterialConfig_PacketType_PacketType_MAX = MaterialConfig_PacketType_GetALL;
const int MaterialConfig_PacketType_PacketType_ARRAYSIZE = MaterialConfig_PacketType_PacketType_MAX + 1;

const ::google::protobuf::EnumDescriptor* MaterialConfig_PacketType_descriptor();
inline const ::std::string& MaterialConfig_PacketType_Name(MaterialConfig_PacketType value) {
  return ::google::protobuf::internal::NameOfEnum(
    MaterialConfig_PacketType_descriptor(), value);
}
inline bool MaterialConfig_PacketType_Parse(
    const ::std::string& name, MaterialConfig_PacketType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MaterialConfig_PacketType>(
    MaterialConfig_PacketType_descriptor(), name, value);
}
enum MotionConfig_PacketType {
  MotionConfig_PacketType_ZeroPacketCode = 0,
  MotionConfig_PacketType_Add = 1,
  MotionConfig_PacketType_Edit = 2,
  MotionConfig_PacketType_Delete = 3,
  MotionConfig_PacketType_Get = 4,
  MotionConfig_PacketType_GetALL = 5,
  MotionConfig_PacketType_MotionConfig_PacketType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  MotionConfig_PacketType_MotionConfig_PacketType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool MotionConfig_PacketType_IsValid(int value);
const MotionConfig_PacketType MotionConfig_PacketType_PacketType_MIN = MotionConfig_PacketType_ZeroPacketCode;
const MotionConfig_PacketType MotionConfig_PacketType_PacketType_MAX = MotionConfig_PacketType_GetALL;
const int MotionConfig_PacketType_PacketType_ARRAYSIZE = MotionConfig_PacketType_PacketType_MAX + 1;

const ::google::protobuf::EnumDescriptor* MotionConfig_PacketType_descriptor();
inline const ::std::string& MotionConfig_PacketType_Name(MotionConfig_PacketType value) {
  return ::google::protobuf::internal::NameOfEnum(
    MotionConfig_PacketType_descriptor(), value);
}
inline bool MotionConfig_PacketType_Parse(
    const ::std::string& name, MotionConfig_PacketType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MotionConfig_PacketType>(
    MotionConfig_PacketType_descriptor(), name, value);
}
enum Job3D_PacketType {
  Job3D_PacketType_ZeroPacketCode = 0,
  Job3D_PacketType_Add = 1,
  Job3D_PacketType_Edit = 2,
  Job3D_PacketType_Delete = 3,
  Job3D_PacketType_Get = 4,
  Job3D_PacketType_GetALL = 5,
  Job3D_PacketType_CheckFile = 6,
  Job3D_PacketType_Job3D_PacketType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Job3D_PacketType_Job3D_PacketType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Job3D_PacketType_IsValid(int value);
const Job3D_PacketType Job3D_PacketType_PacketType_MIN = Job3D_PacketType_ZeroPacketCode;
const Job3D_PacketType Job3D_PacketType_PacketType_MAX = Job3D_PacketType_CheckFile;
const int Job3D_PacketType_PacketType_ARRAYSIZE = Job3D_PacketType_PacketType_MAX + 1;

const ::google::protobuf::EnumDescriptor* Job3D_PacketType_descriptor();
inline const ::std::string& Job3D_PacketType_Name(Job3D_PacketType value) {
  return ::google::protobuf::internal::NameOfEnum(
    Job3D_PacketType_descriptor(), value);
}
inline bool Job3D_PacketType_Parse(
    const ::std::string& name, Job3D_PacketType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Job3D_PacketType>(
    Job3D_PacketType_descriptor(), name, value);
}
// ===================================================================

class NetServerCommands : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:network_messages.NetServerCommands) */ {
 public:
  NetServerCommands();
  virtual ~NetServerCommands();

  NetServerCommands(const NetServerCommands& from);

  inline NetServerCommands& operator=(const NetServerCommands& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  NetServerCommands(NetServerCommands&& from) noexcept
    : NetServerCommands() {
    *this = ::std::move(from);
  }

  inline NetServerCommands& operator=(NetServerCommands&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const NetServerCommands& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const NetServerCommands* internal_default_instance() {
    return reinterpret_cast<const NetServerCommands*>(
               &_NetServerCommands_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(NetServerCommands* other);
  friend void swap(NetServerCommands& a, NetServerCommands& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline NetServerCommands* New() const final {
    return CreateMaybeMessage<NetServerCommands>(NULL);
  }

  NetServerCommands* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<NetServerCommands>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const NetServerCommands& from);
  void MergeFrom(const NetServerCommands& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(NetServerCommands* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef NetServerCommands_PacketType PacketType;
  static const PacketType ZeroPacketCode =
    NetServerCommands_PacketType_ZeroPacketCode;
  static const PacketType Projector =
    NetServerCommands_PacketType_Projector;
  static const PacketType Print =
    NetServerCommands_PacketType_Print;
  static const PacketType MachinStatus =
    NetServerCommands_PacketType_MachinStatus;
  static const PacketType Material =
    NetServerCommands_PacketType_Material;
  static const PacketType Motion =
    NetServerCommands_PacketType_Motion;
  static const PacketType LicenseStatus =
    NetServerCommands_PacketType_LicenseStatus;
  static const PacketType Job =
    NetServerCommands_PacketType_Job;
  static const PacketType Config =
    NetServerCommands_PacketType_Config;
  static const PacketType LicenseKey =
    NetServerCommands_PacketType_LicenseKey;
  static const PacketType ManualMV =
    NetServerCommands_PacketType_ManualMV;
  static const PacketType GetState =
    NetServerCommands_PacketType_GetState;
  static inline bool PacketType_IsValid(int value) {
    return NetServerCommands_PacketType_IsValid(value);
  }
  static const PacketType PacketType_MIN =
    NetServerCommands_PacketType_PacketType_MIN;
  static const PacketType PacketType_MAX =
    NetServerCommands_PacketType_PacketType_MAX;
  static const int PacketType_ARRAYSIZE =
    NetServerCommands_PacketType_PacketType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  PacketType_descriptor() {
    return NetServerCommands_PacketType_descriptor();
  }
  static inline const ::std::string& PacketType_Name(PacketType value) {
    return NetServerCommands_PacketType_Name(value);
  }
  static inline bool PacketType_Parse(const ::std::string& name,
      PacketType* value) {
    return NetServerCommands_PacketType_Parse(name, value);
  }

  typedef NetServerCommands_ProjectorCalibrate ProjectorCalibrate;
  static const ProjectorCalibrate ZeroCalibrate =
    NetServerCommands_ProjectorCalibrate_ZeroCalibrate;
  static const ProjectorCalibrate StartCalibrate =
    NetServerCommands_ProjectorCalibrate_StartCalibrate;
  static const ProjectorCalibrate FinishCalibrate =
    NetServerCommands_ProjectorCalibrate_FinishCalibrate;
  static const ProjectorCalibrate GoHomeCalibrate =
    NetServerCommands_ProjectorCalibrate_GoHomeCalibrate;
  static const ProjectorCalibrate PositionCalibrate =
    NetServerCommands_ProjectorCalibrate_PositionCalibrate;
  static const ProjectorCalibrate LEDIntensityCalibrate =
    NetServerCommands_ProjectorCalibrate_LEDIntensityCalibrate;
  static const ProjectorCalibrate MaterialTestCalibrate =
    NetServerCommands_ProjectorCalibrate_MaterialTestCalibrate;
  static const ProjectorCalibrate ProjectorOffCalibrate =
    NetServerCommands_ProjectorCalibrate_ProjectorOffCalibrate;
  static const ProjectorCalibrate EjectUpCalibrate =
    NetServerCommands_ProjectorCalibrate_EjectUpCalibrate;
  static const ProjectorCalibrate EjectDownCalibrate =
    NetServerCommands_ProjectorCalibrate_EjectDownCalibrate;
  static const ProjectorCalibrate LEDTurnOn =
    NetServerCommands_ProjectorCalibrate_LEDTurnOn;
  static const ProjectorCalibrate LEDTurnOff =
    NetServerCommands_ProjectorCalibrate_LEDTurnOff;
  static const ProjectorCalibrate ShowPattern =
    NetServerCommands_ProjectorCalibrate_ShowPattern;
  static const ProjectorCalibrate MaterialLevel =
    NetServerCommands_ProjectorCalibrate_MaterialLevel;
  static const ProjectorCalibrate VacuumFill =
    NetServerCommands_ProjectorCalibrate_VacuumFill;
  static const ProjectorCalibrate GetSensor =
    NetServerCommands_ProjectorCalibrate_GetSensor;
  static inline bool ProjectorCalibrate_IsValid(int value) {
    return NetServerCommands_ProjectorCalibrate_IsValid(value);
  }
  static const ProjectorCalibrate ProjectorCalibrate_MIN =
    NetServerCommands_ProjectorCalibrate_ProjectorCalibrate_MIN;
  static const ProjectorCalibrate ProjectorCalibrate_MAX =
    NetServerCommands_ProjectorCalibrate_ProjectorCalibrate_MAX;
  static const int ProjectorCalibrate_ARRAYSIZE =
    NetServerCommands_ProjectorCalibrate_ProjectorCalibrate_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  ProjectorCalibrate_descriptor() {
    return NetServerCommands_ProjectorCalibrate_descriptor();
  }
  static inline const ::std::string& ProjectorCalibrate_Name(ProjectorCalibrate value) {
    return NetServerCommands_ProjectorCalibrate_Name(value);
  }
  static inline bool ProjectorCalibrate_Parse(const ::std::string& name,
      ProjectorCalibrate* value) {
    return NetServerCommands_ProjectorCalibrate_Parse(name, value);
  }

  typedef NetServerCommands_PrintState PrintState;
  static const PrintState ZeroPirint =
    NetServerCommands_PrintState_ZeroPirint;
  static const PrintState StartPrint =
    NetServerCommands_PrintState_StartPrint;
  static const PrintState StopPrint =
    NetServerCommands_PrintState_StopPrint;
  static const PrintState PausePrint =
    NetServerCommands_PrintState_PausePrint;
  static inline bool PrintState_IsValid(int value) {
    return NetServerCommands_PrintState_IsValid(value);
  }
  static const PrintState PrintState_MIN =
    NetServerCommands_PrintState_PrintState_MIN;
  static const PrintState PrintState_MAX =
    NetServerCommands_PrintState_PrintState_MAX;
  static const int PrintState_ARRAYSIZE =
    NetServerCommands_PrintState_PrintState_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  PrintState_descriptor() {
    return NetServerCommands_PrintState_descriptor();
  }
  static inline const ::std::string& PrintState_Name(PrintState value) {
    return NetServerCommands_PrintState_Name(value);
  }
  static inline bool PrintState_Parse(const ::std::string& name,
      PrintState* value) {
    return NetServerCommands_PrintState_Parse(name, value);
  }

  typedef NetServerCommands_ManualMVStep ManualMVStep;
  static const ManualMVStep ZeroManualMV =
    NetServerCommands_ManualMVStep_ZeroManualMV;
  static const ManualMVStep BuidlOneUp =
    NetServerCommands_ManualMVStep_BuidlOneUp;
  static const ManualMVStep BuidlOneDown =
    NetServerCommands_ManualMVStep_BuidlOneDown;
  static const ManualMVStep BuidlTenUp =
    NetServerCommands_ManualMVStep_BuidlTenUp;
  static const ManualMVStep BuidlTenDown =
    NetServerCommands_ManualMVStep_BuidlTenDown;
  static const ManualMVStep BuidlFiftyUp =
    NetServerCommands_ManualMVStep_BuidlFiftyUp;
  static const ManualMVStep BuidlFiftyDown =
    NetServerCommands_ManualMVStep_BuidlFiftyDown;
  static const ManualMVStep TiltUp =
    NetServerCommands_ManualMVStep_TiltUp;
  static const ManualMVStep TiltDown =
    NetServerCommands_ManualMVStep_TiltDown;
  static const ManualMVStep DoorUp =
    NetServerCommands_ManualMVStep_DoorUp;
  static const ManualMVStep DoorDown =
    NetServerCommands_ManualMVStep_DoorDown;
  static inline bool ManualMVStep_IsValid(int value) {
    return NetServerCommands_ManualMVStep_IsValid(value);
  }
  static const ManualMVStep ManualMVStep_MIN =
    NetServerCommands_ManualMVStep_ManualMVStep_MIN;
  static const ManualMVStep ManualMVStep_MAX =
    NetServerCommands_ManualMVStep_ManualMVStep_MAX;
  static const int ManualMVStep_ARRAYSIZE =
    NetServerCommands_ManualMVStep_ManualMVStep_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  ManualMVStep_descriptor() {
    return NetServerCommands_ManualMVStep_descriptor();
  }
  static inline const ::std::string& ManualMVStep_Name(ManualMVStep value) {
    return NetServerCommands_ManualMVStep_Name(value);
  }
  static inline bool ManualMVStep_Parse(const ::std::string& name,
      ManualMVStep* value) {
    return NetServerCommands_ManualMVStep_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated bytes iRequestedCode = 12;
  int irequestedcode_size() const;
  void clear_irequestedcode();
  static const int kIRequestedCodeFieldNumber = 12;
  const ::std::string& irequestedcode(int index) const;
  ::std::string* mutable_irequestedcode(int index);
  void set_irequestedcode(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_irequestedcode(int index, ::std::string&& value);
  #endif
  void set_irequestedcode(int index, const char* value);
  void set_irequestedcode(int index, const void* value, size_t size);
  ::std::string* add_irequestedcode();
  void add_irequestedcode(const ::std::string& value);
  #if LANG_CXX11
  void add_irequestedcode(::std::string&& value);
  #endif
  void add_irequestedcode(const char* value);
  void add_irequestedcode(const void* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& irequestedcode() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_irequestedcode();

  // repeated bytes iLicenseKey = 13;
  int ilicensekey_size() const;
  void clear_ilicensekey();
  static const int kILicenseKeyFieldNumber = 13;
  const ::std::string& ilicensekey(int index) const;
  ::std::string* mutable_ilicensekey(int index);
  void set_ilicensekey(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_ilicensekey(int index, ::std::string&& value);
  #endif
  void set_ilicensekey(int index, const char* value);
  void set_ilicensekey(int index, const void* value, size_t size);
  ::std::string* add_ilicensekey();
  void add_ilicensekey(const ::std::string& value);
  #if LANG_CXX11
  void add_ilicensekey(::std::string&& value);
  #endif
  void add_ilicensekey(const char* value);
  void add_ilicensekey(const void* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& ilicensekey() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_ilicensekey();

  // .network_messages.MachineConfig machineConf = 14;
  bool has_machineconf() const;
  void clear_machineconf();
  static const int kMachineConfFieldNumber = 14;
  private:
  const ::network_messages::MachineConfig& _internal_machineconf() const;
  public:
  const ::network_messages::MachineConfig& machineconf() const;
  ::network_messages::MachineConfig* release_machineconf();
  ::network_messages::MachineConfig* mutable_machineconf();
  void set_allocated_machineconf(::network_messages::MachineConfig* machineconf);

  // .network_messages.MaterialConfig materialConfig = 15;
  bool has_materialconfig() const;
  void clear_materialconfig();
  static const int kMaterialConfigFieldNumber = 15;
  private:
  const ::network_messages::MaterialConfig& _internal_materialconfig() const;
  public:
  const ::network_messages::MaterialConfig& materialconfig() const;
  ::network_messages::MaterialConfig* release_materialconfig();
  ::network_messages::MaterialConfig* mutable_materialconfig();
  void set_allocated_materialconfig(::network_messages::MaterialConfig* materialconfig);

  // .network_messages.MotionConfig motionConfig = 16;
  bool has_motionconfig() const;
  void clear_motionconfig();
  static const int kMotionConfigFieldNumber = 16;
  private:
  const ::network_messages::MotionConfig& _internal_motionconfig() const;
  public:
  const ::network_messages::MotionConfig& motionconfig() const;
  ::network_messages::MotionConfig* release_motionconfig();
  ::network_messages::MotionConfig* mutable_motionconfig();
  void set_allocated_motionconfig(::network_messages::MotionConfig* motionconfig);

  // .network_messages.Job3D job3D = 17;
  bool has_job3d() const;
  void clear_job3d();
  static const int kJob3DFieldNumber = 17;
  private:
  const ::network_messages::Job3D& _internal_job3d() const;
  public:
  const ::network_messages::Job3D& job3d() const;
  ::network_messages::Job3D* release_job3d();
  ::network_messages::Job3D* mutable_job3d();
  void set_allocated_job3d(::network_messages::Job3D* job3d);

  // uint32 iCalibrState = 1;
  void clear_icalibrstate();
  static const int kICalibrStateFieldNumber = 1;
  ::google::protobuf::uint32 icalibrstate() const;
  void set_icalibrstate(::google::protobuf::uint32 value);

  // uint32 iGoPos = 2;
  void clear_igopos();
  static const int kIGoPosFieldNumber = 2;
  ::google::protobuf::uint32 igopos() const;
  void set_igopos(::google::protobuf::uint32 value);

  // uint32 iPrintState = 3;
  void clear_iprintstate();
  static const int kIPrintStateFieldNumber = 3;
  ::google::protobuf::uint32 iprintstate() const;
  void set_iprintstate(::google::protobuf::uint32 value);

  // uint32 iMachineStatus = 4;
  void clear_imachinestatus();
  static const int kIMachineStatusFieldNumber = 4;
  ::google::protobuf::uint32 imachinestatus() const;
  void set_imachinestatus(::google::protobuf::uint32 value);

  // uint32 getstatus = 5;
  void clear_getstatus();
  static const int kGetstatusFieldNumber = 5;
  ::google::protobuf::uint32 getstatus() const;
  void set_getstatus(::google::protobuf::uint32 value);

  // uint32 materialId = 6;
  void clear_materialid();
  static const int kMaterialIdFieldNumber = 6;
  ::google::protobuf::uint32 materialid() const;
  void set_materialid(::google::protobuf::uint32 value);

  // uint32 motionId = 7;
  void clear_motionid();
  static const int kMotionIdFieldNumber = 7;
  ::google::protobuf::uint32 motionid() const;
  void set_motionid(::google::protobuf::uint32 value);

  // uint32 iManualMV = 8;
  void clear_imanualmv();
  static const int kIManualMVFieldNumber = 8;
  ::google::protobuf::uint32 imanualmv() const;
  void set_imanualmv(::google::protobuf::uint32 value);

  // uint32 iMatPat = 9;
  void clear_imatpat();
  static const int kIMatPatFieldNumber = 9;
  ::google::protobuf::uint32 imatpat() const;
  void set_imatpat(::google::protobuf::uint32 value);

  // uint32 iLicenseStatus = 10;
  void clear_ilicensestatus();
  static const int kILicenseStatusFieldNumber = 10;
  ::google::protobuf::uint32 ilicensestatus() const;
  void set_ilicensestatus(::google::protobuf::uint32 value);

  // uint32 iRenewLicense = 11;
  void clear_irenewlicense();
  static const int kIRenewLicenseFieldNumber = 11;
  ::google::protobuf::uint32 irenewlicense() const;
  void set_irenewlicense(::google::protobuf::uint32 value);

  // float fMaterialLevelmm = 18;
  void clear_fmateriallevelmm();
  static const int kFMaterialLevelmmFieldNumber = 18;
  float fmateriallevelmm() const;
  void set_fmateriallevelmm(float value);

  // float fFillVacuumSec = 19;
  void clear_ffillvacuumsec();
  static const int kFFillVacuumSecFieldNumber = 19;
  float ffillvacuumsec() const;
  void set_ffillvacuumsec(float value);

  // uint32 packetCode = 20;
  void clear_packetcode();
  static const int kPacketCodeFieldNumber = 20;
  ::google::protobuf::uint32 packetcode() const;
  void set_packetcode(::google::protobuf::uint32 value);

  // uint32 jobId = 23;
  void clear_jobid();
  static const int kJobIdFieldNumber = 23;
  ::google::protobuf::uint32 jobid() const;
  void set_jobid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:network_messages.NetServerCommands)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::std::string> irequestedcode_;
  ::google::protobuf::RepeatedPtrField< ::std::string> ilicensekey_;
  ::network_messages::MachineConfig* machineconf_;
  ::network_messages::MaterialConfig* materialconfig_;
  ::network_messages::MotionConfig* motionconfig_;
  ::network_messages::Job3D* job3d_;
  ::google::protobuf::uint32 icalibrstate_;
  ::google::protobuf::uint32 igopos_;
  ::google::protobuf::uint32 iprintstate_;
  ::google::protobuf::uint32 imachinestatus_;
  ::google::protobuf::uint32 getstatus_;
  ::google::protobuf::uint32 materialid_;
  ::google::protobuf::uint32 motionid_;
  ::google::protobuf::uint32 imanualmv_;
  ::google::protobuf::uint32 imatpat_;
  ::google::protobuf::uint32 ilicensestatus_;
  ::google::protobuf::uint32 irenewlicense_;
  float fmateriallevelmm_;
  float ffillvacuumsec_;
  ::google::protobuf::uint32 packetcode_;
  ::google::protobuf::uint32 jobid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_message_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class NetClientRes : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:network_messages.NetClientRes) */ {
 public:
  NetClientRes();
  virtual ~NetClientRes();

  NetClientRes(const NetClientRes& from);

  inline NetClientRes& operator=(const NetClientRes& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  NetClientRes(NetClientRes&& from) noexcept
    : NetClientRes() {
    *this = ::std::move(from);
  }

  inline NetClientRes& operator=(NetClientRes&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const NetClientRes& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const NetClientRes* internal_default_instance() {
    return reinterpret_cast<const NetClientRes*>(
               &_NetClientRes_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(NetClientRes* other);
  friend void swap(NetClientRes& a, NetClientRes& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline NetClientRes* New() const final {
    return CreateMaybeMessage<NetClientRes>(NULL);
  }

  NetClientRes* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<NetClientRes>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const NetClientRes& from);
  void MergeFrom(const NetClientRes& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(NetClientRes* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef NetClientRes_PacketType PacketType;
  static const PacketType ZeroPacketCode =
    NetClientRes_PacketType_ZeroPacketCode;
  static const PacketType NotFound =
    NetClientRes_PacketType_NotFound;
  static const PacketType Founded =
    NetClientRes_PacketType_Founded;
  static const PacketType Done =
    NetClientRes_PacketType_Done;
  static const PacketType Error =
    NetClientRes_PacketType_Error;
  static const PacketType Progress =
    NetClientRes_PacketType_Progress;
  static const PacketType Ready =
    NetClientRes_PacketType_Ready;
  static const PacketType ReadVal =
    NetClientRes_PacketType_ReadVal;
  static const PacketType CheckFile =
    NetClientRes_PacketType_CheckFile;
  static inline bool PacketType_IsValid(int value) {
    return NetClientRes_PacketType_IsValid(value);
  }
  static const PacketType PacketType_MIN =
    NetClientRes_PacketType_PacketType_MIN;
  static const PacketType PacketType_MAX =
    NetClientRes_PacketType_PacketType_MAX;
  static const int PacketType_ARRAYSIZE =
    NetClientRes_PacketType_PacketType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  PacketType_descriptor() {
    return NetClientRes_PacketType_descriptor();
  }
  static inline const ::std::string& PacketType_Name(PacketType value) {
    return NetClientRes_PacketType_Name(value);
  }
  static inline bool PacketType_Parse(const ::std::string& name,
      PacketType* value) {
    return NetClientRes_PacketType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .network_messages.MachineConfig confs = 2;
  int confs_size() const;
  void clear_confs();
  static const int kConfsFieldNumber = 2;
  ::network_messages::MachineConfig* mutable_confs(int index);
  ::google::protobuf::RepeatedPtrField< ::network_messages::MachineConfig >*
      mutable_confs();
  const ::network_messages::MachineConfig& confs(int index) const;
  ::network_messages::MachineConfig* add_confs();
  const ::google::protobuf::RepeatedPtrField< ::network_messages::MachineConfig >&
      confs() const;

  // repeated .network_messages.MaterialConfig materials = 3;
  int materials_size() const;
  void clear_materials();
  static const int kMaterialsFieldNumber = 3;
  ::network_messages::MaterialConfig* mutable_materials(int index);
  ::google::protobuf::RepeatedPtrField< ::network_messages::MaterialConfig >*
      mutable_materials();
  const ::network_messages::MaterialConfig& materials(int index) const;
  ::network_messages::MaterialConfig* add_materials();
  const ::google::protobuf::RepeatedPtrField< ::network_messages::MaterialConfig >&
      materials() const;

  // repeated .network_messages.MotionConfig motions = 4;
  int motions_size() const;
  void clear_motions();
  static const int kMotionsFieldNumber = 4;
  ::network_messages::MotionConfig* mutable_motions(int index);
  ::google::protobuf::RepeatedPtrField< ::network_messages::MotionConfig >*
      mutable_motions();
  const ::network_messages::MotionConfig& motions(int index) const;
  ::network_messages::MotionConfig* add_motions();
  const ::google::protobuf::RepeatedPtrField< ::network_messages::MotionConfig >&
      motions() const;

  // repeated .network_messages.Job3D jobs = 5;
  int jobs_size() const;
  void clear_jobs();
  static const int kJobsFieldNumber = 5;
  ::network_messages::Job3D* mutable_jobs(int index);
  ::google::protobuf::RepeatedPtrField< ::network_messages::Job3D >*
      mutable_jobs();
  const ::network_messages::Job3D& jobs(int index) const;
  ::network_messages::Job3D* add_jobs();
  const ::google::protobuf::RepeatedPtrField< ::network_messages::Job3D >&
      jobs() const;

  // repeated bytes fileBytes = 11;
  int filebytes_size() const;
  void clear_filebytes();
  static const int kFileBytesFieldNumber = 11;
  const ::std::string& filebytes(int index) const;
  ::std::string* mutable_filebytes(int index);
  void set_filebytes(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_filebytes(int index, ::std::string&& value);
  #endif
  void set_filebytes(int index, const char* value);
  void set_filebytes(int index, const void* value, size_t size);
  ::std::string* add_filebytes();
  void add_filebytes(const ::std::string& value);
  #if LANG_CXX11
  void add_filebytes(::std::string&& value);
  #endif
  void add_filebytes(const char* value);
  void add_filebytes(const void* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& filebytes() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_filebytes();

  // string errorMesg = 6;
  void clear_errormesg();
  static const int kErrorMesgFieldNumber = 6;
  const ::std::string& errormesg() const;
  void set_errormesg(const ::std::string& value);
  #if LANG_CXX11
  void set_errormesg(::std::string&& value);
  #endif
  void set_errormesg(const char* value);
  void set_errormesg(const char* value, size_t size);
  ::std::string* mutable_errormesg();
  ::std::string* release_errormesg();
  void set_allocated_errormesg(::std::string* errormesg);

  // bytes Md5 = 14;
  void clear_md5();
  static const int kMd5FieldNumber = 14;
  const ::std::string& md5() const;
  void set_md5(const ::std::string& value);
  #if LANG_CXX11
  void set_md5(::std::string&& value);
  #endif
  void set_md5(const char* value);
  void set_md5(const void* value, size_t size);
  ::std::string* mutable_md5();
  ::std::string* release_md5();
  void set_allocated_md5(::std::string* md5);

  // uint32 packetCode = 1;
  void clear_packetcode();
  static const int kPacketCodeFieldNumber = 1;
  ::google::protobuf::uint32 packetcode() const;
  void set_packetcode(::google::protobuf::uint32 value);

  // uint32 progress = 7;
  void clear_progress();
  static const int kProgressFieldNumber = 7;
  ::google::protobuf::uint32 progress() const;
  void set_progress(::google::protobuf::uint32 value);

  // uint64 size = 8;
  void clear_size();
  static const int kSizeFieldNumber = 8;
  ::google::protobuf::uint64 size() const;
  void set_size(::google::protobuf::uint64 value);

  // uint32 currentSlice = 9;
  void clear_currentslice();
  static const int kCurrentSliceFieldNumber = 9;
  ::google::protobuf::uint32 currentslice() const;
  void set_currentslice(::google::protobuf::uint32 value);

  // uint32 totalSlice = 10;
  void clear_totalslice();
  static const int kTotalSliceFieldNumber = 10;
  ::google::protobuf::uint32 totalslice() const;
  void set_totalslice(::google::protobuf::uint32 value);

  // uint64 remaining_time = 12;
  void clear_remaining_time();
  static const int kRemainingTimeFieldNumber = 12;
  ::google::protobuf::uint64 remaining_time() const;
  void set_remaining_time(::google::protobuf::uint64 value);

  // float sensorVal = 13;
  void clear_sensorval();
  static const int kSensorValFieldNumber = 13;
  float sensorval() const;
  void set_sensorval(float value);

  // @@protoc_insertion_point(class_scope:network_messages.NetClientRes)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::network_messages::MachineConfig > confs_;
  ::google::protobuf::RepeatedPtrField< ::network_messages::MaterialConfig > materials_;
  ::google::protobuf::RepeatedPtrField< ::network_messages::MotionConfig > motions_;
  ::google::protobuf::RepeatedPtrField< ::network_messages::Job3D > jobs_;
  ::google::protobuf::RepeatedPtrField< ::std::string> filebytes_;
  ::google::protobuf::internal::ArenaStringPtr errormesg_;
  ::google::protobuf::internal::ArenaStringPtr md5_;
  ::google::protobuf::uint32 packetcode_;
  ::google::protobuf::uint32 progress_;
  ::google::protobuf::uint64 size_;
  ::google::protobuf::uint32 currentslice_;
  ::google::protobuf::uint32 totalslice_;
  ::google::protobuf::uint64 remaining_time_;
  float sensorval_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_message_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PrintProgress : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:network_messages.PrintProgress) */ {
 public:
  PrintProgress();
  virtual ~PrintProgress();

  PrintProgress(const PrintProgress& from);

  inline PrintProgress& operator=(const PrintProgress& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PrintProgress(PrintProgress&& from) noexcept
    : PrintProgress() {
    *this = ::std::move(from);
  }

  inline PrintProgress& operator=(PrintProgress&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PrintProgress& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PrintProgress* internal_default_instance() {
    return reinterpret_cast<const PrintProgress*>(
               &_PrintProgress_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(PrintProgress* other);
  friend void swap(PrintProgress& a, PrintProgress& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PrintProgress* New() const final {
    return CreateMaybeMessage<PrintProgress>(NULL);
  }

  PrintProgress* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PrintProgress>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PrintProgress& from);
  void MergeFrom(const PrintProgress& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PrintProgress* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:network_messages.PrintProgress)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_message_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MachineConfig : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:network_messages.MachineConfig) */ {
 public:
  MachineConfig();
  virtual ~MachineConfig();

  MachineConfig(const MachineConfig& from);

  inline MachineConfig& operator=(const MachineConfig& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MachineConfig(MachineConfig&& from) noexcept
    : MachineConfig() {
    *this = ::std::move(from);
  }

  inline MachineConfig& operator=(MachineConfig&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MachineConfig& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MachineConfig* internal_default_instance() {
    return reinterpret_cast<const MachineConfig*>(
               &_MachineConfig_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(MachineConfig* other);
  friend void swap(MachineConfig& a, MachineConfig& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MachineConfig* New() const final {
    return CreateMaybeMessage<MachineConfig>(NULL);
  }

  MachineConfig* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MachineConfig>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MachineConfig& from);
  void MergeFrom(const MachineConfig& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MachineConfig* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef MachineConfig_PacketType PacketType;
  static const PacketType ZeroPacketCode =
    MachineConfig_PacketType_ZeroPacketCode;
  static const PacketType Add =
    MachineConfig_PacketType_Add;
  static const PacketType Edit =
    MachineConfig_PacketType_Edit;
  static const PacketType Delete =
    MachineConfig_PacketType_Delete;
  static const PacketType Get =
    MachineConfig_PacketType_Get;
  static const PacketType GetALL =
    MachineConfig_PacketType_GetALL;
  static const PacketType SET =
    MachineConfig_PacketType_SET;
  static inline bool PacketType_IsValid(int value) {
    return MachineConfig_PacketType_IsValid(value);
  }
  static const PacketType PacketType_MIN =
    MachineConfig_PacketType_PacketType_MIN;
  static const PacketType PacketType_MAX =
    MachineConfig_PacketType_PacketType_MAX;
  static const int PacketType_ARRAYSIZE =
    MachineConfig_PacketType_PacketType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  PacketType_descriptor() {
    return MachineConfig_PacketType_descriptor();
  }
  static inline const ::std::string& PacketType_Name(PacketType value) {
    return MachineConfig_PacketType_Name(value);
  }
  static inline bool PacketType_Parse(const ::std::string& name,
      PacketType* value) {
    return MachineConfig_PacketType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // string MachineNo = 3;
  void clear_machineno();
  static const int kMachineNoFieldNumber = 3;
  const ::std::string& machineno() const;
  void set_machineno(const ::std::string& value);
  #if LANG_CXX11
  void set_machineno(::std::string&& value);
  #endif
  void set_machineno(const char* value);
  void set_machineno(const char* value, size_t size);
  ::std::string* mutable_machineno();
  ::std::string* release_machineno();
  void set_allocated_machineno(::std::string* machineno);

  // uint32 packetCode = 1;
  void clear_packetcode();
  static const int kPacketCodeFieldNumber = 1;
  ::google::protobuf::uint32 packetcode() const;
  void set_packetcode(::google::protobuf::uint32 value);

  // uint32 ModelCode = 2;
  void clear_modelcode();
  static const int kModelCodeFieldNumber = 2;
  ::google::protobuf::uint32 modelcode() const;
  void set_modelcode(::google::protobuf::uint32 value);

  // uint32 Version = 4;
  void clear_version();
  static const int kVersionFieldNumber = 4;
  ::google::protobuf::uint32 version() const;
  void set_version(::google::protobuf::uint32 value);

  // uint32 SubVersion = 5;
  void clear_subversion();
  static const int kSubVersionFieldNumber = 5;
  ::google::protobuf::uint32 subversion() const;
  void set_subversion(::google::protobuf::uint32 value);

  // float PrinterUnit = 7;
  void clear_printerunit();
  static const int kPrinterUnitFieldNumber = 7;
  float printerunit() const;
  void set_printerunit(float value);

  // uint32 ZUpperLimit = 8;
  void clear_zupperlimit();
  static const int kZUpperLimitFieldNumber = 8;
  ::google::protobuf::uint32 zupperlimit() const;
  void set_zupperlimit(::google::protobuf::uint32 value);

  // uint32 ProjectorProtocol = 9;
  void clear_projectorprotocol();
  static const int kProjectorProtocolFieldNumber = 9;
  ::google::protobuf::uint32 projectorprotocol() const;
  void set_projectorprotocol(::google::protobuf::uint32 value);

  // uint32 NoOfMaskPoints = 10;
  void clear_noofmaskpoints();
  static const int kNoOfMaskPointsFieldNumber = 10;
  ::google::protobuf::uint32 noofmaskpoints() const;
  void set_noofmaskpoints(::google::protobuf::uint32 value);

  // uint32 MaxIntensity = 11;
  void clear_maxintensity();
  static const int kMaxIntensityFieldNumber = 11;
  ::google::protobuf::uint32 maxintensity() const;
  void set_maxintensity(::google::protobuf::uint32 value);

  // uint32 MinIntensity = 12;
  void clear_minintensity();
  static const int kMinIntensityFieldNumber = 12;
  ::google::protobuf::uint32 minintensity() const;
  void set_minintensity(::google::protobuf::uint32 value);

  // bool NeedLicense = 6;
  void clear_needlicense();
  static const int kNeedLicenseFieldNumber = 6;
  bool needlicense() const;
  void set_needlicense(bool value);

  // bool HasDoor = 13;
  void clear_hasdoor();
  static const int kHasDoorFieldNumber = 13;
  bool hasdoor() const;
  void set_hasdoor(bool value);

  // bool HasErm = 14;
  void clear_haserm();
  static const int kHasErmFieldNumber = 14;
  bool haserm() const;
  void set_haserm(bool value);

  // bool BUpTDownConfig = 17;
  void clear_buptdownconfig();
  static const int kBUpTDownConfigFieldNumber = 17;
  bool buptdownconfig() const;
  void set_buptdownconfig(bool value);

  // uint32 gProjectWidth = 15;
  void clear_gprojectwidth();
  static const int kGProjectWidthFieldNumber = 15;
  ::google::protobuf::uint32 gprojectwidth() const;
  void set_gprojectwidth(::google::protobuf::uint32 value);

  // uint32 gProjectHeight = 16;
  void clear_gprojectheight();
  static const int kGProjectHeightFieldNumber = 16;
  ::google::protobuf::uint32 gprojectheight() const;
  void set_gprojectheight(::google::protobuf::uint32 value);

  // uint32 rowId = 18;
  void clear_rowid();
  static const int kRowIdFieldNumber = 18;
  ::google::protobuf::uint32 rowid() const;
  void set_rowid(::google::protobuf::uint32 value);

  // bool HasPlunger = 19;
  void clear_hasplunger();
  static const int kHasPlungerFieldNumber = 19;
  bool hasplunger() const;
  void set_hasplunger(bool value);

  // uint32 TDownZHomePos = 20;
  void clear_tdownzhomepos();
  static const int kTDownZHomePosFieldNumber = 20;
  ::google::protobuf::uint32 tdownzhomepos() const;
  void set_tdownzhomepos(::google::protobuf::uint32 value);

  // float vacuumTimer = 21;
  void clear_vacuumtimer();
  static const int kVacuumTimerFieldNumber = 21;
  float vacuumtimer() const;
  void set_vacuumtimer(float value);

  // float SensorSetPointVacuum = 22;
  void clear_sensorsetpointvacuum();
  static const int kSensorSetPointVacuumFieldNumber = 22;
  float sensorsetpointvacuum() const;
  void set_sensorsetpointvacuum(float value);

  // float SensorSetPoint = 23;
  void clear_sensorsetpoint();
  static const int kSensorSetPointFieldNumber = 23;
  float sensorsetpoint() const;
  void set_sensorsetpoint(float value);

  // float SensorThreshold = 24;
  void clear_sensorthreshold();
  static const int kSensorThresholdFieldNumber = 24;
  float sensorthreshold() const;
  void set_sensorthreshold(float value);

  // float XShift = 25;
  void clear_xshift();
  static const int kXShiftFieldNumber = 25;
  float xshift() const;
  void set_xshift(float value);

  // float YShift = 26;
  void clear_yshift();
  static const int kYShiftFieldNumber = 26;
  float yshift() const;
  void set_yshift(float value);

  // uint32 MaxIntensitySensor = 27;
  void clear_maxintensitysensor();
  static const int kMaxIntensitySensorFieldNumber = 27;
  ::google::protobuf::uint32 maxintensitysensor() const;
  void set_maxintensitysensor(::google::protobuf::uint32 value);

  // uint32 MinIntensitySensor = 28;
  void clear_minintensitysensor();
  static const int kMinIntensitySensorFieldNumber = 28;
  ::google::protobuf::uint32 minintensitysensor() const;
  void set_minintensitysensor(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:network_messages.MachineConfig)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr machineno_;
  ::google::protobuf::uint32 packetcode_;
  ::google::protobuf::uint32 modelcode_;
  ::google::protobuf::uint32 version_;
  ::google::protobuf::uint32 subversion_;
  float printerunit_;
  ::google::protobuf::uint32 zupperlimit_;
  ::google::protobuf::uint32 projectorprotocol_;
  ::google::protobuf::uint32 noofmaskpoints_;
  ::google::protobuf::uint32 maxintensity_;
  ::google::protobuf::uint32 minintensity_;
  bool needlicense_;
  bool hasdoor_;
  bool haserm_;
  bool buptdownconfig_;
  ::google::protobuf::uint32 gprojectwidth_;
  ::google::protobuf::uint32 gprojectheight_;
  ::google::protobuf::uint32 rowid_;
  bool hasplunger_;
  ::google::protobuf::uint32 tdownzhomepos_;
  float vacuumtimer_;
  float sensorsetpointvacuum_;
  float sensorsetpoint_;
  float sensorthreshold_;
  float xshift_;
  float yshift_;
  ::google::protobuf::uint32 maxintensitysensor_;
  ::google::protobuf::uint32 minintensitysensor_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_message_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MaterialConfig : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:network_messages.MaterialConfig) */ {
 public:
  MaterialConfig();
  virtual ~MaterialConfig();

  MaterialConfig(const MaterialConfig& from);

  inline MaterialConfig& operator=(const MaterialConfig& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MaterialConfig(MaterialConfig&& from) noexcept
    : MaterialConfig() {
    *this = ::std::move(from);
  }

  inline MaterialConfig& operator=(MaterialConfig&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MaterialConfig& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MaterialConfig* internal_default_instance() {
    return reinterpret_cast<const MaterialConfig*>(
               &_MaterialConfig_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void Swap(MaterialConfig* other);
  friend void swap(MaterialConfig& a, MaterialConfig& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MaterialConfig* New() const final {
    return CreateMaybeMessage<MaterialConfig>(NULL);
  }

  MaterialConfig* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MaterialConfig>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MaterialConfig& from);
  void MergeFrom(const MaterialConfig& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MaterialConfig* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef MaterialConfig_PacketType PacketType;
  static const PacketType ZeroPacketCode =
    MaterialConfig_PacketType_ZeroPacketCode;
  static const PacketType Add =
    MaterialConfig_PacketType_Add;
  static const PacketType Edit =
    MaterialConfig_PacketType_Edit;
  static const PacketType Delete =
    MaterialConfig_PacketType_Delete;
  static const PacketType Get =
    MaterialConfig_PacketType_Get;
  static const PacketType GetALL =
    MaterialConfig_PacketType_GetALL;
  static inline bool PacketType_IsValid(int value) {
    return MaterialConfig_PacketType_IsValid(value);
  }
  static const PacketType PacketType_MIN =
    MaterialConfig_PacketType_PacketType_MIN;
  static const PacketType PacketType_MAX =
    MaterialConfig_PacketType_PacketType_MAX;
  static const int PacketType_ARRAYSIZE =
    MaterialConfig_PacketType_PacketType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  PacketType_descriptor() {
    return MaterialConfig_PacketType_descriptor();
  }
  static inline const ::std::string& PacketType_Name(PacketType value) {
    return MaterialConfig_PacketType_Name(value);
  }
  static inline bool PacketType_Parse(const ::std::string& name,
      PacketType* value) {
    return MaterialConfig_PacketType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // string Name = 2;
  void clear_name();
  static const int kNameFieldNumber = 2;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // uint32 packetCode = 1;
  void clear_packetcode();
  static const int kPacketCodeFieldNumber = 1;
  ::google::protobuf::uint32 packetcode() const;
  void set_packetcode(::google::protobuf::uint32 value);

  // uint32 LayerThickness = 3;
  void clear_layerthickness();
  static const int kLayerThicknessFieldNumber = 3;
  ::google::protobuf::uint32 layerthickness() const;
  void set_layerthickness(::google::protobuf::uint32 value);

  // uint32 BurnInLayers = 4;
  void clear_burninlayers();
  static const int kBurnInLayersFieldNumber = 4;
  ::google::protobuf::uint32 burninlayers() const;
  void set_burninlayers(::google::protobuf::uint32 value);

  // float BurnInCureTime = 5;
  void clear_burnincuretime();
  static const int kBurnInCureTimeFieldNumber = 5;
  float burnincuretime() const;
  void set_burnincuretime(float value);

  // float NormalCureTime = 6;
  void clear_normalcuretime();
  static const int kNormalCureTimeFieldNumber = 6;
  float normalcuretime() const;
  void set_normalcuretime(float value);

  // float BurnIntensity = 7;
  void clear_burnintensity();
  static const int kBurnIntensityFieldNumber = 7;
  float burnintensity() const;
  void set_burnintensity(float value);

  // float Intensity = 8;
  void clear_intensity();
  static const int kIntensityFieldNumber = 8;
  float intensity() const;
  void set_intensity(float value);

  // uint32 rowId = 9;
  void clear_rowid();
  static const int kRowIdFieldNumber = 9;
  ::google::protobuf::uint32 rowid() const;
  void set_rowid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:network_messages.MaterialConfig)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::uint32 packetcode_;
  ::google::protobuf::uint32 layerthickness_;
  ::google::protobuf::uint32 burninlayers_;
  float burnincuretime_;
  float normalcuretime_;
  float burnintensity_;
  float intensity_;
  ::google::protobuf::uint32 rowid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_message_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MotionConfig : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:network_messages.MotionConfig) */ {
 public:
  MotionConfig();
  virtual ~MotionConfig();

  MotionConfig(const MotionConfig& from);

  inline MotionConfig& operator=(const MotionConfig& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MotionConfig(MotionConfig&& from) noexcept
    : MotionConfig() {
    *this = ::std::move(from);
  }

  inline MotionConfig& operator=(MotionConfig&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MotionConfig& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MotionConfig* internal_default_instance() {
    return reinterpret_cast<const MotionConfig*>(
               &_MotionConfig_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  void Swap(MotionConfig* other);
  friend void swap(MotionConfig& a, MotionConfig& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MotionConfig* New() const final {
    return CreateMaybeMessage<MotionConfig>(NULL);
  }

  MotionConfig* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MotionConfig>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MotionConfig& from);
  void MergeFrom(const MotionConfig& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MotionConfig* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef MotionConfig_PacketType PacketType;
  static const PacketType ZeroPacketCode =
    MotionConfig_PacketType_ZeroPacketCode;
  static const PacketType Add =
    MotionConfig_PacketType_Add;
  static const PacketType Edit =
    MotionConfig_PacketType_Edit;
  static const PacketType Delete =
    MotionConfig_PacketType_Delete;
  static const PacketType Get =
    MotionConfig_PacketType_Get;
  static const PacketType GetALL =
    MotionConfig_PacketType_GetALL;
  static inline bool PacketType_IsValid(int value) {
    return MotionConfig_PacketType_IsValid(value);
  }
  static const PacketType PacketType_MIN =
    MotionConfig_PacketType_PacketType_MIN;
  static const PacketType PacketType_MAX =
    MotionConfig_PacketType_PacketType_MAX;
  static const int PacketType_ARRAYSIZE =
    MotionConfig_PacketType_PacketType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  PacketType_descriptor() {
    return MotionConfig_PacketType_descriptor();
  }
  static inline const ::std::string& PacketType_Name(PacketType value) {
    return MotionConfig_PacketType_Name(value);
  }
  static inline bool PacketType_Parse(const ::std::string& name,
      PacketType* value) {
    return MotionConfig_PacketType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated uint32 Layer_Z_Raise = 3;
  int layer_z_raise_size() const;
  void clear_layer_z_raise();
  static const int kLayerZRaiseFieldNumber = 3;
  ::google::protobuf::uint32 layer_z_raise(int index) const;
  void set_layer_z_raise(int index, ::google::protobuf::uint32 value);
  void add_layer_z_raise(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      layer_z_raise() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_layer_z_raise();

  // repeated uint32 Layer_Z_Lower = 4;
  int layer_z_lower_size() const;
  void clear_layer_z_lower();
  static const int kLayerZLowerFieldNumber = 4;
  ::google::protobuf::uint32 layer_z_lower(int index) const;
  void set_layer_z_lower(int index, ::google::protobuf::uint32 value);
  void add_layer_z_lower(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      layer_z_lower() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_layer_z_lower();

  // repeated uint32 Layer_Tilt_Raise = 5;
  int layer_tilt_raise_size() const;
  void clear_layer_tilt_raise();
  static const int kLayerTiltRaiseFieldNumber = 5;
  ::google::protobuf::uint32 layer_tilt_raise(int index) const;
  void set_layer_tilt_raise(int index, ::google::protobuf::uint32 value);
  void add_layer_tilt_raise(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      layer_tilt_raise() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_layer_tilt_raise();

  // repeated uint32 Layer_Tilt_Lower = 6;
  int layer_tilt_lower_size() const;
  void clear_layer_tilt_lower();
  static const int kLayerTiltLowerFieldNumber = 6;
  ::google::protobuf::uint32 layer_tilt_lower(int index) const;
  void set_layer_tilt_lower(int index, ::google::protobuf::uint32 value);
  void add_layer_tilt_lower(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      layer_tilt_lower() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_layer_tilt_lower();

  // repeated uint32 Layer_Overlift = 7;
  int layer_overlift_size() const;
  void clear_layer_overlift();
  static const int kLayerOverliftFieldNumber = 7;
  ::google::protobuf::uint32 layer_overlift(int index) const;
  void set_layer_overlift(int index, ::google::protobuf::uint32 value);
  void add_layer_overlift(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      layer_overlift() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_layer_overlift();

  // repeated uint32 Layer_Breathe = 8;
  int layer_breathe_size() const;
  void clear_layer_breathe();
  static const int kLayerBreatheFieldNumber = 8;
  ::google::protobuf::uint32 layer_breathe(int index) const;
  void set_layer_breathe(int index, ::google::protobuf::uint32 value);
  void add_layer_breathe(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      layer_breathe() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_layer_breathe();

  // repeated uint32 Layer_Settle = 9;
  int layer_settle_size() const;
  void clear_layer_settle();
  static const int kLayerSettleFieldNumber = 9;
  ::google::protobuf::uint32 layer_settle(int index) const;
  void set_layer_settle(int index, ::google::protobuf::uint32 value);
  void add_layer_settle(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      layer_settle() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_layer_settle();

  // repeated uint32 Layer_Tilt_Percent = 10;
  int layer_tilt_percent_size() const;
  void clear_layer_tilt_percent();
  static const int kLayerTiltPercentFieldNumber = 10;
  ::google::protobuf::uint32 layer_tilt_percent(int index) const;
  void set_layer_tilt_percent(int index, ::google::protobuf::uint32 value);
  void add_layer_tilt_percent(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      layer_tilt_percent() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_layer_tilt_percent();

  // string Name = 2;
  void clear_name();
  static const int kNameFieldNumber = 2;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // uint32 packetCode = 1;
  void clear_packetcode();
  static const int kPacketCodeFieldNumber = 1;
  ::google::protobuf::uint32 packetcode() const;
  void set_packetcode(::google::protobuf::uint32 value);

  // uint32 Cut_Off_Layers = 11;
  void clear_cut_off_layers();
  static const int kCutOffLayersFieldNumber = 11;
  ::google::protobuf::uint32 cut_off_layers() const;
  void set_cut_off_layers(::google::protobuf::uint32 value);

  // uint32 Final_OverLift = 12;
  void clear_final_overlift();
  static const int kFinalOverLiftFieldNumber = 12;
  ::google::protobuf::uint32 final_overlift() const;
  void set_final_overlift(::google::protobuf::uint32 value);

  // uint32 Base_Layer_settle = 13;
  void clear_base_layer_settle();
  static const int kBaseLayerSettleFieldNumber = 13;
  ::google::protobuf::uint32 base_layer_settle() const;
  void set_base_layer_settle(::google::protobuf::uint32 value);

  // uint32 rowId = 14;
  void clear_rowid();
  static const int kRowIdFieldNumber = 14;
  ::google::protobuf::uint32 rowid() const;
  void set_rowid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:network_messages.MotionConfig)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > layer_z_raise_;
  mutable int _layer_z_raise_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > layer_z_lower_;
  mutable int _layer_z_lower_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > layer_tilt_raise_;
  mutable int _layer_tilt_raise_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > layer_tilt_lower_;
  mutable int _layer_tilt_lower_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > layer_overlift_;
  mutable int _layer_overlift_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > layer_breathe_;
  mutable int _layer_breathe_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > layer_settle_;
  mutable int _layer_settle_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > layer_tilt_percent_;
  mutable int _layer_tilt_percent_cached_byte_size_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::uint32 packetcode_;
  ::google::protobuf::uint32 cut_off_layers_;
  ::google::protobuf::uint32 final_overlift_;
  ::google::protobuf::uint32 base_layer_settle_;
  ::google::protobuf::uint32 rowid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_message_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Job3D : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:network_messages.Job3D) */ {
 public:
  Job3D();
  virtual ~Job3D();

  Job3D(const Job3D& from);

  inline Job3D& operator=(const Job3D& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Job3D(Job3D&& from) noexcept
    : Job3D() {
    *this = ::std::move(from);
  }

  inline Job3D& operator=(Job3D&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Job3D& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Job3D* internal_default_instance() {
    return reinterpret_cast<const Job3D*>(
               &_Job3D_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  void Swap(Job3D* other);
  friend void swap(Job3D& a, Job3D& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Job3D* New() const final {
    return CreateMaybeMessage<Job3D>(NULL);
  }

  Job3D* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Job3D>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Job3D& from);
  void MergeFrom(const Job3D& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Job3D* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef Job3D_PacketType PacketType;
  static const PacketType ZeroPacketCode =
    Job3D_PacketType_ZeroPacketCode;
  static const PacketType Add =
    Job3D_PacketType_Add;
  static const PacketType Edit =
    Job3D_PacketType_Edit;
  static const PacketType Delete =
    Job3D_PacketType_Delete;
  static const PacketType Get =
    Job3D_PacketType_Get;
  static const PacketType GetALL =
    Job3D_PacketType_GetALL;
  static const PacketType CheckFile =
    Job3D_PacketType_CheckFile;
  static inline bool PacketType_IsValid(int value) {
    return Job3D_PacketType_IsValid(value);
  }
  static const PacketType PacketType_MIN =
    Job3D_PacketType_PacketType_MIN;
  static const PacketType PacketType_MAX =
    Job3D_PacketType_PacketType_MAX;
  static const int PacketType_ARRAYSIZE =
    Job3D_PacketType_PacketType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  PacketType_descriptor() {
    return Job3D_PacketType_descriptor();
  }
  static inline const ::std::string& PacketType_Name(PacketType value) {
    return Job3D_PacketType_Name(value);
  }
  static inline bool PacketType_Parse(const ::std::string& name,
      PacketType* value) {
    return Job3D_PacketType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated bytes fileBytes = 5;
  int filebytes_size() const;
  void clear_filebytes();
  static const int kFileBytesFieldNumber = 5;
  const ::std::string& filebytes(int index) const;
  ::std::string* mutable_filebytes(int index);
  void set_filebytes(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_filebytes(int index, ::std::string&& value);
  #endif
  void set_filebytes(int index, const char* value);
  void set_filebytes(int index, const void* value, size_t size);
  ::std::string* add_filebytes();
  void add_filebytes(const ::std::string& value);
  #if LANG_CXX11
  void add_filebytes(::std::string&& value);
  #endif
  void add_filebytes(const char* value);
  void add_filebytes(const void* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& filebytes() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_filebytes();

  // string Name = 2;
  void clear_name();
  static const int kNameFieldNumber = 2;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // uint64 Size = 3;
  void clear_size();
  static const int kSizeFieldNumber = 3;
  ::google::protobuf::uint64 size() const;
  void set_size(::google::protobuf::uint64 value);

  // uint32 packetCode = 1;
  void clear_packetcode();
  static const int kPacketCodeFieldNumber = 1;
  ::google::protobuf::uint32 packetcode() const;
  void set_packetcode(::google::protobuf::uint32 value);

  // bool lastPacket = 4;
  void clear_lastpacket();
  static const int kLastPacketFieldNumber = 4;
  bool lastpacket() const;
  void set_lastpacket(bool value);

  // bool Md5 = 7;
  void clear_md5();
  static const int kMd5FieldNumber = 7;
  bool md5() const;
  void set_md5(bool value);

  // uint32 rowId = 6;
  void clear_rowid();
  static const int kRowIdFieldNumber = 6;
  ::google::protobuf::uint32 rowid() const;
  void set_rowid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:network_messages.Job3D)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::std::string> filebytes_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::uint64 size_;
  ::google::protobuf::uint32 packetcode_;
  bool lastpacket_;
  bool md5_;
  ::google::protobuf::uint32 rowid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_message_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// NetServerCommands

// uint32 packetCode = 20;
inline void NetServerCommands::clear_packetcode() {
  packetcode_ = 0u;
}
inline ::google::protobuf::uint32 NetServerCommands::packetcode() const {
  // @@protoc_insertion_point(field_get:network_messages.NetServerCommands.packetCode)
  return packetcode_;
}
inline void NetServerCommands::set_packetcode(::google::protobuf::uint32 value) {
  
  packetcode_ = value;
  // @@protoc_insertion_point(field_set:network_messages.NetServerCommands.packetCode)
}

// uint32 iCalibrState = 1;
inline void NetServerCommands::clear_icalibrstate() {
  icalibrstate_ = 0u;
}
inline ::google::protobuf::uint32 NetServerCommands::icalibrstate() const {
  // @@protoc_insertion_point(field_get:network_messages.NetServerCommands.iCalibrState)
  return icalibrstate_;
}
inline void NetServerCommands::set_icalibrstate(::google::protobuf::uint32 value) {
  
  icalibrstate_ = value;
  // @@protoc_insertion_point(field_set:network_messages.NetServerCommands.iCalibrState)
}

// uint32 iGoPos = 2;
inline void NetServerCommands::clear_igopos() {
  igopos_ = 0u;
}
inline ::google::protobuf::uint32 NetServerCommands::igopos() const {
  // @@protoc_insertion_point(field_get:network_messages.NetServerCommands.iGoPos)
  return igopos_;
}
inline void NetServerCommands::set_igopos(::google::protobuf::uint32 value) {
  
  igopos_ = value;
  // @@protoc_insertion_point(field_set:network_messages.NetServerCommands.iGoPos)
}

// float fMaterialLevelmm = 18;
inline void NetServerCommands::clear_fmateriallevelmm() {
  fmateriallevelmm_ = 0;
}
inline float NetServerCommands::fmateriallevelmm() const {
  // @@protoc_insertion_point(field_get:network_messages.NetServerCommands.fMaterialLevelmm)
  return fmateriallevelmm_;
}
inline void NetServerCommands::set_fmateriallevelmm(float value) {
  
  fmateriallevelmm_ = value;
  // @@protoc_insertion_point(field_set:network_messages.NetServerCommands.fMaterialLevelmm)
}

// float fFillVacuumSec = 19;
inline void NetServerCommands::clear_ffillvacuumsec() {
  ffillvacuumsec_ = 0;
}
inline float NetServerCommands::ffillvacuumsec() const {
  // @@protoc_insertion_point(field_get:network_messages.NetServerCommands.fFillVacuumSec)
  return ffillvacuumsec_;
}
inline void NetServerCommands::set_ffillvacuumsec(float value) {
  
  ffillvacuumsec_ = value;
  // @@protoc_insertion_point(field_set:network_messages.NetServerCommands.fFillVacuumSec)
}

// uint32 iPrintState = 3;
inline void NetServerCommands::clear_iprintstate() {
  iprintstate_ = 0u;
}
inline ::google::protobuf::uint32 NetServerCommands::iprintstate() const {
  // @@protoc_insertion_point(field_get:network_messages.NetServerCommands.iPrintState)
  return iprintstate_;
}
inline void NetServerCommands::set_iprintstate(::google::protobuf::uint32 value) {
  
  iprintstate_ = value;
  // @@protoc_insertion_point(field_set:network_messages.NetServerCommands.iPrintState)
}

// uint32 iMachineStatus = 4;
inline void NetServerCommands::clear_imachinestatus() {
  imachinestatus_ = 0u;
}
inline ::google::protobuf::uint32 NetServerCommands::imachinestatus() const {
  // @@protoc_insertion_point(field_get:network_messages.NetServerCommands.iMachineStatus)
  return imachinestatus_;
}
inline void NetServerCommands::set_imachinestatus(::google::protobuf::uint32 value) {
  
  imachinestatus_ = value;
  // @@protoc_insertion_point(field_set:network_messages.NetServerCommands.iMachineStatus)
}

// uint32 getstatus = 5;
inline void NetServerCommands::clear_getstatus() {
  getstatus_ = 0u;
}
inline ::google::protobuf::uint32 NetServerCommands::getstatus() const {
  // @@protoc_insertion_point(field_get:network_messages.NetServerCommands.getstatus)
  return getstatus_;
}
inline void NetServerCommands::set_getstatus(::google::protobuf::uint32 value) {
  
  getstatus_ = value;
  // @@protoc_insertion_point(field_set:network_messages.NetServerCommands.getstatus)
}

// uint32 materialId = 6;
inline void NetServerCommands::clear_materialid() {
  materialid_ = 0u;
}
inline ::google::protobuf::uint32 NetServerCommands::materialid() const {
  // @@protoc_insertion_point(field_get:network_messages.NetServerCommands.materialId)
  return materialid_;
}
inline void NetServerCommands::set_materialid(::google::protobuf::uint32 value) {
  
  materialid_ = value;
  // @@protoc_insertion_point(field_set:network_messages.NetServerCommands.materialId)
}

// uint32 motionId = 7;
inline void NetServerCommands::clear_motionid() {
  motionid_ = 0u;
}
inline ::google::protobuf::uint32 NetServerCommands::motionid() const {
  // @@protoc_insertion_point(field_get:network_messages.NetServerCommands.motionId)
  return motionid_;
}
inline void NetServerCommands::set_motionid(::google::protobuf::uint32 value) {
  
  motionid_ = value;
  // @@protoc_insertion_point(field_set:network_messages.NetServerCommands.motionId)
}

// uint32 jobId = 23;
inline void NetServerCommands::clear_jobid() {
  jobid_ = 0u;
}
inline ::google::protobuf::uint32 NetServerCommands::jobid() const {
  // @@protoc_insertion_point(field_get:network_messages.NetServerCommands.jobId)
  return jobid_;
}
inline void NetServerCommands::set_jobid(::google::protobuf::uint32 value) {
  
  jobid_ = value;
  // @@protoc_insertion_point(field_set:network_messages.NetServerCommands.jobId)
}

// uint32 iManualMV = 8;
inline void NetServerCommands::clear_imanualmv() {
  imanualmv_ = 0u;
}
inline ::google::protobuf::uint32 NetServerCommands::imanualmv() const {
  // @@protoc_insertion_point(field_get:network_messages.NetServerCommands.iManualMV)
  return imanualmv_;
}
inline void NetServerCommands::set_imanualmv(::google::protobuf::uint32 value) {
  
  imanualmv_ = value;
  // @@protoc_insertion_point(field_set:network_messages.NetServerCommands.iManualMV)
}

// uint32 iMatPat = 9;
inline void NetServerCommands::clear_imatpat() {
  imatpat_ = 0u;
}
inline ::google::protobuf::uint32 NetServerCommands::imatpat() const {
  // @@protoc_insertion_point(field_get:network_messages.NetServerCommands.iMatPat)
  return imatpat_;
}
inline void NetServerCommands::set_imatpat(::google::protobuf::uint32 value) {
  
  imatpat_ = value;
  // @@protoc_insertion_point(field_set:network_messages.NetServerCommands.iMatPat)
}

// uint32 iLicenseStatus = 10;
inline void NetServerCommands::clear_ilicensestatus() {
  ilicensestatus_ = 0u;
}
inline ::google::protobuf::uint32 NetServerCommands::ilicensestatus() const {
  // @@protoc_insertion_point(field_get:network_messages.NetServerCommands.iLicenseStatus)
  return ilicensestatus_;
}
inline void NetServerCommands::set_ilicensestatus(::google::protobuf::uint32 value) {
  
  ilicensestatus_ = value;
  // @@protoc_insertion_point(field_set:network_messages.NetServerCommands.iLicenseStatus)
}

// uint32 iRenewLicense = 11;
inline void NetServerCommands::clear_irenewlicense() {
  irenewlicense_ = 0u;
}
inline ::google::protobuf::uint32 NetServerCommands::irenewlicense() const {
  // @@protoc_insertion_point(field_get:network_messages.NetServerCommands.iRenewLicense)
  return irenewlicense_;
}
inline void NetServerCommands::set_irenewlicense(::google::protobuf::uint32 value) {
  
  irenewlicense_ = value;
  // @@protoc_insertion_point(field_set:network_messages.NetServerCommands.iRenewLicense)
}

// repeated bytes iRequestedCode = 12;
inline int NetServerCommands::irequestedcode_size() const {
  return irequestedcode_.size();
}
inline void NetServerCommands::clear_irequestedcode() {
  irequestedcode_.Clear();
}
inline const ::std::string& NetServerCommands::irequestedcode(int index) const {
  // @@protoc_insertion_point(field_get:network_messages.NetServerCommands.iRequestedCode)
  return irequestedcode_.Get(index);
}
inline ::std::string* NetServerCommands::mutable_irequestedcode(int index) {
  // @@protoc_insertion_point(field_mutable:network_messages.NetServerCommands.iRequestedCode)
  return irequestedcode_.Mutable(index);
}
inline void NetServerCommands::set_irequestedcode(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:network_messages.NetServerCommands.iRequestedCode)
  irequestedcode_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void NetServerCommands::set_irequestedcode(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:network_messages.NetServerCommands.iRequestedCode)
  irequestedcode_.Mutable(index)->assign(std::move(value));
}
#endif
inline void NetServerCommands::set_irequestedcode(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  irequestedcode_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:network_messages.NetServerCommands.iRequestedCode)
}
inline void NetServerCommands::set_irequestedcode(int index, const void* value, size_t size) {
  irequestedcode_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:network_messages.NetServerCommands.iRequestedCode)
}
inline ::std::string* NetServerCommands::add_irequestedcode() {
  // @@protoc_insertion_point(field_add_mutable:network_messages.NetServerCommands.iRequestedCode)
  return irequestedcode_.Add();
}
inline void NetServerCommands::add_irequestedcode(const ::std::string& value) {
  irequestedcode_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:network_messages.NetServerCommands.iRequestedCode)
}
#if LANG_CXX11
inline void NetServerCommands::add_irequestedcode(::std::string&& value) {
  irequestedcode_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:network_messages.NetServerCommands.iRequestedCode)
}
#endif
inline void NetServerCommands::add_irequestedcode(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  irequestedcode_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:network_messages.NetServerCommands.iRequestedCode)
}
inline void NetServerCommands::add_irequestedcode(const void* value, size_t size) {
  irequestedcode_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:network_messages.NetServerCommands.iRequestedCode)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
NetServerCommands::irequestedcode() const {
  // @@protoc_insertion_point(field_list:network_messages.NetServerCommands.iRequestedCode)
  return irequestedcode_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
NetServerCommands::mutable_irequestedcode() {
  // @@protoc_insertion_point(field_mutable_list:network_messages.NetServerCommands.iRequestedCode)
  return &irequestedcode_;
}

// repeated bytes iLicenseKey = 13;
inline int NetServerCommands::ilicensekey_size() const {
  return ilicensekey_.size();
}
inline void NetServerCommands::clear_ilicensekey() {
  ilicensekey_.Clear();
}
inline const ::std::string& NetServerCommands::ilicensekey(int index) const {
  // @@protoc_insertion_point(field_get:network_messages.NetServerCommands.iLicenseKey)
  return ilicensekey_.Get(index);
}
inline ::std::string* NetServerCommands::mutable_ilicensekey(int index) {
  // @@protoc_insertion_point(field_mutable:network_messages.NetServerCommands.iLicenseKey)
  return ilicensekey_.Mutable(index);
}
inline void NetServerCommands::set_ilicensekey(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:network_messages.NetServerCommands.iLicenseKey)
  ilicensekey_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void NetServerCommands::set_ilicensekey(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:network_messages.NetServerCommands.iLicenseKey)
  ilicensekey_.Mutable(index)->assign(std::move(value));
}
#endif
inline void NetServerCommands::set_ilicensekey(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  ilicensekey_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:network_messages.NetServerCommands.iLicenseKey)
}
inline void NetServerCommands::set_ilicensekey(int index, const void* value, size_t size) {
  ilicensekey_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:network_messages.NetServerCommands.iLicenseKey)
}
inline ::std::string* NetServerCommands::add_ilicensekey() {
  // @@protoc_insertion_point(field_add_mutable:network_messages.NetServerCommands.iLicenseKey)
  return ilicensekey_.Add();
}
inline void NetServerCommands::add_ilicensekey(const ::std::string& value) {
  ilicensekey_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:network_messages.NetServerCommands.iLicenseKey)
}
#if LANG_CXX11
inline void NetServerCommands::add_ilicensekey(::std::string&& value) {
  ilicensekey_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:network_messages.NetServerCommands.iLicenseKey)
}
#endif
inline void NetServerCommands::add_ilicensekey(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  ilicensekey_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:network_messages.NetServerCommands.iLicenseKey)
}
inline void NetServerCommands::add_ilicensekey(const void* value, size_t size) {
  ilicensekey_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:network_messages.NetServerCommands.iLicenseKey)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
NetServerCommands::ilicensekey() const {
  // @@protoc_insertion_point(field_list:network_messages.NetServerCommands.iLicenseKey)
  return ilicensekey_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
NetServerCommands::mutable_ilicensekey() {
  // @@protoc_insertion_point(field_mutable_list:network_messages.NetServerCommands.iLicenseKey)
  return &ilicensekey_;
}

// .network_messages.MachineConfig machineConf = 14;
inline bool NetServerCommands::has_machineconf() const {
  return this != internal_default_instance() && machineconf_ != NULL;
}
inline void NetServerCommands::clear_machineconf() {
  if (GetArenaNoVirtual() == NULL && machineconf_ != NULL) {
    delete machineconf_;
  }
  machineconf_ = NULL;
}
inline const ::network_messages::MachineConfig& NetServerCommands::_internal_machineconf() const {
  return *machineconf_;
}
inline const ::network_messages::MachineConfig& NetServerCommands::machineconf() const {
  const ::network_messages::MachineConfig* p = machineconf_;
  // @@protoc_insertion_point(field_get:network_messages.NetServerCommands.machineConf)
  return p != NULL ? *p : *reinterpret_cast<const ::network_messages::MachineConfig*>(
      &::network_messages::_MachineConfig_default_instance_);
}
inline ::network_messages::MachineConfig* NetServerCommands::release_machineconf() {
  // @@protoc_insertion_point(field_release:network_messages.NetServerCommands.machineConf)
  
  ::network_messages::MachineConfig* temp = machineconf_;
  machineconf_ = NULL;
  return temp;
}
inline ::network_messages::MachineConfig* NetServerCommands::mutable_machineconf() {
  
  if (machineconf_ == NULL) {
    auto* p = CreateMaybeMessage<::network_messages::MachineConfig>(GetArenaNoVirtual());
    machineconf_ = p;
  }
  // @@protoc_insertion_point(field_mutable:network_messages.NetServerCommands.machineConf)
  return machineconf_;
}
inline void NetServerCommands::set_allocated_machineconf(::network_messages::MachineConfig* machineconf) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete machineconf_;
  }
  if (machineconf) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      machineconf = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, machineconf, submessage_arena);
    }
    
  } else {
    
  }
  machineconf_ = machineconf;
  // @@protoc_insertion_point(field_set_allocated:network_messages.NetServerCommands.machineConf)
}

// .network_messages.MaterialConfig materialConfig = 15;
inline bool NetServerCommands::has_materialconfig() const {
  return this != internal_default_instance() && materialconfig_ != NULL;
}
inline void NetServerCommands::clear_materialconfig() {
  if (GetArenaNoVirtual() == NULL && materialconfig_ != NULL) {
    delete materialconfig_;
  }
  materialconfig_ = NULL;
}
inline const ::network_messages::MaterialConfig& NetServerCommands::_internal_materialconfig() const {
  return *materialconfig_;
}
inline const ::network_messages::MaterialConfig& NetServerCommands::materialconfig() const {
  const ::network_messages::MaterialConfig* p = materialconfig_;
  // @@protoc_insertion_point(field_get:network_messages.NetServerCommands.materialConfig)
  return p != NULL ? *p : *reinterpret_cast<const ::network_messages::MaterialConfig*>(
      &::network_messages::_MaterialConfig_default_instance_);
}
inline ::network_messages::MaterialConfig* NetServerCommands::release_materialconfig() {
  // @@protoc_insertion_point(field_release:network_messages.NetServerCommands.materialConfig)
  
  ::network_messages::MaterialConfig* temp = materialconfig_;
  materialconfig_ = NULL;
  return temp;
}
inline ::network_messages::MaterialConfig* NetServerCommands::mutable_materialconfig() {
  
  if (materialconfig_ == NULL) {
    auto* p = CreateMaybeMessage<::network_messages::MaterialConfig>(GetArenaNoVirtual());
    materialconfig_ = p;
  }
  // @@protoc_insertion_point(field_mutable:network_messages.NetServerCommands.materialConfig)
  return materialconfig_;
}
inline void NetServerCommands::set_allocated_materialconfig(::network_messages::MaterialConfig* materialconfig) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete materialconfig_;
  }
  if (materialconfig) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      materialconfig = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, materialconfig, submessage_arena);
    }
    
  } else {
    
  }
  materialconfig_ = materialconfig;
  // @@protoc_insertion_point(field_set_allocated:network_messages.NetServerCommands.materialConfig)
}

// .network_messages.MotionConfig motionConfig = 16;
inline bool NetServerCommands::has_motionconfig() const {
  return this != internal_default_instance() && motionconfig_ != NULL;
}
inline void NetServerCommands::clear_motionconfig() {
  if (GetArenaNoVirtual() == NULL && motionconfig_ != NULL) {
    delete motionconfig_;
  }
  motionconfig_ = NULL;
}
inline const ::network_messages::MotionConfig& NetServerCommands::_internal_motionconfig() const {
  return *motionconfig_;
}
inline const ::network_messages::MotionConfig& NetServerCommands::motionconfig() const {
  const ::network_messages::MotionConfig* p = motionconfig_;
  // @@protoc_insertion_point(field_get:network_messages.NetServerCommands.motionConfig)
  return p != NULL ? *p : *reinterpret_cast<const ::network_messages::MotionConfig*>(
      &::network_messages::_MotionConfig_default_instance_);
}
inline ::network_messages::MotionConfig* NetServerCommands::release_motionconfig() {
  // @@protoc_insertion_point(field_release:network_messages.NetServerCommands.motionConfig)
  
  ::network_messages::MotionConfig* temp = motionconfig_;
  motionconfig_ = NULL;
  return temp;
}
inline ::network_messages::MotionConfig* NetServerCommands::mutable_motionconfig() {
  
  if (motionconfig_ == NULL) {
    auto* p = CreateMaybeMessage<::network_messages::MotionConfig>(GetArenaNoVirtual());
    motionconfig_ = p;
  }
  // @@protoc_insertion_point(field_mutable:network_messages.NetServerCommands.motionConfig)
  return motionconfig_;
}
inline void NetServerCommands::set_allocated_motionconfig(::network_messages::MotionConfig* motionconfig) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete motionconfig_;
  }
  if (motionconfig) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      motionconfig = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, motionconfig, submessage_arena);
    }
    
  } else {
    
  }
  motionconfig_ = motionconfig;
  // @@protoc_insertion_point(field_set_allocated:network_messages.NetServerCommands.motionConfig)
}

// .network_messages.Job3D job3D = 17;
inline bool NetServerCommands::has_job3d() const {
  return this != internal_default_instance() && job3d_ != NULL;
}
inline void NetServerCommands::clear_job3d() {
  if (GetArenaNoVirtual() == NULL && job3d_ != NULL) {
    delete job3d_;
  }
  job3d_ = NULL;
}
inline const ::network_messages::Job3D& NetServerCommands::_internal_job3d() const {
  return *job3d_;
}
inline const ::network_messages::Job3D& NetServerCommands::job3d() const {
  const ::network_messages::Job3D* p = job3d_;
  // @@protoc_insertion_point(field_get:network_messages.NetServerCommands.job3D)
  return p != NULL ? *p : *reinterpret_cast<const ::network_messages::Job3D*>(
      &::network_messages::_Job3D_default_instance_);
}
inline ::network_messages::Job3D* NetServerCommands::release_job3d() {
  // @@protoc_insertion_point(field_release:network_messages.NetServerCommands.job3D)
  
  ::network_messages::Job3D* temp = job3d_;
  job3d_ = NULL;
  return temp;
}
inline ::network_messages::Job3D* NetServerCommands::mutable_job3d() {
  
  if (job3d_ == NULL) {
    auto* p = CreateMaybeMessage<::network_messages::Job3D>(GetArenaNoVirtual());
    job3d_ = p;
  }
  // @@protoc_insertion_point(field_mutable:network_messages.NetServerCommands.job3D)
  return job3d_;
}
inline void NetServerCommands::set_allocated_job3d(::network_messages::Job3D* job3d) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete job3d_;
  }
  if (job3d) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      job3d = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, job3d, submessage_arena);
    }
    
  } else {
    
  }
  job3d_ = job3d;
  // @@protoc_insertion_point(field_set_allocated:network_messages.NetServerCommands.job3D)
}

// -------------------------------------------------------------------

// NetClientRes

// uint32 packetCode = 1;
inline void NetClientRes::clear_packetcode() {
  packetcode_ = 0u;
}
inline ::google::protobuf::uint32 NetClientRes::packetcode() const {
  // @@protoc_insertion_point(field_get:network_messages.NetClientRes.packetCode)
  return packetcode_;
}
inline void NetClientRes::set_packetcode(::google::protobuf::uint32 value) {
  
  packetcode_ = value;
  // @@protoc_insertion_point(field_set:network_messages.NetClientRes.packetCode)
}

// repeated .network_messages.MachineConfig confs = 2;
inline int NetClientRes::confs_size() const {
  return confs_.size();
}
inline void NetClientRes::clear_confs() {
  confs_.Clear();
}
inline ::network_messages::MachineConfig* NetClientRes::mutable_confs(int index) {
  // @@protoc_insertion_point(field_mutable:network_messages.NetClientRes.confs)
  return confs_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::network_messages::MachineConfig >*
NetClientRes::mutable_confs() {
  // @@protoc_insertion_point(field_mutable_list:network_messages.NetClientRes.confs)
  return &confs_;
}
inline const ::network_messages::MachineConfig& NetClientRes::confs(int index) const {
  // @@protoc_insertion_point(field_get:network_messages.NetClientRes.confs)
  return confs_.Get(index);
}
inline ::network_messages::MachineConfig* NetClientRes::add_confs() {
  // @@protoc_insertion_point(field_add:network_messages.NetClientRes.confs)
  return confs_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::network_messages::MachineConfig >&
NetClientRes::confs() const {
  // @@protoc_insertion_point(field_list:network_messages.NetClientRes.confs)
  return confs_;
}

// repeated .network_messages.MaterialConfig materials = 3;
inline int NetClientRes::materials_size() const {
  return materials_.size();
}
inline void NetClientRes::clear_materials() {
  materials_.Clear();
}
inline ::network_messages::MaterialConfig* NetClientRes::mutable_materials(int index) {
  // @@protoc_insertion_point(field_mutable:network_messages.NetClientRes.materials)
  return materials_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::network_messages::MaterialConfig >*
NetClientRes::mutable_materials() {
  // @@protoc_insertion_point(field_mutable_list:network_messages.NetClientRes.materials)
  return &materials_;
}
inline const ::network_messages::MaterialConfig& NetClientRes::materials(int index) const {
  // @@protoc_insertion_point(field_get:network_messages.NetClientRes.materials)
  return materials_.Get(index);
}
inline ::network_messages::MaterialConfig* NetClientRes::add_materials() {
  // @@protoc_insertion_point(field_add:network_messages.NetClientRes.materials)
  return materials_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::network_messages::MaterialConfig >&
NetClientRes::materials() const {
  // @@protoc_insertion_point(field_list:network_messages.NetClientRes.materials)
  return materials_;
}

// repeated .network_messages.MotionConfig motions = 4;
inline int NetClientRes::motions_size() const {
  return motions_.size();
}
inline void NetClientRes::clear_motions() {
  motions_.Clear();
}
inline ::network_messages::MotionConfig* NetClientRes::mutable_motions(int index) {
  // @@protoc_insertion_point(field_mutable:network_messages.NetClientRes.motions)
  return motions_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::network_messages::MotionConfig >*
NetClientRes::mutable_motions() {
  // @@protoc_insertion_point(field_mutable_list:network_messages.NetClientRes.motions)
  return &motions_;
}
inline const ::network_messages::MotionConfig& NetClientRes::motions(int index) const {
  // @@protoc_insertion_point(field_get:network_messages.NetClientRes.motions)
  return motions_.Get(index);
}
inline ::network_messages::MotionConfig* NetClientRes::add_motions() {
  // @@protoc_insertion_point(field_add:network_messages.NetClientRes.motions)
  return motions_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::network_messages::MotionConfig >&
NetClientRes::motions() const {
  // @@protoc_insertion_point(field_list:network_messages.NetClientRes.motions)
  return motions_;
}

// repeated .network_messages.Job3D jobs = 5;
inline int NetClientRes::jobs_size() const {
  return jobs_.size();
}
inline void NetClientRes::clear_jobs() {
  jobs_.Clear();
}
inline ::network_messages::Job3D* NetClientRes::mutable_jobs(int index) {
  // @@protoc_insertion_point(field_mutable:network_messages.NetClientRes.jobs)
  return jobs_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::network_messages::Job3D >*
NetClientRes::mutable_jobs() {
  // @@protoc_insertion_point(field_mutable_list:network_messages.NetClientRes.jobs)
  return &jobs_;
}
inline const ::network_messages::Job3D& NetClientRes::jobs(int index) const {
  // @@protoc_insertion_point(field_get:network_messages.NetClientRes.jobs)
  return jobs_.Get(index);
}
inline ::network_messages::Job3D* NetClientRes::add_jobs() {
  // @@protoc_insertion_point(field_add:network_messages.NetClientRes.jobs)
  return jobs_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::network_messages::Job3D >&
NetClientRes::jobs() const {
  // @@protoc_insertion_point(field_list:network_messages.NetClientRes.jobs)
  return jobs_;
}

// string errorMesg = 6;
inline void NetClientRes::clear_errormesg() {
  errormesg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& NetClientRes::errormesg() const {
  // @@protoc_insertion_point(field_get:network_messages.NetClientRes.errorMesg)
  return errormesg_.GetNoArena();
}
inline void NetClientRes::set_errormesg(const ::std::string& value) {
  
  errormesg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:network_messages.NetClientRes.errorMesg)
}
#if LANG_CXX11
inline void NetClientRes::set_errormesg(::std::string&& value) {
  
  errormesg_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:network_messages.NetClientRes.errorMesg)
}
#endif
inline void NetClientRes::set_errormesg(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  errormesg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:network_messages.NetClientRes.errorMesg)
}
inline void NetClientRes::set_errormesg(const char* value, size_t size) {
  
  errormesg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:network_messages.NetClientRes.errorMesg)
}
inline ::std::string* NetClientRes::mutable_errormesg() {
  
  // @@protoc_insertion_point(field_mutable:network_messages.NetClientRes.errorMesg)
  return errormesg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* NetClientRes::release_errormesg() {
  // @@protoc_insertion_point(field_release:network_messages.NetClientRes.errorMesg)
  
  return errormesg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void NetClientRes::set_allocated_errormesg(::std::string* errormesg) {
  if (errormesg != NULL) {
    
  } else {
    
  }
  errormesg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), errormesg);
  // @@protoc_insertion_point(field_set_allocated:network_messages.NetClientRes.errorMesg)
}

// uint32 progress = 7;
inline void NetClientRes::clear_progress() {
  progress_ = 0u;
}
inline ::google::protobuf::uint32 NetClientRes::progress() const {
  // @@protoc_insertion_point(field_get:network_messages.NetClientRes.progress)
  return progress_;
}
inline void NetClientRes::set_progress(::google::protobuf::uint32 value) {
  
  progress_ = value;
  // @@protoc_insertion_point(field_set:network_messages.NetClientRes.progress)
}

// uint64 size = 8;
inline void NetClientRes::clear_size() {
  size_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 NetClientRes::size() const {
  // @@protoc_insertion_point(field_get:network_messages.NetClientRes.size)
  return size_;
}
inline void NetClientRes::set_size(::google::protobuf::uint64 value) {
  
  size_ = value;
  // @@protoc_insertion_point(field_set:network_messages.NetClientRes.size)
}

// uint32 currentSlice = 9;
inline void NetClientRes::clear_currentslice() {
  currentslice_ = 0u;
}
inline ::google::protobuf::uint32 NetClientRes::currentslice() const {
  // @@protoc_insertion_point(field_get:network_messages.NetClientRes.currentSlice)
  return currentslice_;
}
inline void NetClientRes::set_currentslice(::google::protobuf::uint32 value) {
  
  currentslice_ = value;
  // @@protoc_insertion_point(field_set:network_messages.NetClientRes.currentSlice)
}

// uint32 totalSlice = 10;
inline void NetClientRes::clear_totalslice() {
  totalslice_ = 0u;
}
inline ::google::protobuf::uint32 NetClientRes::totalslice() const {
  // @@protoc_insertion_point(field_get:network_messages.NetClientRes.totalSlice)
  return totalslice_;
}
inline void NetClientRes::set_totalslice(::google::protobuf::uint32 value) {
  
  totalslice_ = value;
  // @@protoc_insertion_point(field_set:network_messages.NetClientRes.totalSlice)
}

// uint64 remaining_time = 12;
inline void NetClientRes::clear_remaining_time() {
  remaining_time_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 NetClientRes::remaining_time() const {
  // @@protoc_insertion_point(field_get:network_messages.NetClientRes.remaining_time)
  return remaining_time_;
}
inline void NetClientRes::set_remaining_time(::google::protobuf::uint64 value) {
  
  remaining_time_ = value;
  // @@protoc_insertion_point(field_set:network_messages.NetClientRes.remaining_time)
}

// float sensorVal = 13;
inline void NetClientRes::clear_sensorval() {
  sensorval_ = 0;
}
inline float NetClientRes::sensorval() const {
  // @@protoc_insertion_point(field_get:network_messages.NetClientRes.sensorVal)
  return sensorval_;
}
inline void NetClientRes::set_sensorval(float value) {
  
  sensorval_ = value;
  // @@protoc_insertion_point(field_set:network_messages.NetClientRes.sensorVal)
}

// repeated bytes fileBytes = 11;
inline int NetClientRes::filebytes_size() const {
  return filebytes_.size();
}
inline void NetClientRes::clear_filebytes() {
  filebytes_.Clear();
}
inline const ::std::string& NetClientRes::filebytes(int index) const {
  // @@protoc_insertion_point(field_get:network_messages.NetClientRes.fileBytes)
  return filebytes_.Get(index);
}
inline ::std::string* NetClientRes::mutable_filebytes(int index) {
  // @@protoc_insertion_point(field_mutable:network_messages.NetClientRes.fileBytes)
  return filebytes_.Mutable(index);
}
inline void NetClientRes::set_filebytes(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:network_messages.NetClientRes.fileBytes)
  filebytes_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void NetClientRes::set_filebytes(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:network_messages.NetClientRes.fileBytes)
  filebytes_.Mutable(index)->assign(std::move(value));
}
#endif
inline void NetClientRes::set_filebytes(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  filebytes_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:network_messages.NetClientRes.fileBytes)
}
inline void NetClientRes::set_filebytes(int index, const void* value, size_t size) {
  filebytes_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:network_messages.NetClientRes.fileBytes)
}
inline ::std::string* NetClientRes::add_filebytes() {
  // @@protoc_insertion_point(field_add_mutable:network_messages.NetClientRes.fileBytes)
  return filebytes_.Add();
}
inline void NetClientRes::add_filebytes(const ::std::string& value) {
  filebytes_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:network_messages.NetClientRes.fileBytes)
}
#if LANG_CXX11
inline void NetClientRes::add_filebytes(::std::string&& value) {
  filebytes_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:network_messages.NetClientRes.fileBytes)
}
#endif
inline void NetClientRes::add_filebytes(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  filebytes_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:network_messages.NetClientRes.fileBytes)
}
inline void NetClientRes::add_filebytes(const void* value, size_t size) {
  filebytes_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:network_messages.NetClientRes.fileBytes)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
NetClientRes::filebytes() const {
  // @@protoc_insertion_point(field_list:network_messages.NetClientRes.fileBytes)
  return filebytes_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
NetClientRes::mutable_filebytes() {
  // @@protoc_insertion_point(field_mutable_list:network_messages.NetClientRes.fileBytes)
  return &filebytes_;
}

// bytes Md5 = 14;
inline void NetClientRes::clear_md5() {
  md5_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& NetClientRes::md5() const {
  // @@protoc_insertion_point(field_get:network_messages.NetClientRes.Md5)
  return md5_.GetNoArena();
}
inline void NetClientRes::set_md5(const ::std::string& value) {
  
  md5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:network_messages.NetClientRes.Md5)
}
#if LANG_CXX11
inline void NetClientRes::set_md5(::std::string&& value) {
  
  md5_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:network_messages.NetClientRes.Md5)
}
#endif
inline void NetClientRes::set_md5(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  md5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:network_messages.NetClientRes.Md5)
}
inline void NetClientRes::set_md5(const void* value, size_t size) {
  
  md5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:network_messages.NetClientRes.Md5)
}
inline ::std::string* NetClientRes::mutable_md5() {
  
  // @@protoc_insertion_point(field_mutable:network_messages.NetClientRes.Md5)
  return md5_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* NetClientRes::release_md5() {
  // @@protoc_insertion_point(field_release:network_messages.NetClientRes.Md5)
  
  return md5_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void NetClientRes::set_allocated_md5(::std::string* md5) {
  if (md5 != NULL) {
    
  } else {
    
  }
  md5_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), md5);
  // @@protoc_insertion_point(field_set_allocated:network_messages.NetClientRes.Md5)
}

// -------------------------------------------------------------------

// PrintProgress

// -------------------------------------------------------------------

// MachineConfig

// uint32 packetCode = 1;
inline void MachineConfig::clear_packetcode() {
  packetcode_ = 0u;
}
inline ::google::protobuf::uint32 MachineConfig::packetcode() const {
  // @@protoc_insertion_point(field_get:network_messages.MachineConfig.packetCode)
  return packetcode_;
}
inline void MachineConfig::set_packetcode(::google::protobuf::uint32 value) {
  
  packetcode_ = value;
  // @@protoc_insertion_point(field_set:network_messages.MachineConfig.packetCode)
}

// uint32 ModelCode = 2;
inline void MachineConfig::clear_modelcode() {
  modelcode_ = 0u;
}
inline ::google::protobuf::uint32 MachineConfig::modelcode() const {
  // @@protoc_insertion_point(field_get:network_messages.MachineConfig.ModelCode)
  return modelcode_;
}
inline void MachineConfig::set_modelcode(::google::protobuf::uint32 value) {
  
  modelcode_ = value;
  // @@protoc_insertion_point(field_set:network_messages.MachineConfig.ModelCode)
}

// string MachineNo = 3;
inline void MachineConfig::clear_machineno() {
  machineno_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MachineConfig::machineno() const {
  // @@protoc_insertion_point(field_get:network_messages.MachineConfig.MachineNo)
  return machineno_.GetNoArena();
}
inline void MachineConfig::set_machineno(const ::std::string& value) {
  
  machineno_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:network_messages.MachineConfig.MachineNo)
}
#if LANG_CXX11
inline void MachineConfig::set_machineno(::std::string&& value) {
  
  machineno_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:network_messages.MachineConfig.MachineNo)
}
#endif
inline void MachineConfig::set_machineno(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  machineno_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:network_messages.MachineConfig.MachineNo)
}
inline void MachineConfig::set_machineno(const char* value, size_t size) {
  
  machineno_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:network_messages.MachineConfig.MachineNo)
}
inline ::std::string* MachineConfig::mutable_machineno() {
  
  // @@protoc_insertion_point(field_mutable:network_messages.MachineConfig.MachineNo)
  return machineno_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MachineConfig::release_machineno() {
  // @@protoc_insertion_point(field_release:network_messages.MachineConfig.MachineNo)
  
  return machineno_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MachineConfig::set_allocated_machineno(::std::string* machineno) {
  if (machineno != NULL) {
    
  } else {
    
  }
  machineno_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), machineno);
  // @@protoc_insertion_point(field_set_allocated:network_messages.MachineConfig.MachineNo)
}

// uint32 Version = 4;
inline void MachineConfig::clear_version() {
  version_ = 0u;
}
inline ::google::protobuf::uint32 MachineConfig::version() const {
  // @@protoc_insertion_point(field_get:network_messages.MachineConfig.Version)
  return version_;
}
inline void MachineConfig::set_version(::google::protobuf::uint32 value) {
  
  version_ = value;
  // @@protoc_insertion_point(field_set:network_messages.MachineConfig.Version)
}

// uint32 SubVersion = 5;
inline void MachineConfig::clear_subversion() {
  subversion_ = 0u;
}
inline ::google::protobuf::uint32 MachineConfig::subversion() const {
  // @@protoc_insertion_point(field_get:network_messages.MachineConfig.SubVersion)
  return subversion_;
}
inline void MachineConfig::set_subversion(::google::protobuf::uint32 value) {
  
  subversion_ = value;
  // @@protoc_insertion_point(field_set:network_messages.MachineConfig.SubVersion)
}

// bool NeedLicense = 6;
inline void MachineConfig::clear_needlicense() {
  needlicense_ = false;
}
inline bool MachineConfig::needlicense() const {
  // @@protoc_insertion_point(field_get:network_messages.MachineConfig.NeedLicense)
  return needlicense_;
}
inline void MachineConfig::set_needlicense(bool value) {
  
  needlicense_ = value;
  // @@protoc_insertion_point(field_set:network_messages.MachineConfig.NeedLicense)
}

// bool HasDoor = 13;
inline void MachineConfig::clear_hasdoor() {
  hasdoor_ = false;
}
inline bool MachineConfig::hasdoor() const {
  // @@protoc_insertion_point(field_get:network_messages.MachineConfig.HasDoor)
  return hasdoor_;
}
inline void MachineConfig::set_hasdoor(bool value) {
  
  hasdoor_ = value;
  // @@protoc_insertion_point(field_set:network_messages.MachineConfig.HasDoor)
}

// bool HasErm = 14;
inline void MachineConfig::clear_haserm() {
  haserm_ = false;
}
inline bool MachineConfig::haserm() const {
  // @@protoc_insertion_point(field_get:network_messages.MachineConfig.HasErm)
  return haserm_;
}
inline void MachineConfig::set_haserm(bool value) {
  
  haserm_ = value;
  // @@protoc_insertion_point(field_set:network_messages.MachineConfig.HasErm)
}

// bool BUpTDownConfig = 17;
inline void MachineConfig::clear_buptdownconfig() {
  buptdownconfig_ = false;
}
inline bool MachineConfig::buptdownconfig() const {
  // @@protoc_insertion_point(field_get:network_messages.MachineConfig.BUpTDownConfig)
  return buptdownconfig_;
}
inline void MachineConfig::set_buptdownconfig(bool value) {
  
  buptdownconfig_ = value;
  // @@protoc_insertion_point(field_set:network_messages.MachineConfig.BUpTDownConfig)
}

// float PrinterUnit = 7;
inline void MachineConfig::clear_printerunit() {
  printerunit_ = 0;
}
inline float MachineConfig::printerunit() const {
  // @@protoc_insertion_point(field_get:network_messages.MachineConfig.PrinterUnit)
  return printerunit_;
}
inline void MachineConfig::set_printerunit(float value) {
  
  printerunit_ = value;
  // @@protoc_insertion_point(field_set:network_messages.MachineConfig.PrinterUnit)
}

// uint32 ZUpperLimit = 8;
inline void MachineConfig::clear_zupperlimit() {
  zupperlimit_ = 0u;
}
inline ::google::protobuf::uint32 MachineConfig::zupperlimit() const {
  // @@protoc_insertion_point(field_get:network_messages.MachineConfig.ZUpperLimit)
  return zupperlimit_;
}
inline void MachineConfig::set_zupperlimit(::google::protobuf::uint32 value) {
  
  zupperlimit_ = value;
  // @@protoc_insertion_point(field_set:network_messages.MachineConfig.ZUpperLimit)
}

// uint32 ProjectorProtocol = 9;
inline void MachineConfig::clear_projectorprotocol() {
  projectorprotocol_ = 0u;
}
inline ::google::protobuf::uint32 MachineConfig::projectorprotocol() const {
  // @@protoc_insertion_point(field_get:network_messages.MachineConfig.ProjectorProtocol)
  return projectorprotocol_;
}
inline void MachineConfig::set_projectorprotocol(::google::protobuf::uint32 value) {
  
  projectorprotocol_ = value;
  // @@protoc_insertion_point(field_set:network_messages.MachineConfig.ProjectorProtocol)
}

// uint32 NoOfMaskPoints = 10;
inline void MachineConfig::clear_noofmaskpoints() {
  noofmaskpoints_ = 0u;
}
inline ::google::protobuf::uint32 MachineConfig::noofmaskpoints() const {
  // @@protoc_insertion_point(field_get:network_messages.MachineConfig.NoOfMaskPoints)
  return noofmaskpoints_;
}
inline void MachineConfig::set_noofmaskpoints(::google::protobuf::uint32 value) {
  
  noofmaskpoints_ = value;
  // @@protoc_insertion_point(field_set:network_messages.MachineConfig.NoOfMaskPoints)
}

// uint32 MaxIntensity = 11;
inline void MachineConfig::clear_maxintensity() {
  maxintensity_ = 0u;
}
inline ::google::protobuf::uint32 MachineConfig::maxintensity() const {
  // @@protoc_insertion_point(field_get:network_messages.MachineConfig.MaxIntensity)
  return maxintensity_;
}
inline void MachineConfig::set_maxintensity(::google::protobuf::uint32 value) {
  
  maxintensity_ = value;
  // @@protoc_insertion_point(field_set:network_messages.MachineConfig.MaxIntensity)
}

// uint32 MinIntensity = 12;
inline void MachineConfig::clear_minintensity() {
  minintensity_ = 0u;
}
inline ::google::protobuf::uint32 MachineConfig::minintensity() const {
  // @@protoc_insertion_point(field_get:network_messages.MachineConfig.MinIntensity)
  return minintensity_;
}
inline void MachineConfig::set_minintensity(::google::protobuf::uint32 value) {
  
  minintensity_ = value;
  // @@protoc_insertion_point(field_set:network_messages.MachineConfig.MinIntensity)
}

// uint32 gProjectWidth = 15;
inline void MachineConfig::clear_gprojectwidth() {
  gprojectwidth_ = 0u;
}
inline ::google::protobuf::uint32 MachineConfig::gprojectwidth() const {
  // @@protoc_insertion_point(field_get:network_messages.MachineConfig.gProjectWidth)
  return gprojectwidth_;
}
inline void MachineConfig::set_gprojectwidth(::google::protobuf::uint32 value) {
  
  gprojectwidth_ = value;
  // @@protoc_insertion_point(field_set:network_messages.MachineConfig.gProjectWidth)
}

// uint32 gProjectHeight = 16;
inline void MachineConfig::clear_gprojectheight() {
  gprojectheight_ = 0u;
}
inline ::google::protobuf::uint32 MachineConfig::gprojectheight() const {
  // @@protoc_insertion_point(field_get:network_messages.MachineConfig.gProjectHeight)
  return gprojectheight_;
}
inline void MachineConfig::set_gprojectheight(::google::protobuf::uint32 value) {
  
  gprojectheight_ = value;
  // @@protoc_insertion_point(field_set:network_messages.MachineConfig.gProjectHeight)
}

// uint32 rowId = 18;
inline void MachineConfig::clear_rowid() {
  rowid_ = 0u;
}
inline ::google::protobuf::uint32 MachineConfig::rowid() const {
  // @@protoc_insertion_point(field_get:network_messages.MachineConfig.rowId)
  return rowid_;
}
inline void MachineConfig::set_rowid(::google::protobuf::uint32 value) {
  
  rowid_ = value;
  // @@protoc_insertion_point(field_set:network_messages.MachineConfig.rowId)
}

// uint32 MaxIntensitySensor = 27;
inline void MachineConfig::clear_maxintensitysensor() {
  maxintensitysensor_ = 0u;
}
inline ::google::protobuf::uint32 MachineConfig::maxintensitysensor() const {
  // @@protoc_insertion_point(field_get:network_messages.MachineConfig.MaxIntensitySensor)
  return maxintensitysensor_;
}
inline void MachineConfig::set_maxintensitysensor(::google::protobuf::uint32 value) {
  
  maxintensitysensor_ = value;
  // @@protoc_insertion_point(field_set:network_messages.MachineConfig.MaxIntensitySensor)
}

// uint32 MinIntensitySensor = 28;
inline void MachineConfig::clear_minintensitysensor() {
  minintensitysensor_ = 0u;
}
inline ::google::protobuf::uint32 MachineConfig::minintensitysensor() const {
  // @@protoc_insertion_point(field_get:network_messages.MachineConfig.MinIntensitySensor)
  return minintensitysensor_;
}
inline void MachineConfig::set_minintensitysensor(::google::protobuf::uint32 value) {
  
  minintensitysensor_ = value;
  // @@protoc_insertion_point(field_set:network_messages.MachineConfig.MinIntensitySensor)
}

// bool HasPlunger = 19;
inline void MachineConfig::clear_hasplunger() {
  hasplunger_ = false;
}
inline bool MachineConfig::hasplunger() const {
  // @@protoc_insertion_point(field_get:network_messages.MachineConfig.HasPlunger)
  return hasplunger_;
}
inline void MachineConfig::set_hasplunger(bool value) {
  
  hasplunger_ = value;
  // @@protoc_insertion_point(field_set:network_messages.MachineConfig.HasPlunger)
}

// uint32 TDownZHomePos = 20;
inline void MachineConfig::clear_tdownzhomepos() {
  tdownzhomepos_ = 0u;
}
inline ::google::protobuf::uint32 MachineConfig::tdownzhomepos() const {
  // @@protoc_insertion_point(field_get:network_messages.MachineConfig.TDownZHomePos)
  return tdownzhomepos_;
}
inline void MachineConfig::set_tdownzhomepos(::google::protobuf::uint32 value) {
  
  tdownzhomepos_ = value;
  // @@protoc_insertion_point(field_set:network_messages.MachineConfig.TDownZHomePos)
}

// float vacuumTimer = 21;
inline void MachineConfig::clear_vacuumtimer() {
  vacuumtimer_ = 0;
}
inline float MachineConfig::vacuumtimer() const {
  // @@protoc_insertion_point(field_get:network_messages.MachineConfig.vacuumTimer)
  return vacuumtimer_;
}
inline void MachineConfig::set_vacuumtimer(float value) {
  
  vacuumtimer_ = value;
  // @@protoc_insertion_point(field_set:network_messages.MachineConfig.vacuumTimer)
}

// float SensorSetPointVacuum = 22;
inline void MachineConfig::clear_sensorsetpointvacuum() {
  sensorsetpointvacuum_ = 0;
}
inline float MachineConfig::sensorsetpointvacuum() const {
  // @@protoc_insertion_point(field_get:network_messages.MachineConfig.SensorSetPointVacuum)
  return sensorsetpointvacuum_;
}
inline void MachineConfig::set_sensorsetpointvacuum(float value) {
  
  sensorsetpointvacuum_ = value;
  // @@protoc_insertion_point(field_set:network_messages.MachineConfig.SensorSetPointVacuum)
}

// float SensorSetPoint = 23;
inline void MachineConfig::clear_sensorsetpoint() {
  sensorsetpoint_ = 0;
}
inline float MachineConfig::sensorsetpoint() const {
  // @@protoc_insertion_point(field_get:network_messages.MachineConfig.SensorSetPoint)
  return sensorsetpoint_;
}
inline void MachineConfig::set_sensorsetpoint(float value) {
  
  sensorsetpoint_ = value;
  // @@protoc_insertion_point(field_set:network_messages.MachineConfig.SensorSetPoint)
}

// float SensorThreshold = 24;
inline void MachineConfig::clear_sensorthreshold() {
  sensorthreshold_ = 0;
}
inline float MachineConfig::sensorthreshold() const {
  // @@protoc_insertion_point(field_get:network_messages.MachineConfig.SensorThreshold)
  return sensorthreshold_;
}
inline void MachineConfig::set_sensorthreshold(float value) {
  
  sensorthreshold_ = value;
  // @@protoc_insertion_point(field_set:network_messages.MachineConfig.SensorThreshold)
}

// float XShift = 25;
inline void MachineConfig::clear_xshift() {
  xshift_ = 0;
}
inline float MachineConfig::xshift() const {
  // @@protoc_insertion_point(field_get:network_messages.MachineConfig.XShift)
  return xshift_;
}
inline void MachineConfig::set_xshift(float value) {
  
  xshift_ = value;
  // @@protoc_insertion_point(field_set:network_messages.MachineConfig.XShift)
}

// float YShift = 26;
inline void MachineConfig::clear_yshift() {
  yshift_ = 0;
}
inline float MachineConfig::yshift() const {
  // @@protoc_insertion_point(field_get:network_messages.MachineConfig.YShift)
  return yshift_;
}
inline void MachineConfig::set_yshift(float value) {
  
  yshift_ = value;
  // @@protoc_insertion_point(field_set:network_messages.MachineConfig.YShift)
}

// -------------------------------------------------------------------

// MaterialConfig

// uint32 packetCode = 1;
inline void MaterialConfig::clear_packetcode() {
  packetcode_ = 0u;
}
inline ::google::protobuf::uint32 MaterialConfig::packetcode() const {
  // @@protoc_insertion_point(field_get:network_messages.MaterialConfig.packetCode)
  return packetcode_;
}
inline void MaterialConfig::set_packetcode(::google::protobuf::uint32 value) {
  
  packetcode_ = value;
  // @@protoc_insertion_point(field_set:network_messages.MaterialConfig.packetCode)
}

// string Name = 2;
inline void MaterialConfig::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MaterialConfig::name() const {
  // @@protoc_insertion_point(field_get:network_messages.MaterialConfig.Name)
  return name_.GetNoArena();
}
inline void MaterialConfig::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:network_messages.MaterialConfig.Name)
}
#if LANG_CXX11
inline void MaterialConfig::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:network_messages.MaterialConfig.Name)
}
#endif
inline void MaterialConfig::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:network_messages.MaterialConfig.Name)
}
inline void MaterialConfig::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:network_messages.MaterialConfig.Name)
}
inline ::std::string* MaterialConfig::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:network_messages.MaterialConfig.Name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MaterialConfig::release_name() {
  // @@protoc_insertion_point(field_release:network_messages.MaterialConfig.Name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MaterialConfig::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:network_messages.MaterialConfig.Name)
}

// uint32 LayerThickness = 3;
inline void MaterialConfig::clear_layerthickness() {
  layerthickness_ = 0u;
}
inline ::google::protobuf::uint32 MaterialConfig::layerthickness() const {
  // @@protoc_insertion_point(field_get:network_messages.MaterialConfig.LayerThickness)
  return layerthickness_;
}
inline void MaterialConfig::set_layerthickness(::google::protobuf::uint32 value) {
  
  layerthickness_ = value;
  // @@protoc_insertion_point(field_set:network_messages.MaterialConfig.LayerThickness)
}

// uint32 BurnInLayers = 4;
inline void MaterialConfig::clear_burninlayers() {
  burninlayers_ = 0u;
}
inline ::google::protobuf::uint32 MaterialConfig::burninlayers() const {
  // @@protoc_insertion_point(field_get:network_messages.MaterialConfig.BurnInLayers)
  return burninlayers_;
}
inline void MaterialConfig::set_burninlayers(::google::protobuf::uint32 value) {
  
  burninlayers_ = value;
  // @@protoc_insertion_point(field_set:network_messages.MaterialConfig.BurnInLayers)
}

// float BurnInCureTime = 5;
inline void MaterialConfig::clear_burnincuretime() {
  burnincuretime_ = 0;
}
inline float MaterialConfig::burnincuretime() const {
  // @@protoc_insertion_point(field_get:network_messages.MaterialConfig.BurnInCureTime)
  return burnincuretime_;
}
inline void MaterialConfig::set_burnincuretime(float value) {
  
  burnincuretime_ = value;
  // @@protoc_insertion_point(field_set:network_messages.MaterialConfig.BurnInCureTime)
}

// float NormalCureTime = 6;
inline void MaterialConfig::clear_normalcuretime() {
  normalcuretime_ = 0;
}
inline float MaterialConfig::normalcuretime() const {
  // @@protoc_insertion_point(field_get:network_messages.MaterialConfig.NormalCureTime)
  return normalcuretime_;
}
inline void MaterialConfig::set_normalcuretime(float value) {
  
  normalcuretime_ = value;
  // @@protoc_insertion_point(field_set:network_messages.MaterialConfig.NormalCureTime)
}

// float BurnIntensity = 7;
inline void MaterialConfig::clear_burnintensity() {
  burnintensity_ = 0;
}
inline float MaterialConfig::burnintensity() const {
  // @@protoc_insertion_point(field_get:network_messages.MaterialConfig.BurnIntensity)
  return burnintensity_;
}
inline void MaterialConfig::set_burnintensity(float value) {
  
  burnintensity_ = value;
  // @@protoc_insertion_point(field_set:network_messages.MaterialConfig.BurnIntensity)
}

// float Intensity = 8;
inline void MaterialConfig::clear_intensity() {
  intensity_ = 0;
}
inline float MaterialConfig::intensity() const {
  // @@protoc_insertion_point(field_get:network_messages.MaterialConfig.Intensity)
  return intensity_;
}
inline void MaterialConfig::set_intensity(float value) {
  
  intensity_ = value;
  // @@protoc_insertion_point(field_set:network_messages.MaterialConfig.Intensity)
}

// uint32 rowId = 9;
inline void MaterialConfig::clear_rowid() {
  rowid_ = 0u;
}
inline ::google::protobuf::uint32 MaterialConfig::rowid() const {
  // @@protoc_insertion_point(field_get:network_messages.MaterialConfig.rowId)
  return rowid_;
}
inline void MaterialConfig::set_rowid(::google::protobuf::uint32 value) {
  
  rowid_ = value;
  // @@protoc_insertion_point(field_set:network_messages.MaterialConfig.rowId)
}

// -------------------------------------------------------------------

// MotionConfig

// uint32 packetCode = 1;
inline void MotionConfig::clear_packetcode() {
  packetcode_ = 0u;
}
inline ::google::protobuf::uint32 MotionConfig::packetcode() const {
  // @@protoc_insertion_point(field_get:network_messages.MotionConfig.packetCode)
  return packetcode_;
}
inline void MotionConfig::set_packetcode(::google::protobuf::uint32 value) {
  
  packetcode_ = value;
  // @@protoc_insertion_point(field_set:network_messages.MotionConfig.packetCode)
}

// string Name = 2;
inline void MotionConfig::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MotionConfig::name() const {
  // @@protoc_insertion_point(field_get:network_messages.MotionConfig.Name)
  return name_.GetNoArena();
}
inline void MotionConfig::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:network_messages.MotionConfig.Name)
}
#if LANG_CXX11
inline void MotionConfig::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:network_messages.MotionConfig.Name)
}
#endif
inline void MotionConfig::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:network_messages.MotionConfig.Name)
}
inline void MotionConfig::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:network_messages.MotionConfig.Name)
}
inline ::std::string* MotionConfig::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:network_messages.MotionConfig.Name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MotionConfig::release_name() {
  // @@protoc_insertion_point(field_release:network_messages.MotionConfig.Name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MotionConfig::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:network_messages.MotionConfig.Name)
}

// repeated uint32 Layer_Z_Raise = 3;
inline int MotionConfig::layer_z_raise_size() const {
  return layer_z_raise_.size();
}
inline void MotionConfig::clear_layer_z_raise() {
  layer_z_raise_.Clear();
}
inline ::google::protobuf::uint32 MotionConfig::layer_z_raise(int index) const {
  // @@protoc_insertion_point(field_get:network_messages.MotionConfig.Layer_Z_Raise)
  return layer_z_raise_.Get(index);
}
inline void MotionConfig::set_layer_z_raise(int index, ::google::protobuf::uint32 value) {
  layer_z_raise_.Set(index, value);
  // @@protoc_insertion_point(field_set:network_messages.MotionConfig.Layer_Z_Raise)
}
inline void MotionConfig::add_layer_z_raise(::google::protobuf::uint32 value) {
  layer_z_raise_.Add(value);
  // @@protoc_insertion_point(field_add:network_messages.MotionConfig.Layer_Z_Raise)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
MotionConfig::layer_z_raise() const {
  // @@protoc_insertion_point(field_list:network_messages.MotionConfig.Layer_Z_Raise)
  return layer_z_raise_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
MotionConfig::mutable_layer_z_raise() {
  // @@protoc_insertion_point(field_mutable_list:network_messages.MotionConfig.Layer_Z_Raise)
  return &layer_z_raise_;
}

// repeated uint32 Layer_Z_Lower = 4;
inline int MotionConfig::layer_z_lower_size() const {
  return layer_z_lower_.size();
}
inline void MotionConfig::clear_layer_z_lower() {
  layer_z_lower_.Clear();
}
inline ::google::protobuf::uint32 MotionConfig::layer_z_lower(int index) const {
  // @@protoc_insertion_point(field_get:network_messages.MotionConfig.Layer_Z_Lower)
  return layer_z_lower_.Get(index);
}
inline void MotionConfig::set_layer_z_lower(int index, ::google::protobuf::uint32 value) {
  layer_z_lower_.Set(index, value);
  // @@protoc_insertion_point(field_set:network_messages.MotionConfig.Layer_Z_Lower)
}
inline void MotionConfig::add_layer_z_lower(::google::protobuf::uint32 value) {
  layer_z_lower_.Add(value);
  // @@protoc_insertion_point(field_add:network_messages.MotionConfig.Layer_Z_Lower)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
MotionConfig::layer_z_lower() const {
  // @@protoc_insertion_point(field_list:network_messages.MotionConfig.Layer_Z_Lower)
  return layer_z_lower_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
MotionConfig::mutable_layer_z_lower() {
  // @@protoc_insertion_point(field_mutable_list:network_messages.MotionConfig.Layer_Z_Lower)
  return &layer_z_lower_;
}

// repeated uint32 Layer_Tilt_Raise = 5;
inline int MotionConfig::layer_tilt_raise_size() const {
  return layer_tilt_raise_.size();
}
inline void MotionConfig::clear_layer_tilt_raise() {
  layer_tilt_raise_.Clear();
}
inline ::google::protobuf::uint32 MotionConfig::layer_tilt_raise(int index) const {
  // @@protoc_insertion_point(field_get:network_messages.MotionConfig.Layer_Tilt_Raise)
  return layer_tilt_raise_.Get(index);
}
inline void MotionConfig::set_layer_tilt_raise(int index, ::google::protobuf::uint32 value) {
  layer_tilt_raise_.Set(index, value);
  // @@protoc_insertion_point(field_set:network_messages.MotionConfig.Layer_Tilt_Raise)
}
inline void MotionConfig::add_layer_tilt_raise(::google::protobuf::uint32 value) {
  layer_tilt_raise_.Add(value);
  // @@protoc_insertion_point(field_add:network_messages.MotionConfig.Layer_Tilt_Raise)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
MotionConfig::layer_tilt_raise() const {
  // @@protoc_insertion_point(field_list:network_messages.MotionConfig.Layer_Tilt_Raise)
  return layer_tilt_raise_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
MotionConfig::mutable_layer_tilt_raise() {
  // @@protoc_insertion_point(field_mutable_list:network_messages.MotionConfig.Layer_Tilt_Raise)
  return &layer_tilt_raise_;
}

// repeated uint32 Layer_Tilt_Lower = 6;
inline int MotionConfig::layer_tilt_lower_size() const {
  return layer_tilt_lower_.size();
}
inline void MotionConfig::clear_layer_tilt_lower() {
  layer_tilt_lower_.Clear();
}
inline ::google::protobuf::uint32 MotionConfig::layer_tilt_lower(int index) const {
  // @@protoc_insertion_point(field_get:network_messages.MotionConfig.Layer_Tilt_Lower)
  return layer_tilt_lower_.Get(index);
}
inline void MotionConfig::set_layer_tilt_lower(int index, ::google::protobuf::uint32 value) {
  layer_tilt_lower_.Set(index, value);
  // @@protoc_insertion_point(field_set:network_messages.MotionConfig.Layer_Tilt_Lower)
}
inline void MotionConfig::add_layer_tilt_lower(::google::protobuf::uint32 value) {
  layer_tilt_lower_.Add(value);
  // @@protoc_insertion_point(field_add:network_messages.MotionConfig.Layer_Tilt_Lower)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
MotionConfig::layer_tilt_lower() const {
  // @@protoc_insertion_point(field_list:network_messages.MotionConfig.Layer_Tilt_Lower)
  return layer_tilt_lower_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
MotionConfig::mutable_layer_tilt_lower() {
  // @@protoc_insertion_point(field_mutable_list:network_messages.MotionConfig.Layer_Tilt_Lower)
  return &layer_tilt_lower_;
}

// repeated uint32 Layer_Overlift = 7;
inline int MotionConfig::layer_overlift_size() const {
  return layer_overlift_.size();
}
inline void MotionConfig::clear_layer_overlift() {
  layer_overlift_.Clear();
}
inline ::google::protobuf::uint32 MotionConfig::layer_overlift(int index) const {
  // @@protoc_insertion_point(field_get:network_messages.MotionConfig.Layer_Overlift)
  return layer_overlift_.Get(index);
}
inline void MotionConfig::set_layer_overlift(int index, ::google::protobuf::uint32 value) {
  layer_overlift_.Set(index, value);
  // @@protoc_insertion_point(field_set:network_messages.MotionConfig.Layer_Overlift)
}
inline void MotionConfig::add_layer_overlift(::google::protobuf::uint32 value) {
  layer_overlift_.Add(value);
  // @@protoc_insertion_point(field_add:network_messages.MotionConfig.Layer_Overlift)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
MotionConfig::layer_overlift() const {
  // @@protoc_insertion_point(field_list:network_messages.MotionConfig.Layer_Overlift)
  return layer_overlift_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
MotionConfig::mutable_layer_overlift() {
  // @@protoc_insertion_point(field_mutable_list:network_messages.MotionConfig.Layer_Overlift)
  return &layer_overlift_;
}

// repeated uint32 Layer_Breathe = 8;
inline int MotionConfig::layer_breathe_size() const {
  return layer_breathe_.size();
}
inline void MotionConfig::clear_layer_breathe() {
  layer_breathe_.Clear();
}
inline ::google::protobuf::uint32 MotionConfig::layer_breathe(int index) const {
  // @@protoc_insertion_point(field_get:network_messages.MotionConfig.Layer_Breathe)
  return layer_breathe_.Get(index);
}
inline void MotionConfig::set_layer_breathe(int index, ::google::protobuf::uint32 value) {
  layer_breathe_.Set(index, value);
  // @@protoc_insertion_point(field_set:network_messages.MotionConfig.Layer_Breathe)
}
inline void MotionConfig::add_layer_breathe(::google::protobuf::uint32 value) {
  layer_breathe_.Add(value);
  // @@protoc_insertion_point(field_add:network_messages.MotionConfig.Layer_Breathe)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
MotionConfig::layer_breathe() const {
  // @@protoc_insertion_point(field_list:network_messages.MotionConfig.Layer_Breathe)
  return layer_breathe_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
MotionConfig::mutable_layer_breathe() {
  // @@protoc_insertion_point(field_mutable_list:network_messages.MotionConfig.Layer_Breathe)
  return &layer_breathe_;
}

// repeated uint32 Layer_Settle = 9;
inline int MotionConfig::layer_settle_size() const {
  return layer_settle_.size();
}
inline void MotionConfig::clear_layer_settle() {
  layer_settle_.Clear();
}
inline ::google::protobuf::uint32 MotionConfig::layer_settle(int index) const {
  // @@protoc_insertion_point(field_get:network_messages.MotionConfig.Layer_Settle)
  return layer_settle_.Get(index);
}
inline void MotionConfig::set_layer_settle(int index, ::google::protobuf::uint32 value) {
  layer_settle_.Set(index, value);
  // @@protoc_insertion_point(field_set:network_messages.MotionConfig.Layer_Settle)
}
inline void MotionConfig::add_layer_settle(::google::protobuf::uint32 value) {
  layer_settle_.Add(value);
  // @@protoc_insertion_point(field_add:network_messages.MotionConfig.Layer_Settle)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
MotionConfig::layer_settle() const {
  // @@protoc_insertion_point(field_list:network_messages.MotionConfig.Layer_Settle)
  return layer_settle_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
MotionConfig::mutable_layer_settle() {
  // @@protoc_insertion_point(field_mutable_list:network_messages.MotionConfig.Layer_Settle)
  return &layer_settle_;
}

// repeated uint32 Layer_Tilt_Percent = 10;
inline int MotionConfig::layer_tilt_percent_size() const {
  return layer_tilt_percent_.size();
}
inline void MotionConfig::clear_layer_tilt_percent() {
  layer_tilt_percent_.Clear();
}
inline ::google::protobuf::uint32 MotionConfig::layer_tilt_percent(int index) const {
  // @@protoc_insertion_point(field_get:network_messages.MotionConfig.Layer_Tilt_Percent)
  return layer_tilt_percent_.Get(index);
}
inline void MotionConfig::set_layer_tilt_percent(int index, ::google::protobuf::uint32 value) {
  layer_tilt_percent_.Set(index, value);
  // @@protoc_insertion_point(field_set:network_messages.MotionConfig.Layer_Tilt_Percent)
}
inline void MotionConfig::add_layer_tilt_percent(::google::protobuf::uint32 value) {
  layer_tilt_percent_.Add(value);
  // @@protoc_insertion_point(field_add:network_messages.MotionConfig.Layer_Tilt_Percent)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
MotionConfig::layer_tilt_percent() const {
  // @@protoc_insertion_point(field_list:network_messages.MotionConfig.Layer_Tilt_Percent)
  return layer_tilt_percent_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
MotionConfig::mutable_layer_tilt_percent() {
  // @@protoc_insertion_point(field_mutable_list:network_messages.MotionConfig.Layer_Tilt_Percent)
  return &layer_tilt_percent_;
}

// uint32 Cut_Off_Layers = 11;
inline void MotionConfig::clear_cut_off_layers() {
  cut_off_layers_ = 0u;
}
inline ::google::protobuf::uint32 MotionConfig::cut_off_layers() const {
  // @@protoc_insertion_point(field_get:network_messages.MotionConfig.Cut_Off_Layers)
  return cut_off_layers_;
}
inline void MotionConfig::set_cut_off_layers(::google::protobuf::uint32 value) {
  
  cut_off_layers_ = value;
  // @@protoc_insertion_point(field_set:network_messages.MotionConfig.Cut_Off_Layers)
}

// uint32 Final_OverLift = 12;
inline void MotionConfig::clear_final_overlift() {
  final_overlift_ = 0u;
}
inline ::google::protobuf::uint32 MotionConfig::final_overlift() const {
  // @@protoc_insertion_point(field_get:network_messages.MotionConfig.Final_OverLift)
  return final_overlift_;
}
inline void MotionConfig::set_final_overlift(::google::protobuf::uint32 value) {
  
  final_overlift_ = value;
  // @@protoc_insertion_point(field_set:network_messages.MotionConfig.Final_OverLift)
}

// uint32 Base_Layer_settle = 13;
inline void MotionConfig::clear_base_layer_settle() {
  base_layer_settle_ = 0u;
}
inline ::google::protobuf::uint32 MotionConfig::base_layer_settle() const {
  // @@protoc_insertion_point(field_get:network_messages.MotionConfig.Base_Layer_settle)
  return base_layer_settle_;
}
inline void MotionConfig::set_base_layer_settle(::google::protobuf::uint32 value) {
  
  base_layer_settle_ = value;
  // @@protoc_insertion_point(field_set:network_messages.MotionConfig.Base_Layer_settle)
}

// uint32 rowId = 14;
inline void MotionConfig::clear_rowid() {
  rowid_ = 0u;
}
inline ::google::protobuf::uint32 MotionConfig::rowid() const {
  // @@protoc_insertion_point(field_get:network_messages.MotionConfig.rowId)
  return rowid_;
}
inline void MotionConfig::set_rowid(::google::protobuf::uint32 value) {
  
  rowid_ = value;
  // @@protoc_insertion_point(field_set:network_messages.MotionConfig.rowId)
}

// -------------------------------------------------------------------

// Job3D

// uint32 packetCode = 1;
inline void Job3D::clear_packetcode() {
  packetcode_ = 0u;
}
inline ::google::protobuf::uint32 Job3D::packetcode() const {
  // @@protoc_insertion_point(field_get:network_messages.Job3D.packetCode)
  return packetcode_;
}
inline void Job3D::set_packetcode(::google::protobuf::uint32 value) {
  
  packetcode_ = value;
  // @@protoc_insertion_point(field_set:network_messages.Job3D.packetCode)
}

// string Name = 2;
inline void Job3D::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Job3D::name() const {
  // @@protoc_insertion_point(field_get:network_messages.Job3D.Name)
  return name_.GetNoArena();
}
inline void Job3D::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:network_messages.Job3D.Name)
}
#if LANG_CXX11
inline void Job3D::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:network_messages.Job3D.Name)
}
#endif
inline void Job3D::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:network_messages.Job3D.Name)
}
inline void Job3D::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:network_messages.Job3D.Name)
}
inline ::std::string* Job3D::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:network_messages.Job3D.Name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Job3D::release_name() {
  // @@protoc_insertion_point(field_release:network_messages.Job3D.Name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Job3D::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:network_messages.Job3D.Name)
}

// uint64 Size = 3;
inline void Job3D::clear_size() {
  size_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 Job3D::size() const {
  // @@protoc_insertion_point(field_get:network_messages.Job3D.Size)
  return size_;
}
inline void Job3D::set_size(::google::protobuf::uint64 value) {
  
  size_ = value;
  // @@protoc_insertion_point(field_set:network_messages.Job3D.Size)
}

// bool lastPacket = 4;
inline void Job3D::clear_lastpacket() {
  lastpacket_ = false;
}
inline bool Job3D::lastpacket() const {
  // @@protoc_insertion_point(field_get:network_messages.Job3D.lastPacket)
  return lastpacket_;
}
inline void Job3D::set_lastpacket(bool value) {
  
  lastpacket_ = value;
  // @@protoc_insertion_point(field_set:network_messages.Job3D.lastPacket)
}

// repeated bytes fileBytes = 5;
inline int Job3D::filebytes_size() const {
  return filebytes_.size();
}
inline void Job3D::clear_filebytes() {
  filebytes_.Clear();
}
inline const ::std::string& Job3D::filebytes(int index) const {
  // @@protoc_insertion_point(field_get:network_messages.Job3D.fileBytes)
  return filebytes_.Get(index);
}
inline ::std::string* Job3D::mutable_filebytes(int index) {
  // @@protoc_insertion_point(field_mutable:network_messages.Job3D.fileBytes)
  return filebytes_.Mutable(index);
}
inline void Job3D::set_filebytes(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:network_messages.Job3D.fileBytes)
  filebytes_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void Job3D::set_filebytes(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:network_messages.Job3D.fileBytes)
  filebytes_.Mutable(index)->assign(std::move(value));
}
#endif
inline void Job3D::set_filebytes(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  filebytes_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:network_messages.Job3D.fileBytes)
}
inline void Job3D::set_filebytes(int index, const void* value, size_t size) {
  filebytes_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:network_messages.Job3D.fileBytes)
}
inline ::std::string* Job3D::add_filebytes() {
  // @@protoc_insertion_point(field_add_mutable:network_messages.Job3D.fileBytes)
  return filebytes_.Add();
}
inline void Job3D::add_filebytes(const ::std::string& value) {
  filebytes_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:network_messages.Job3D.fileBytes)
}
#if LANG_CXX11
inline void Job3D::add_filebytes(::std::string&& value) {
  filebytes_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:network_messages.Job3D.fileBytes)
}
#endif
inline void Job3D::add_filebytes(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  filebytes_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:network_messages.Job3D.fileBytes)
}
inline void Job3D::add_filebytes(const void* value, size_t size) {
  filebytes_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:network_messages.Job3D.fileBytes)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
Job3D::filebytes() const {
  // @@protoc_insertion_point(field_list:network_messages.Job3D.fileBytes)
  return filebytes_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
Job3D::mutable_filebytes() {
  // @@protoc_insertion_point(field_mutable_list:network_messages.Job3D.fileBytes)
  return &filebytes_;
}

// uint32 rowId = 6;
inline void Job3D::clear_rowid() {
  rowid_ = 0u;
}
inline ::google::protobuf::uint32 Job3D::rowid() const {
  // @@protoc_insertion_point(field_get:network_messages.Job3D.rowId)
  return rowid_;
}
inline void Job3D::set_rowid(::google::protobuf::uint32 value) {
  
  rowid_ = value;
  // @@protoc_insertion_point(field_set:network_messages.Job3D.rowId)
}

// bool Md5 = 7;
inline void Job3D::clear_md5() {
  md5_ = false;
}
inline bool Job3D::md5() const {
  // @@protoc_insertion_point(field_get:network_messages.Job3D.Md5)
  return md5_;
}
inline void Job3D::set_md5(bool value) {
  
  md5_ = value;
  // @@protoc_insertion_point(field_set:network_messages.Job3D.Md5)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace network_messages

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::network_messages::NetServerCommands_PacketType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::network_messages::NetServerCommands_PacketType>() {
  return ::network_messages::NetServerCommands_PacketType_descriptor();
}
template <> struct is_proto_enum< ::network_messages::NetServerCommands_ProjectorCalibrate> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::network_messages::NetServerCommands_ProjectorCalibrate>() {
  return ::network_messages::NetServerCommands_ProjectorCalibrate_descriptor();
}
template <> struct is_proto_enum< ::network_messages::NetServerCommands_PrintState> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::network_messages::NetServerCommands_PrintState>() {
  return ::network_messages::NetServerCommands_PrintState_descriptor();
}
template <> struct is_proto_enum< ::network_messages::NetServerCommands_ManualMVStep> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::network_messages::NetServerCommands_ManualMVStep>() {
  return ::network_messages::NetServerCommands_ManualMVStep_descriptor();
}
template <> struct is_proto_enum< ::network_messages::NetClientRes_PacketType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::network_messages::NetClientRes_PacketType>() {
  return ::network_messages::NetClientRes_PacketType_descriptor();
}
template <> struct is_proto_enum< ::network_messages::MachineConfig_PacketType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::network_messages::MachineConfig_PacketType>() {
  return ::network_messages::MachineConfig_PacketType_descriptor();
}
template <> struct is_proto_enum< ::network_messages::MaterialConfig_PacketType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::network_messages::MaterialConfig_PacketType>() {
  return ::network_messages::MaterialConfig_PacketType_descriptor();
}
template <> struct is_proto_enum< ::network_messages::MotionConfig_PacketType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::network_messages::MotionConfig_PacketType>() {
  return ::network_messages::MotionConfig_PacketType_descriptor();
}
template <> struct is_proto_enum< ::network_messages::Job3D_PacketType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::network_messages::Job3D_PacketType>() {
  return ::network_messages::Job3D_PacketType_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_message_2eproto
