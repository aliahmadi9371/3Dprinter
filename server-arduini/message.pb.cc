// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: message.proto

#include "message.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_message_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_message_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Job3D;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_message_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_MachineConfig;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_message_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_MaterialConfig;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_message_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_MotionConfig;
}  // namespace protobuf_message_2eproto
namespace network_messages {
class NetServerCommandsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<NetServerCommands>
      _instance;
} _NetServerCommands_default_instance_;
class NetClientResDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<NetClientRes>
      _instance;
} _NetClientRes_default_instance_;
class PrintProgressDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PrintProgress>
      _instance;
} _PrintProgress_default_instance_;
class MachineConfigDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MachineConfig>
      _instance;
} _MachineConfig_default_instance_;
class MaterialConfigDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MaterialConfig>
      _instance;
} _MaterialConfig_default_instance_;
class MotionConfigDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MotionConfig>
      _instance;
} _MotionConfig_default_instance_;
class Job3DDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Job3D>
      _instance;
} _Job3D_default_instance_;
}  // namespace network_messages
namespace protobuf_message_2eproto {
static void InitDefaultsNetServerCommands() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::network_messages::_NetServerCommands_default_instance_;
    new (ptr) ::network_messages::NetServerCommands();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::network_messages::NetServerCommands::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<4> scc_info_NetServerCommands =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 4, InitDefaultsNetServerCommands}, {
      &protobuf_message_2eproto::scc_info_MachineConfig.base,
      &protobuf_message_2eproto::scc_info_MaterialConfig.base,
      &protobuf_message_2eproto::scc_info_MotionConfig.base,
      &protobuf_message_2eproto::scc_info_Job3D.base,}};

static void InitDefaultsNetClientRes() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::network_messages::_NetClientRes_default_instance_;
    new (ptr) ::network_messages::NetClientRes();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::network_messages::NetClientRes::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<4> scc_info_NetClientRes =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 4, InitDefaultsNetClientRes}, {
      &protobuf_message_2eproto::scc_info_MachineConfig.base,
      &protobuf_message_2eproto::scc_info_MaterialConfig.base,
      &protobuf_message_2eproto::scc_info_MotionConfig.base,
      &protobuf_message_2eproto::scc_info_Job3D.base,}};

static void InitDefaultsPrintProgress() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::network_messages::_PrintProgress_default_instance_;
    new (ptr) ::network_messages::PrintProgress();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::network_messages::PrintProgress::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_PrintProgress =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsPrintProgress}, {}};

static void InitDefaultsMachineConfig() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::network_messages::_MachineConfig_default_instance_;
    new (ptr) ::network_messages::MachineConfig();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::network_messages::MachineConfig::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_MachineConfig =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMachineConfig}, {}};

static void InitDefaultsMaterialConfig() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::network_messages::_MaterialConfig_default_instance_;
    new (ptr) ::network_messages::MaterialConfig();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::network_messages::MaterialConfig::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_MaterialConfig =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMaterialConfig}, {}};

static void InitDefaultsMotionConfig() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::network_messages::_MotionConfig_default_instance_;
    new (ptr) ::network_messages::MotionConfig();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::network_messages::MotionConfig::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_MotionConfig =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMotionConfig}, {}};

static void InitDefaultsJob3D() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::network_messages::_Job3D_default_instance_;
    new (ptr) ::network_messages::Job3D();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::network_messages::Job3D::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Job3D =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsJob3D}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_NetServerCommands.base);
  ::google::protobuf::internal::InitSCC(&scc_info_NetClientRes.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PrintProgress.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MachineConfig.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MaterialConfig.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MotionConfig.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Job3D.base);
}

::google::protobuf::Metadata file_level_metadata[7];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[9];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::network_messages::NetServerCommands, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::network_messages::NetServerCommands, packetcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::network_messages::NetServerCommands, icalibrstate_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::network_messages::NetServerCommands, igopos_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::network_messages::NetServerCommands, fmateriallevelmm_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::network_messages::NetServerCommands, ffillvacuumsec_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::network_messages::NetServerCommands, iprintstate_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::network_messages::NetServerCommands, imachinestatus_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::network_messages::NetServerCommands, getstatus_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::network_messages::NetServerCommands, materialid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::network_messages::NetServerCommands, motionid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::network_messages::NetServerCommands, jobid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::network_messages::NetServerCommands, imanualmv_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::network_messages::NetServerCommands, imatpat_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::network_messages::NetServerCommands, ilicensestatus_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::network_messages::NetServerCommands, irenewlicense_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::network_messages::NetServerCommands, irequestedcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::network_messages::NetServerCommands, ilicensekey_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::network_messages::NetServerCommands, machineconf_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::network_messages::NetServerCommands, materialconfig_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::network_messages::NetServerCommands, motionconfig_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::network_messages::NetServerCommands, job3d_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::network_messages::NetClientRes, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::network_messages::NetClientRes, packetcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::network_messages::NetClientRes, confs_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::network_messages::NetClientRes, materials_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::network_messages::NetClientRes, motions_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::network_messages::NetClientRes, jobs_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::network_messages::NetClientRes, errormesg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::network_messages::NetClientRes, progress_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::network_messages::NetClientRes, size_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::network_messages::NetClientRes, currentslice_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::network_messages::NetClientRes, totalslice_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::network_messages::NetClientRes, remaining_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::network_messages::NetClientRes, sensorval_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::network_messages::NetClientRes, filebytes_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::network_messages::NetClientRes, md5_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::network_messages::PrintProgress, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::network_messages::MachineConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::network_messages::MachineConfig, packetcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::network_messages::MachineConfig, modelcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::network_messages::MachineConfig, machineno_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::network_messages::MachineConfig, version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::network_messages::MachineConfig, subversion_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::network_messages::MachineConfig, needlicense_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::network_messages::MachineConfig, hasdoor_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::network_messages::MachineConfig, haserm_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::network_messages::MachineConfig, buptdownconfig_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::network_messages::MachineConfig, printerunit_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::network_messages::MachineConfig, zupperlimit_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::network_messages::MachineConfig, projectorprotocol_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::network_messages::MachineConfig, noofmaskpoints_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::network_messages::MachineConfig, maxintensity_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::network_messages::MachineConfig, minintensity_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::network_messages::MachineConfig, gprojectwidth_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::network_messages::MachineConfig, gprojectheight_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::network_messages::MachineConfig, rowid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::network_messages::MachineConfig, maxintensitysensor_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::network_messages::MachineConfig, minintensitysensor_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::network_messages::MachineConfig, hasplunger_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::network_messages::MachineConfig, tdownzhomepos_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::network_messages::MachineConfig, vacuumtimer_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::network_messages::MachineConfig, sensorsetpointvacuum_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::network_messages::MachineConfig, sensorsetpoint_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::network_messages::MachineConfig, sensorthreshold_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::network_messages::MachineConfig, xshift_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::network_messages::MachineConfig, yshift_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::network_messages::MaterialConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::network_messages::MaterialConfig, packetcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::network_messages::MaterialConfig, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::network_messages::MaterialConfig, layerthickness_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::network_messages::MaterialConfig, burninlayers_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::network_messages::MaterialConfig, burnincuretime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::network_messages::MaterialConfig, normalcuretime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::network_messages::MaterialConfig, burnintensity_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::network_messages::MaterialConfig, intensity_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::network_messages::MaterialConfig, rowid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::network_messages::MotionConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::network_messages::MotionConfig, packetcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::network_messages::MotionConfig, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::network_messages::MotionConfig, layer_z_raise_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::network_messages::MotionConfig, layer_z_lower_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::network_messages::MotionConfig, layer_tilt_raise_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::network_messages::MotionConfig, layer_tilt_lower_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::network_messages::MotionConfig, layer_overlift_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::network_messages::MotionConfig, layer_breathe_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::network_messages::MotionConfig, layer_settle_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::network_messages::MotionConfig, layer_tilt_percent_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::network_messages::MotionConfig, cut_off_layers_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::network_messages::MotionConfig, final_overlift_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::network_messages::MotionConfig, base_layer_settle_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::network_messages::MotionConfig, rowid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::network_messages::Job3D, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::network_messages::Job3D, packetcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::network_messages::Job3D, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::network_messages::Job3D, size_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::network_messages::Job3D, lastpacket_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::network_messages::Job3D, filebytes_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::network_messages::Job3D, rowid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::network_messages::Job3D, md5_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::network_messages::NetServerCommands)},
  { 26, -1, sizeof(::network_messages::NetClientRes)},
  { 45, -1, sizeof(::network_messages::PrintProgress)},
  { 50, -1, sizeof(::network_messages::MachineConfig)},
  { 83, -1, sizeof(::network_messages::MaterialConfig)},
  { 97, -1, sizeof(::network_messages::MotionConfig)},
  { 116, -1, sizeof(::network_messages::Job3D)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::network_messages::_NetServerCommands_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::network_messages::_NetClientRes_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::network_messages::_PrintProgress_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::network_messages::_MachineConfig_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::network_messages::_MaterialConfig_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::network_messages::_MotionConfig_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::network_messages::_Job3D_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "message.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 7);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\rmessage.proto\022\020network_messages\"\377\n\n\021Ne"
      "tServerCommands\022\022\n\npacketCode\030\024 \001(\r\022\024\n\014i"
      "CalibrState\030\001 \001(\r\022\016\n\006iGoPos\030\002 \001(\r\022\030\n\020fMa"
      "terialLevelmm\030\022 \001(\002\022\026\n\016fFillVacuumSec\030\023 "
      "\001(\002\022\023\n\013iPrintState\030\003 \001(\r\022\026\n\016iMachineStat"
      "us\030\004 \001(\r\022\021\n\tgetstatus\030\005 \001(\r\022\022\n\nmaterialI"
      "d\030\006 \001(\r\022\020\n\010motionId\030\007 \001(\r\022\r\n\005jobId\030\027 \001(\r"
      "\022\021\n\tiManualMV\030\010 \001(\r\022\017\n\007iMatPat\030\t \001(\r\022\026\n\016"
      "iLicenseStatus\030\n \001(\r\022\025\n\riRenewLicense\030\013 "
      "\001(\r\022\026\n\016iRequestedCode\030\014 \003(\014\022\023\n\013iLicenseK"
      "ey\030\r \003(\014\0224\n\013machineConf\030\016 \001(\0132\037.network_"
      "messages.MachineConfig\0228\n\016materialConfig"
      "\030\017 \001(\0132 .network_messages.MaterialConfig"
      "\0224\n\014motionConfig\030\020 \001(\0132\036.network_message"
      "s.MotionConfig\022&\n\005job3D\030\021 \001(\0132\027.network_"
      "messages.Job3D\"\272\001\n\nPacketType\022\022\n\016ZeroPac"
      "ketCode\020\000\022\r\n\tProjector\020\001\022\t\n\005Print\020\002\022\020\n\014M"
      "achinStatus\020\003\022\014\n\010Material\020\004\022\n\n\006Motion\020\005\022"
      "\021\n\rLicenseStatus\020\006\022\007\n\003Job\020\007\022\n\n\006Config\020\010\022"
      "\016\n\nLicenseKey\020\t\022\014\n\010ManualMV\020\n\022\014\n\010GetStat"
      "e\020\013\"\357\002\n\022ProjectorCalibrate\022\021\n\rZeroCalibr"
      "ate\020\000\022\022\n\016StartCalibrate\020\007\022\023\n\017FinishCalib"
      "rate\020\010\022\026\n\017GoHomeCalibrate\020\221\376\377\007\022\030\n\021Positi"
      "onCalibrate\020\241\376\377\007\022\034\n\025LEDIntensityCalibrat"
      "e\020\221\377\377\007\022\034\n\025MaterialTestCalibrate\020\201\377\377\007\022\031\n\025"
      "ProjectorOffCalibrate\020\t\022\027\n\020EjectUpCalibr"
      "ate\020\261\376\377\007\022\031\n\022EjectDownCalibrate\020\262\376\377\007\022\r\n\tL"
      "EDTurnOn\020\013\022\016\n\nLEDTurnOff\020\014\022\017\n\013ShowPatter"
      "n\020\r\022\021\n\rMaterialLevel\020\016\022\016\n\nVacuumFill\020\017\022\r"
      "\n\tGetSensor\020\020\"K\n\nPrintState\022\016\n\nZeroPirin"
      "t\020\000\022\016\n\nStartPrint\020\013\022\r\n\tStopPrint\020\014\022\016\n\nPa"
      "usePrint\020\r\"\276\001\n\014ManualMVStep\022\020\n\014ZeroManua"
      "lMV\020\000\022\016\n\nBuidlOneUp\020e\022\020\n\014BuidlOneDown\020f\022"
      "\016\n\nBuidlTenUp\020o\022\020\n\014BuidlTenDown\020p\022\020\n\014Bui"
      "dlFiftyUp\020y\022\022\n\016BuidlFiftyDown\020z\022\n\n\006TiltU"
      "p\020\r\022\014\n\010TiltDown\020\016\022\n\n\006DoorUp\020\017\022\014\n\010DoorDow"
      "n\020\020\"\217\004\n\014NetClientRes\022\022\n\npacketCode\030\001 \001(\r"
      "\022.\n\005confs\030\002 \003(\0132\037.network_messages.Machi"
      "neConfig\0223\n\tmaterials\030\003 \003(\0132 .network_me"
      "ssages.MaterialConfig\022/\n\007motions\030\004 \003(\0132\036"
      ".network_messages.MotionConfig\022%\n\004jobs\030\005"
      " \003(\0132\027.network_messages.Job3D\022\021\n\terrorMe"
      "sg\030\006 \001(\t\022\020\n\010progress\030\007 \001(\r\022\014\n\004size\030\010 \001(\004"
      "\022\024\n\014currentSlice\030\t \001(\r\022\022\n\ntotalSlice\030\n \001"
      "(\r\022\026\n\016remaining_time\030\014 \001(\004\022\021\n\tsensorVal\030"
      "\r \001(\002\022\021\n\tfileBytes\030\013 \003(\014\022\013\n\003Md5\030\016 \001(\014\"\205\001"
      "\n\nPacketType\022\022\n\016ZeroPacketCode\020\000\022\014\n\010NotF"
      "ound\020\001\022\013\n\007Founded\020\002\022\010\n\004Done\020\003\022\t\n\005Error\020\004"
      "\022\014\n\010Progress\020\005\022\t\n\005Ready\020\006\022\013\n\007ReadVal\020\007\022\r"
      "\n\tCheckFile\020\010\"\017\n\rPrintProgress\"\311\005\n\rMachi"
      "neConfig\022\022\n\npacketCode\030\001 \001(\r\022\021\n\tModelCod"
      "e\030\002 \001(\r\022\021\n\tMachineNo\030\003 \001(\t\022\017\n\007Version\030\004 "
      "\001(\r\022\022\n\nSubVersion\030\005 \001(\r\022\023\n\013NeedLicense\030\006"
      " \001(\010\022\017\n\007HasDoor\030\r \001(\010\022\016\n\006HasErm\030\016 \001(\010\022\026\n"
      "\016BUpTDownConfig\030\021 \001(\010\022\023\n\013PrinterUnit\030\007 \001"
      "(\002\022\023\n\013ZUpperLimit\030\010 \001(\r\022\031\n\021ProjectorProt"
      "ocol\030\t \001(\r\022\026\n\016NoOfMaskPoints\030\n \001(\r\022\024\n\014Ma"
      "xIntensity\030\013 \001(\r\022\024\n\014MinIntensity\030\014 \001(\r\022\025"
      "\n\rgProjectWidth\030\017 \001(\r\022\026\n\016gProjectHeight\030"
      "\020 \001(\r\022\r\n\005rowId\030\022 \001(\r\022\032\n\022MaxIntensitySens"
      "or\030\033 \001(\r\022\032\n\022MinIntensitySensor\030\034 \001(\r\022\022\n\n"
      "HasPlunger\030\023 \001(\010\022\025\n\rTDownZHomePos\030\024 \001(\r\022"
      "\023\n\013vacuumTimer\030\025 \001(\002\022\034\n\024SensorSetPointVa"
      "cuum\030\026 \001(\002\022\026\n\016SensorSetPoint\030\027 \001(\002\022\027\n\017Se"
      "nsorThreshold\030\030 \001(\002\022\016\n\006XShift\030\031 \001(\002\022\016\n\006Y"
      "Shift\030\032 \001(\002\"]\n\nPacketType\022\022\n\016ZeroPacketC"
      "ode\020\000\022\007\n\003Add\020\001\022\010\n\004Edit\020\002\022\n\n\006Delete\020\003\022\007\n\003"
      "Get\020\004\022\n\n\006GetALL\020\005\022\007\n\003SET\020\006\"\237\002\n\016MaterialC"
      "onfig\022\022\n\npacketCode\030\001 \001(\r\022\014\n\004Name\030\002 \001(\t\022"
      "\026\n\016LayerThickness\030\003 \001(\r\022\024\n\014BurnInLayers\030"
      "\004 \001(\r\022\026\n\016BurnInCureTime\030\005 \001(\002\022\026\n\016NormalC"
      "ureTime\030\006 \001(\002\022\025\n\rBurnIntensity\030\007 \001(\002\022\021\n\t"
      "Intensity\030\010 \001(\002\022\r\n\005rowId\030\t \001(\r\"T\n\nPacket"
      "Type\022\022\n\016ZeroPacketCode\020\000\022\007\n\003Add\020\001\022\010\n\004Edi"
      "t\020\002\022\n\n\006Delete\020\003\022\007\n\003Get\020\004\022\n\n\006GetALL\020\005\"\243\003\n"
      "\014MotionConfig\022\022\n\npacketCode\030\001 \001(\r\022\014\n\004Nam"
      "e\030\002 \001(\t\022\025\n\rLayer_Z_Raise\030\003 \003(\r\022\025\n\rLayer_"
      "Z_Lower\030\004 \003(\r\022\030\n\020Layer_Tilt_Raise\030\005 \003(\r\022"
      "\030\n\020Layer_Tilt_Lower\030\006 \003(\r\022\026\n\016Layer_Overl"
      "ift\030\007 \003(\r\022\025\n\rLayer_Breathe\030\010 \003(\r\022\024\n\014Laye"
      "r_Settle\030\t \003(\r\022\032\n\022Layer_Tilt_Percent\030\n \003"
      "(\r\022\026\n\016Cut_Off_Layers\030\013 \001(\r\022\026\n\016Final_Over"
      "Lift\030\014 \001(\r\022\031\n\021Base_Layer_settle\030\r \001(\r\022\r\n"
      "\005rowId\030\016 \001(\r\"T\n\nPacketType\022\022\n\016ZeroPacket"
      "Code\020\000\022\007\n\003Add\020\001\022\010\n\004Edit\020\002\022\n\n\006Delete\020\003\022\007\n"
      "\003Get\020\004\022\n\n\006GetALL\020\005\"\337\001\n\005Job3D\022\022\n\npacketCo"
      "de\030\001 \001(\r\022\014\n\004Name\030\002 \001(\t\022\014\n\004Size\030\003 \001(\004\022\022\n\n"
      "lastPacket\030\004 \001(\010\022\021\n\tfileBytes\030\005 \003(\014\022\r\n\005r"
      "owId\030\006 \001(\r\022\013\n\003Md5\030\007 \001(\010\"c\n\nPacketType\022\022\n"
      "\016ZeroPacketCode\020\000\022\007\n\003Add\020\001\022\010\n\004Edit\020\002\022\n\n\006"
      "Delete\020\003\022\007\n\003Get\020\004\022\n\n\006GetALL\020\005\022\r\n\tCheckFi"
      "le\020\006b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 3652);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "message.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_message_2eproto
namespace network_messages {
const ::google::protobuf::EnumDescriptor* NetServerCommands_PacketType_descriptor() {
  protobuf_message_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_message_2eproto::file_level_enum_descriptors[0];
}
bool NetServerCommands_PacketType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const NetServerCommands_PacketType NetServerCommands::ZeroPacketCode;
const NetServerCommands_PacketType NetServerCommands::Projector;
const NetServerCommands_PacketType NetServerCommands::Print;
const NetServerCommands_PacketType NetServerCommands::MachinStatus;
const NetServerCommands_PacketType NetServerCommands::Material;
const NetServerCommands_PacketType NetServerCommands::Motion;
const NetServerCommands_PacketType NetServerCommands::LicenseStatus;
const NetServerCommands_PacketType NetServerCommands::Job;
const NetServerCommands_PacketType NetServerCommands::Config;
const NetServerCommands_PacketType NetServerCommands::LicenseKey;
const NetServerCommands_PacketType NetServerCommands::ManualMV;
const NetServerCommands_PacketType NetServerCommands::GetState;
const NetServerCommands_PacketType NetServerCommands::PacketType_MIN;
const NetServerCommands_PacketType NetServerCommands::PacketType_MAX;
const int NetServerCommands::PacketType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* NetServerCommands_ProjectorCalibrate_descriptor() {
  protobuf_message_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_message_2eproto::file_level_enum_descriptors[1];
}
bool NetServerCommands_ProjectorCalibrate_IsValid(int value) {
  switch (value) {
    case 0:
    case 7:
    case 8:
    case 9:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
    case 16776977:
    case 16776993:
    case 16777009:
    case 16777010:
    case 16777089:
    case 16777105:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const NetServerCommands_ProjectorCalibrate NetServerCommands::ZeroCalibrate;
const NetServerCommands_ProjectorCalibrate NetServerCommands::StartCalibrate;
const NetServerCommands_ProjectorCalibrate NetServerCommands::FinishCalibrate;
const NetServerCommands_ProjectorCalibrate NetServerCommands::GoHomeCalibrate;
const NetServerCommands_ProjectorCalibrate NetServerCommands::PositionCalibrate;
const NetServerCommands_ProjectorCalibrate NetServerCommands::LEDIntensityCalibrate;
const NetServerCommands_ProjectorCalibrate NetServerCommands::MaterialTestCalibrate;
const NetServerCommands_ProjectorCalibrate NetServerCommands::ProjectorOffCalibrate;
const NetServerCommands_ProjectorCalibrate NetServerCommands::EjectUpCalibrate;
const NetServerCommands_ProjectorCalibrate NetServerCommands::EjectDownCalibrate;
const NetServerCommands_ProjectorCalibrate NetServerCommands::LEDTurnOn;
const NetServerCommands_ProjectorCalibrate NetServerCommands::LEDTurnOff;
const NetServerCommands_ProjectorCalibrate NetServerCommands::ShowPattern;
const NetServerCommands_ProjectorCalibrate NetServerCommands::MaterialLevel;
const NetServerCommands_ProjectorCalibrate NetServerCommands::VacuumFill;
const NetServerCommands_ProjectorCalibrate NetServerCommands::GetSensor;
const NetServerCommands_ProjectorCalibrate NetServerCommands::ProjectorCalibrate_MIN;
const NetServerCommands_ProjectorCalibrate NetServerCommands::ProjectorCalibrate_MAX;
const int NetServerCommands::ProjectorCalibrate_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* NetServerCommands_PrintState_descriptor() {
  protobuf_message_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_message_2eproto::file_level_enum_descriptors[2];
}
bool NetServerCommands_PrintState_IsValid(int value) {
  switch (value) {
    case 0:
    case 11:
    case 12:
    case 13:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const NetServerCommands_PrintState NetServerCommands::ZeroPirint;
const NetServerCommands_PrintState NetServerCommands::StartPrint;
const NetServerCommands_PrintState NetServerCommands::StopPrint;
const NetServerCommands_PrintState NetServerCommands::PausePrint;
const NetServerCommands_PrintState NetServerCommands::PrintState_MIN;
const NetServerCommands_PrintState NetServerCommands::PrintState_MAX;
const int NetServerCommands::PrintState_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* NetServerCommands_ManualMVStep_descriptor() {
  protobuf_message_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_message_2eproto::file_level_enum_descriptors[3];
}
bool NetServerCommands_ManualMVStep_IsValid(int value) {
  switch (value) {
    case 0:
    case 13:
    case 14:
    case 15:
    case 16:
    case 101:
    case 102:
    case 111:
    case 112:
    case 121:
    case 122:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const NetServerCommands_ManualMVStep NetServerCommands::ZeroManualMV;
const NetServerCommands_ManualMVStep NetServerCommands::BuidlOneUp;
const NetServerCommands_ManualMVStep NetServerCommands::BuidlOneDown;
const NetServerCommands_ManualMVStep NetServerCommands::BuidlTenUp;
const NetServerCommands_ManualMVStep NetServerCommands::BuidlTenDown;
const NetServerCommands_ManualMVStep NetServerCommands::BuidlFiftyUp;
const NetServerCommands_ManualMVStep NetServerCommands::BuidlFiftyDown;
const NetServerCommands_ManualMVStep NetServerCommands::TiltUp;
const NetServerCommands_ManualMVStep NetServerCommands::TiltDown;
const NetServerCommands_ManualMVStep NetServerCommands::DoorUp;
const NetServerCommands_ManualMVStep NetServerCommands::DoorDown;
const NetServerCommands_ManualMVStep NetServerCommands::ManualMVStep_MIN;
const NetServerCommands_ManualMVStep NetServerCommands::ManualMVStep_MAX;
const int NetServerCommands::ManualMVStep_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* NetClientRes_PacketType_descriptor() {
  protobuf_message_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_message_2eproto::file_level_enum_descriptors[4];
}
bool NetClientRes_PacketType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const NetClientRes_PacketType NetClientRes::ZeroPacketCode;
const NetClientRes_PacketType NetClientRes::NotFound;
const NetClientRes_PacketType NetClientRes::Founded;
const NetClientRes_PacketType NetClientRes::Done;
const NetClientRes_PacketType NetClientRes::Error;
const NetClientRes_PacketType NetClientRes::Progress;
const NetClientRes_PacketType NetClientRes::Ready;
const NetClientRes_PacketType NetClientRes::ReadVal;
const NetClientRes_PacketType NetClientRes::CheckFile;
const NetClientRes_PacketType NetClientRes::PacketType_MIN;
const NetClientRes_PacketType NetClientRes::PacketType_MAX;
const int NetClientRes::PacketType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* MachineConfig_PacketType_descriptor() {
  protobuf_message_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_message_2eproto::file_level_enum_descriptors[5];
}
bool MachineConfig_PacketType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const MachineConfig_PacketType MachineConfig::ZeroPacketCode;
const MachineConfig_PacketType MachineConfig::Add;
const MachineConfig_PacketType MachineConfig::Edit;
const MachineConfig_PacketType MachineConfig::Delete;
const MachineConfig_PacketType MachineConfig::Get;
const MachineConfig_PacketType MachineConfig::GetALL;
const MachineConfig_PacketType MachineConfig::SET;
const MachineConfig_PacketType MachineConfig::PacketType_MIN;
const MachineConfig_PacketType MachineConfig::PacketType_MAX;
const int MachineConfig::PacketType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* MaterialConfig_PacketType_descriptor() {
  protobuf_message_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_message_2eproto::file_level_enum_descriptors[6];
}
bool MaterialConfig_PacketType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const MaterialConfig_PacketType MaterialConfig::ZeroPacketCode;
const MaterialConfig_PacketType MaterialConfig::Add;
const MaterialConfig_PacketType MaterialConfig::Edit;
const MaterialConfig_PacketType MaterialConfig::Delete;
const MaterialConfig_PacketType MaterialConfig::Get;
const MaterialConfig_PacketType MaterialConfig::GetALL;
const MaterialConfig_PacketType MaterialConfig::PacketType_MIN;
const MaterialConfig_PacketType MaterialConfig::PacketType_MAX;
const int MaterialConfig::PacketType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* MotionConfig_PacketType_descriptor() {
  protobuf_message_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_message_2eproto::file_level_enum_descriptors[7];
}
bool MotionConfig_PacketType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const MotionConfig_PacketType MotionConfig::ZeroPacketCode;
const MotionConfig_PacketType MotionConfig::Add;
const MotionConfig_PacketType MotionConfig::Edit;
const MotionConfig_PacketType MotionConfig::Delete;
const MotionConfig_PacketType MotionConfig::Get;
const MotionConfig_PacketType MotionConfig::GetALL;
const MotionConfig_PacketType MotionConfig::PacketType_MIN;
const MotionConfig_PacketType MotionConfig::PacketType_MAX;
const int MotionConfig::PacketType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Job3D_PacketType_descriptor() {
  protobuf_message_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_message_2eproto::file_level_enum_descriptors[8];
}
bool Job3D_PacketType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Job3D_PacketType Job3D::ZeroPacketCode;
const Job3D_PacketType Job3D::Add;
const Job3D_PacketType Job3D::Edit;
const Job3D_PacketType Job3D::Delete;
const Job3D_PacketType Job3D::Get;
const Job3D_PacketType Job3D::GetALL;
const Job3D_PacketType Job3D::CheckFile;
const Job3D_PacketType Job3D::PacketType_MIN;
const Job3D_PacketType Job3D::PacketType_MAX;
const int Job3D::PacketType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

void NetServerCommands::InitAsDefaultInstance() {
  ::network_messages::_NetServerCommands_default_instance_._instance.get_mutable()->machineconf_ = const_cast< ::network_messages::MachineConfig*>(
      ::network_messages::MachineConfig::internal_default_instance());
  ::network_messages::_NetServerCommands_default_instance_._instance.get_mutable()->materialconfig_ = const_cast< ::network_messages::MaterialConfig*>(
      ::network_messages::MaterialConfig::internal_default_instance());
  ::network_messages::_NetServerCommands_default_instance_._instance.get_mutable()->motionconfig_ = const_cast< ::network_messages::MotionConfig*>(
      ::network_messages::MotionConfig::internal_default_instance());
  ::network_messages::_NetServerCommands_default_instance_._instance.get_mutable()->job3d_ = const_cast< ::network_messages::Job3D*>(
      ::network_messages::Job3D::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int NetServerCommands::kPacketCodeFieldNumber;
const int NetServerCommands::kICalibrStateFieldNumber;
const int NetServerCommands::kIGoPosFieldNumber;
const int NetServerCommands::kFMaterialLevelmmFieldNumber;
const int NetServerCommands::kFFillVacuumSecFieldNumber;
const int NetServerCommands::kIPrintStateFieldNumber;
const int NetServerCommands::kIMachineStatusFieldNumber;
const int NetServerCommands::kGetstatusFieldNumber;
const int NetServerCommands::kMaterialIdFieldNumber;
const int NetServerCommands::kMotionIdFieldNumber;
const int NetServerCommands::kJobIdFieldNumber;
const int NetServerCommands::kIManualMVFieldNumber;
const int NetServerCommands::kIMatPatFieldNumber;
const int NetServerCommands::kILicenseStatusFieldNumber;
const int NetServerCommands::kIRenewLicenseFieldNumber;
const int NetServerCommands::kIRequestedCodeFieldNumber;
const int NetServerCommands::kILicenseKeyFieldNumber;
const int NetServerCommands::kMachineConfFieldNumber;
const int NetServerCommands::kMaterialConfigFieldNumber;
const int NetServerCommands::kMotionConfigFieldNumber;
const int NetServerCommands::kJob3DFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

NetServerCommands::NetServerCommands()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_message_2eproto::scc_info_NetServerCommands.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:network_messages.NetServerCommands)
}
NetServerCommands::NetServerCommands(const NetServerCommands& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      irequestedcode_(from.irequestedcode_),
      ilicensekey_(from.ilicensekey_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_machineconf()) {
    machineconf_ = new ::network_messages::MachineConfig(*from.machineconf_);
  } else {
    machineconf_ = NULL;
  }
  if (from.has_materialconfig()) {
    materialconfig_ = new ::network_messages::MaterialConfig(*from.materialconfig_);
  } else {
    materialconfig_ = NULL;
  }
  if (from.has_motionconfig()) {
    motionconfig_ = new ::network_messages::MotionConfig(*from.motionconfig_);
  } else {
    motionconfig_ = NULL;
  }
  if (from.has_job3d()) {
    job3d_ = new ::network_messages::Job3D(*from.job3d_);
  } else {
    job3d_ = NULL;
  }
  ::memcpy(&icalibrstate_, &from.icalibrstate_,
    static_cast<size_t>(reinterpret_cast<char*>(&jobid_) -
    reinterpret_cast<char*>(&icalibrstate_)) + sizeof(jobid_));
  // @@protoc_insertion_point(copy_constructor:network_messages.NetServerCommands)
}

void NetServerCommands::SharedCtor() {
  ::memset(&machineconf_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&jobid_) -
      reinterpret_cast<char*>(&machineconf_)) + sizeof(jobid_));
}

NetServerCommands::~NetServerCommands() {
  // @@protoc_insertion_point(destructor:network_messages.NetServerCommands)
  SharedDtor();
}

void NetServerCommands::SharedDtor() {
  if (this != internal_default_instance()) delete machineconf_;
  if (this != internal_default_instance()) delete materialconfig_;
  if (this != internal_default_instance()) delete motionconfig_;
  if (this != internal_default_instance()) delete job3d_;
}

void NetServerCommands::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* NetServerCommands::descriptor() {
  ::protobuf_message_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_message_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const NetServerCommands& NetServerCommands::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_message_2eproto::scc_info_NetServerCommands.base);
  return *internal_default_instance();
}


void NetServerCommands::Clear() {
// @@protoc_insertion_point(message_clear_start:network_messages.NetServerCommands)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  irequestedcode_.Clear();
  ilicensekey_.Clear();
  if (GetArenaNoVirtual() == NULL && machineconf_ != NULL) {
    delete machineconf_;
  }
  machineconf_ = NULL;
  if (GetArenaNoVirtual() == NULL && materialconfig_ != NULL) {
    delete materialconfig_;
  }
  materialconfig_ = NULL;
  if (GetArenaNoVirtual() == NULL && motionconfig_ != NULL) {
    delete motionconfig_;
  }
  motionconfig_ = NULL;
  if (GetArenaNoVirtual() == NULL && job3d_ != NULL) {
    delete job3d_;
  }
  job3d_ = NULL;
  ::memset(&icalibrstate_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&jobid_) -
      reinterpret_cast<char*>(&icalibrstate_)) + sizeof(jobid_));
  _internal_metadata_.Clear();
}

bool NetServerCommands::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:network_messages.NetServerCommands)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 iCalibrState = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &icalibrstate_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 iGoPos = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &igopos_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 iPrintState = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &iprintstate_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 iMachineStatus = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &imachinestatus_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 getstatus = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &getstatus_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 materialId = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &materialid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 motionId = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &motionid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 iManualMV = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &imanualmv_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 iMatPat = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &imatpat_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 iLicenseStatus = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ilicensestatus_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 iRenewLicense = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &irenewlicense_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated bytes iRequestedCode = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->add_irequestedcode()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated bytes iLicenseKey = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 106 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->add_ilicensekey()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .network_messages.MachineConfig machineConf = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 114 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_machineconf()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .network_messages.MaterialConfig materialConfig = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 122 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_materialconfig()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .network_messages.MotionConfig motionConfig = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(130u /* 130 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_motionconfig()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .network_messages.Job3D job3D = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(138u /* 138 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_job3d()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float fMaterialLevelmm = 18;
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(149u /* 149 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &fmateriallevelmm_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float fFillVacuumSec = 19;
      case 19: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(157u /* 157 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &ffillvacuumsec_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 packetCode = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(160u /* 160 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &packetcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 jobId = 23;
      case 23: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(184u /* 184 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &jobid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:network_messages.NetServerCommands)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:network_messages.NetServerCommands)
  return false;
#undef DO_
}

void NetServerCommands::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:network_messages.NetServerCommands)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 iCalibrState = 1;
  if (this->icalibrstate() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->icalibrstate(), output);
  }

  // uint32 iGoPos = 2;
  if (this->igopos() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->igopos(), output);
  }

  // uint32 iPrintState = 3;
  if (this->iprintstate() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->iprintstate(), output);
  }

  // uint32 iMachineStatus = 4;
  if (this->imachinestatus() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->imachinestatus(), output);
  }

  // uint32 getstatus = 5;
  if (this->getstatus() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->getstatus(), output);
  }

  // uint32 materialId = 6;
  if (this->materialid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->materialid(), output);
  }

  // uint32 motionId = 7;
  if (this->motionid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->motionid(), output);
  }

  // uint32 iManualMV = 8;
  if (this->imanualmv() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->imanualmv(), output);
  }

  // uint32 iMatPat = 9;
  if (this->imatpat() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->imatpat(), output);
  }

  // uint32 iLicenseStatus = 10;
  if (this->ilicensestatus() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(10, this->ilicensestatus(), output);
  }

  // uint32 iRenewLicense = 11;
  if (this->irenewlicense() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(11, this->irenewlicense(), output);
  }

  // repeated bytes iRequestedCode = 12;
  for (int i = 0, n = this->irequestedcode_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      12, this->irequestedcode(i), output);
  }

  // repeated bytes iLicenseKey = 13;
  for (int i = 0, n = this->ilicensekey_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      13, this->ilicensekey(i), output);
  }

  // .network_messages.MachineConfig machineConf = 14;
  if (this->has_machineconf()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      14, this->_internal_machineconf(), output);
  }

  // .network_messages.MaterialConfig materialConfig = 15;
  if (this->has_materialconfig()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      15, this->_internal_materialconfig(), output);
  }

  // .network_messages.MotionConfig motionConfig = 16;
  if (this->has_motionconfig()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      16, this->_internal_motionconfig(), output);
  }

  // .network_messages.Job3D job3D = 17;
  if (this->has_job3d()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      17, this->_internal_job3d(), output);
  }

  // float fMaterialLevelmm = 18;
  if (this->fmateriallevelmm() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(18, this->fmateriallevelmm(), output);
  }

  // float fFillVacuumSec = 19;
  if (this->ffillvacuumsec() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(19, this->ffillvacuumsec(), output);
  }

  // uint32 packetCode = 20;
  if (this->packetcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(20, this->packetcode(), output);
  }

  // uint32 jobId = 23;
  if (this->jobid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(23, this->jobid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:network_messages.NetServerCommands)
}

::google::protobuf::uint8* NetServerCommands::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:network_messages.NetServerCommands)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 iCalibrState = 1;
  if (this->icalibrstate() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->icalibrstate(), target);
  }

  // uint32 iGoPos = 2;
  if (this->igopos() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->igopos(), target);
  }

  // uint32 iPrintState = 3;
  if (this->iprintstate() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->iprintstate(), target);
  }

  // uint32 iMachineStatus = 4;
  if (this->imachinestatus() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->imachinestatus(), target);
  }

  // uint32 getstatus = 5;
  if (this->getstatus() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->getstatus(), target);
  }

  // uint32 materialId = 6;
  if (this->materialid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->materialid(), target);
  }

  // uint32 motionId = 7;
  if (this->motionid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->motionid(), target);
  }

  // uint32 iManualMV = 8;
  if (this->imanualmv() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->imanualmv(), target);
  }

  // uint32 iMatPat = 9;
  if (this->imatpat() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(9, this->imatpat(), target);
  }

  // uint32 iLicenseStatus = 10;
  if (this->ilicensestatus() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(10, this->ilicensestatus(), target);
  }

  // uint32 iRenewLicense = 11;
  if (this->irenewlicense() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(11, this->irenewlicense(), target);
  }

  // repeated bytes iRequestedCode = 12;
  for (int i = 0, n = this->irequestedcode_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBytesToArray(12, this->irequestedcode(i), target);
  }

  // repeated bytes iLicenseKey = 13;
  for (int i = 0, n = this->ilicensekey_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBytesToArray(13, this->ilicensekey(i), target);
  }

  // .network_messages.MachineConfig machineConf = 14;
  if (this->has_machineconf()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        14, this->_internal_machineconf(), deterministic, target);
  }

  // .network_messages.MaterialConfig materialConfig = 15;
  if (this->has_materialconfig()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        15, this->_internal_materialconfig(), deterministic, target);
  }

  // .network_messages.MotionConfig motionConfig = 16;
  if (this->has_motionconfig()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        16, this->_internal_motionconfig(), deterministic, target);
  }

  // .network_messages.Job3D job3D = 17;
  if (this->has_job3d()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        17, this->_internal_job3d(), deterministic, target);
  }

  // float fMaterialLevelmm = 18;
  if (this->fmateriallevelmm() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(18, this->fmateriallevelmm(), target);
  }

  // float fFillVacuumSec = 19;
  if (this->ffillvacuumsec() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(19, this->ffillvacuumsec(), target);
  }

  // uint32 packetCode = 20;
  if (this->packetcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(20, this->packetcode(), target);
  }

  // uint32 jobId = 23;
  if (this->jobid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(23, this->jobid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:network_messages.NetServerCommands)
  return target;
}

size_t NetServerCommands::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:network_messages.NetServerCommands)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated bytes iRequestedCode = 12;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->irequestedcode_size());
  for (int i = 0, n = this->irequestedcode_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
      this->irequestedcode(i));
  }

  // repeated bytes iLicenseKey = 13;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->ilicensekey_size());
  for (int i = 0, n = this->ilicensekey_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
      this->ilicensekey(i));
  }

  // .network_messages.MachineConfig machineConf = 14;
  if (this->has_machineconf()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *machineconf_);
  }

  // .network_messages.MaterialConfig materialConfig = 15;
  if (this->has_materialconfig()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *materialconfig_);
  }

  // .network_messages.MotionConfig motionConfig = 16;
  if (this->has_motionconfig()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *motionconfig_);
  }

  // .network_messages.Job3D job3D = 17;
  if (this->has_job3d()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *job3d_);
  }

  // uint32 iCalibrState = 1;
  if (this->icalibrstate() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->icalibrstate());
  }

  // uint32 iGoPos = 2;
  if (this->igopos() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->igopos());
  }

  // uint32 iPrintState = 3;
  if (this->iprintstate() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->iprintstate());
  }

  // uint32 iMachineStatus = 4;
  if (this->imachinestatus() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->imachinestatus());
  }

  // uint32 getstatus = 5;
  if (this->getstatus() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->getstatus());
  }

  // uint32 materialId = 6;
  if (this->materialid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->materialid());
  }

  // uint32 motionId = 7;
  if (this->motionid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->motionid());
  }

  // uint32 iManualMV = 8;
  if (this->imanualmv() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->imanualmv());
  }

  // uint32 iMatPat = 9;
  if (this->imatpat() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->imatpat());
  }

  // uint32 iLicenseStatus = 10;
  if (this->ilicensestatus() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->ilicensestatus());
  }

  // uint32 iRenewLicense = 11;
  if (this->irenewlicense() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->irenewlicense());
  }

  // float fMaterialLevelmm = 18;
  if (this->fmateriallevelmm() != 0) {
    total_size += 2 + 4;
  }

  // float fFillVacuumSec = 19;
  if (this->ffillvacuumsec() != 0) {
    total_size += 2 + 4;
  }

  // uint32 packetCode = 20;
  if (this->packetcode() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->packetcode());
  }

  // uint32 jobId = 23;
  if (this->jobid() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->jobid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void NetServerCommands::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:network_messages.NetServerCommands)
  GOOGLE_DCHECK_NE(&from, this);
  const NetServerCommands* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const NetServerCommands>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:network_messages.NetServerCommands)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:network_messages.NetServerCommands)
    MergeFrom(*source);
  }
}

void NetServerCommands::MergeFrom(const NetServerCommands& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:network_messages.NetServerCommands)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  irequestedcode_.MergeFrom(from.irequestedcode_);
  ilicensekey_.MergeFrom(from.ilicensekey_);
  if (from.has_machineconf()) {
    mutable_machineconf()->::network_messages::MachineConfig::MergeFrom(from.machineconf());
  }
  if (from.has_materialconfig()) {
    mutable_materialconfig()->::network_messages::MaterialConfig::MergeFrom(from.materialconfig());
  }
  if (from.has_motionconfig()) {
    mutable_motionconfig()->::network_messages::MotionConfig::MergeFrom(from.motionconfig());
  }
  if (from.has_job3d()) {
    mutable_job3d()->::network_messages::Job3D::MergeFrom(from.job3d());
  }
  if (from.icalibrstate() != 0) {
    set_icalibrstate(from.icalibrstate());
  }
  if (from.igopos() != 0) {
    set_igopos(from.igopos());
  }
  if (from.iprintstate() != 0) {
    set_iprintstate(from.iprintstate());
  }
  if (from.imachinestatus() != 0) {
    set_imachinestatus(from.imachinestatus());
  }
  if (from.getstatus() != 0) {
    set_getstatus(from.getstatus());
  }
  if (from.materialid() != 0) {
    set_materialid(from.materialid());
  }
  if (from.motionid() != 0) {
    set_motionid(from.motionid());
  }
  if (from.imanualmv() != 0) {
    set_imanualmv(from.imanualmv());
  }
  if (from.imatpat() != 0) {
    set_imatpat(from.imatpat());
  }
  if (from.ilicensestatus() != 0) {
    set_ilicensestatus(from.ilicensestatus());
  }
  if (from.irenewlicense() != 0) {
    set_irenewlicense(from.irenewlicense());
  }
  if (from.fmateriallevelmm() != 0) {
    set_fmateriallevelmm(from.fmateriallevelmm());
  }
  if (from.ffillvacuumsec() != 0) {
    set_ffillvacuumsec(from.ffillvacuumsec());
  }
  if (from.packetcode() != 0) {
    set_packetcode(from.packetcode());
  }
  if (from.jobid() != 0) {
    set_jobid(from.jobid());
  }
}

void NetServerCommands::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:network_messages.NetServerCommands)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NetServerCommands::CopyFrom(const NetServerCommands& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:network_messages.NetServerCommands)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NetServerCommands::IsInitialized() const {
  return true;
}

void NetServerCommands::Swap(NetServerCommands* other) {
  if (other == this) return;
  InternalSwap(other);
}
void NetServerCommands::InternalSwap(NetServerCommands* other) {
  using std::swap;
  irequestedcode_.InternalSwap(CastToBase(&other->irequestedcode_));
  ilicensekey_.InternalSwap(CastToBase(&other->ilicensekey_));
  swap(machineconf_, other->machineconf_);
  swap(materialconfig_, other->materialconfig_);
  swap(motionconfig_, other->motionconfig_);
  swap(job3d_, other->job3d_);
  swap(icalibrstate_, other->icalibrstate_);
  swap(igopos_, other->igopos_);
  swap(iprintstate_, other->iprintstate_);
  swap(imachinestatus_, other->imachinestatus_);
  swap(getstatus_, other->getstatus_);
  swap(materialid_, other->materialid_);
  swap(motionid_, other->motionid_);
  swap(imanualmv_, other->imanualmv_);
  swap(imatpat_, other->imatpat_);
  swap(ilicensestatus_, other->ilicensestatus_);
  swap(irenewlicense_, other->irenewlicense_);
  swap(fmateriallevelmm_, other->fmateriallevelmm_);
  swap(ffillvacuumsec_, other->ffillvacuumsec_);
  swap(packetcode_, other->packetcode_);
  swap(jobid_, other->jobid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata NetServerCommands::GetMetadata() const {
  protobuf_message_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_message_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void NetClientRes::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int NetClientRes::kPacketCodeFieldNumber;
const int NetClientRes::kConfsFieldNumber;
const int NetClientRes::kMaterialsFieldNumber;
const int NetClientRes::kMotionsFieldNumber;
const int NetClientRes::kJobsFieldNumber;
const int NetClientRes::kErrorMesgFieldNumber;
const int NetClientRes::kProgressFieldNumber;
const int NetClientRes::kSizeFieldNumber;
const int NetClientRes::kCurrentSliceFieldNumber;
const int NetClientRes::kTotalSliceFieldNumber;
const int NetClientRes::kRemainingTimeFieldNumber;
const int NetClientRes::kSensorValFieldNumber;
const int NetClientRes::kFileBytesFieldNumber;
const int NetClientRes::kMd5FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

NetClientRes::NetClientRes()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_message_2eproto::scc_info_NetClientRes.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:network_messages.NetClientRes)
}
NetClientRes::NetClientRes(const NetClientRes& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      confs_(from.confs_),
      materials_(from.materials_),
      motions_(from.motions_),
      jobs_(from.jobs_),
      filebytes_(from.filebytes_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  errormesg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.errormesg().size() > 0) {
    errormesg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.errormesg_);
  }
  md5_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.md5().size() > 0) {
    md5_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.md5_);
  }
  ::memcpy(&packetcode_, &from.packetcode_,
    static_cast<size_t>(reinterpret_cast<char*>(&sensorval_) -
    reinterpret_cast<char*>(&packetcode_)) + sizeof(sensorval_));
  // @@protoc_insertion_point(copy_constructor:network_messages.NetClientRes)
}

void NetClientRes::SharedCtor() {
  errormesg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  md5_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&packetcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&sensorval_) -
      reinterpret_cast<char*>(&packetcode_)) + sizeof(sensorval_));
}

NetClientRes::~NetClientRes() {
  // @@protoc_insertion_point(destructor:network_messages.NetClientRes)
  SharedDtor();
}

void NetClientRes::SharedDtor() {
  errormesg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  md5_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void NetClientRes::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* NetClientRes::descriptor() {
  ::protobuf_message_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_message_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const NetClientRes& NetClientRes::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_message_2eproto::scc_info_NetClientRes.base);
  return *internal_default_instance();
}


void NetClientRes::Clear() {
// @@protoc_insertion_point(message_clear_start:network_messages.NetClientRes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  confs_.Clear();
  materials_.Clear();
  motions_.Clear();
  jobs_.Clear();
  filebytes_.Clear();
  errormesg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  md5_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&packetcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&sensorval_) -
      reinterpret_cast<char*>(&packetcode_)) + sizeof(sensorval_));
  _internal_metadata_.Clear();
}

bool NetClientRes::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:network_messages.NetClientRes)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 packetCode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &packetcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .network_messages.MachineConfig confs = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_confs()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .network_messages.MaterialConfig materials = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_materials()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .network_messages.MotionConfig motions = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_motions()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .network_messages.Job3D jobs = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_jobs()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string errorMesg = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_errormesg()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->errormesg().data(), static_cast<int>(this->errormesg().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "network_messages.NetClientRes.errorMesg"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 progress = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &progress_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 size = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 currentSlice = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &currentslice_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 totalSlice = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &totalslice_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated bytes fileBytes = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->add_filebytes()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 remaining_time = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &remaining_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float sensorVal = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(109u /* 109 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &sensorval_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes Md5 = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 114 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_md5()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:network_messages.NetClientRes)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:network_messages.NetClientRes)
  return false;
#undef DO_
}

void NetClientRes::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:network_messages.NetClientRes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 packetCode = 1;
  if (this->packetcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->packetcode(), output);
  }

  // repeated .network_messages.MachineConfig confs = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->confs_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->confs(static_cast<int>(i)),
      output);
  }

  // repeated .network_messages.MaterialConfig materials = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->materials_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->materials(static_cast<int>(i)),
      output);
  }

  // repeated .network_messages.MotionConfig motions = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->motions_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4,
      this->motions(static_cast<int>(i)),
      output);
  }

  // repeated .network_messages.Job3D jobs = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->jobs_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5,
      this->jobs(static_cast<int>(i)),
      output);
  }

  // string errorMesg = 6;
  if (this->errormesg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->errormesg().data(), static_cast<int>(this->errormesg().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "network_messages.NetClientRes.errorMesg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->errormesg(), output);
  }

  // uint32 progress = 7;
  if (this->progress() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->progress(), output);
  }

  // uint64 size = 8;
  if (this->size() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(8, this->size(), output);
  }

  // uint32 currentSlice = 9;
  if (this->currentslice() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->currentslice(), output);
  }

  // uint32 totalSlice = 10;
  if (this->totalslice() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(10, this->totalslice(), output);
  }

  // repeated bytes fileBytes = 11;
  for (int i = 0, n = this->filebytes_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      11, this->filebytes(i), output);
  }

  // uint64 remaining_time = 12;
  if (this->remaining_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(12, this->remaining_time(), output);
  }

  // float sensorVal = 13;
  if (this->sensorval() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(13, this->sensorval(), output);
  }

  // bytes Md5 = 14;
  if (this->md5().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      14, this->md5(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:network_messages.NetClientRes)
}

::google::protobuf::uint8* NetClientRes::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:network_messages.NetClientRes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 packetCode = 1;
  if (this->packetcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->packetcode(), target);
  }

  // repeated .network_messages.MachineConfig confs = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->confs_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->confs(static_cast<int>(i)), deterministic, target);
  }

  // repeated .network_messages.MaterialConfig materials = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->materials_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->materials(static_cast<int>(i)), deterministic, target);
  }

  // repeated .network_messages.MotionConfig motions = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->motions_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->motions(static_cast<int>(i)), deterministic, target);
  }

  // repeated .network_messages.Job3D jobs = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->jobs_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->jobs(static_cast<int>(i)), deterministic, target);
  }

  // string errorMesg = 6;
  if (this->errormesg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->errormesg().data(), static_cast<int>(this->errormesg().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "network_messages.NetClientRes.errorMesg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->errormesg(), target);
  }

  // uint32 progress = 7;
  if (this->progress() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->progress(), target);
  }

  // uint64 size = 8;
  if (this->size() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(8, this->size(), target);
  }

  // uint32 currentSlice = 9;
  if (this->currentslice() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(9, this->currentslice(), target);
  }

  // uint32 totalSlice = 10;
  if (this->totalslice() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(10, this->totalslice(), target);
  }

  // repeated bytes fileBytes = 11;
  for (int i = 0, n = this->filebytes_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBytesToArray(11, this->filebytes(i), target);
  }

  // uint64 remaining_time = 12;
  if (this->remaining_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(12, this->remaining_time(), target);
  }

  // float sensorVal = 13;
  if (this->sensorval() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(13, this->sensorval(), target);
  }

  // bytes Md5 = 14;
  if (this->md5().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        14, this->md5(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:network_messages.NetClientRes)
  return target;
}

size_t NetClientRes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:network_messages.NetClientRes)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .network_messages.MachineConfig confs = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->confs_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->confs(static_cast<int>(i)));
    }
  }

  // repeated .network_messages.MaterialConfig materials = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->materials_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->materials(static_cast<int>(i)));
    }
  }

  // repeated .network_messages.MotionConfig motions = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->motions_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->motions(static_cast<int>(i)));
    }
  }

  // repeated .network_messages.Job3D jobs = 5;
  {
    unsigned int count = static_cast<unsigned int>(this->jobs_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->jobs(static_cast<int>(i)));
    }
  }

  // repeated bytes fileBytes = 11;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->filebytes_size());
  for (int i = 0, n = this->filebytes_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
      this->filebytes(i));
  }

  // string errorMesg = 6;
  if (this->errormesg().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->errormesg());
  }

  // bytes Md5 = 14;
  if (this->md5().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->md5());
  }

  // uint32 packetCode = 1;
  if (this->packetcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->packetcode());
  }

  // uint32 progress = 7;
  if (this->progress() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->progress());
  }

  // uint64 size = 8;
  if (this->size() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->size());
  }

  // uint32 currentSlice = 9;
  if (this->currentslice() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->currentslice());
  }

  // uint32 totalSlice = 10;
  if (this->totalslice() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->totalslice());
  }

  // uint64 remaining_time = 12;
  if (this->remaining_time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->remaining_time());
  }

  // float sensorVal = 13;
  if (this->sensorval() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void NetClientRes::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:network_messages.NetClientRes)
  GOOGLE_DCHECK_NE(&from, this);
  const NetClientRes* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const NetClientRes>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:network_messages.NetClientRes)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:network_messages.NetClientRes)
    MergeFrom(*source);
  }
}

void NetClientRes::MergeFrom(const NetClientRes& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:network_messages.NetClientRes)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  confs_.MergeFrom(from.confs_);
  materials_.MergeFrom(from.materials_);
  motions_.MergeFrom(from.motions_);
  jobs_.MergeFrom(from.jobs_);
  filebytes_.MergeFrom(from.filebytes_);
  if (from.errormesg().size() > 0) {

    errormesg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.errormesg_);
  }
  if (from.md5().size() > 0) {

    md5_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.md5_);
  }
  if (from.packetcode() != 0) {
    set_packetcode(from.packetcode());
  }
  if (from.progress() != 0) {
    set_progress(from.progress());
  }
  if (from.size() != 0) {
    set_size(from.size());
  }
  if (from.currentslice() != 0) {
    set_currentslice(from.currentslice());
  }
  if (from.totalslice() != 0) {
    set_totalslice(from.totalslice());
  }
  if (from.remaining_time() != 0) {
    set_remaining_time(from.remaining_time());
  }
  if (from.sensorval() != 0) {
    set_sensorval(from.sensorval());
  }
}

void NetClientRes::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:network_messages.NetClientRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NetClientRes::CopyFrom(const NetClientRes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:network_messages.NetClientRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NetClientRes::IsInitialized() const {
  return true;
}

void NetClientRes::Swap(NetClientRes* other) {
  if (other == this) return;
  InternalSwap(other);
}
void NetClientRes::InternalSwap(NetClientRes* other) {
  using std::swap;
  CastToBase(&confs_)->InternalSwap(CastToBase(&other->confs_));
  CastToBase(&materials_)->InternalSwap(CastToBase(&other->materials_));
  CastToBase(&motions_)->InternalSwap(CastToBase(&other->motions_));
  CastToBase(&jobs_)->InternalSwap(CastToBase(&other->jobs_));
  filebytes_.InternalSwap(CastToBase(&other->filebytes_));
  errormesg_.Swap(&other->errormesg_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  md5_.Swap(&other->md5_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(packetcode_, other->packetcode_);
  swap(progress_, other->progress_);
  swap(size_, other->size_);
  swap(currentslice_, other->currentslice_);
  swap(totalslice_, other->totalslice_);
  swap(remaining_time_, other->remaining_time_);
  swap(sensorval_, other->sensorval_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata NetClientRes::GetMetadata() const {
  protobuf_message_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_message_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PrintProgress::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PrintProgress::PrintProgress()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_message_2eproto::scc_info_PrintProgress.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:network_messages.PrintProgress)
}
PrintProgress::PrintProgress(const PrintProgress& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:network_messages.PrintProgress)
}

void PrintProgress::SharedCtor() {
}

PrintProgress::~PrintProgress() {
  // @@protoc_insertion_point(destructor:network_messages.PrintProgress)
  SharedDtor();
}

void PrintProgress::SharedDtor() {
}

void PrintProgress::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PrintProgress::descriptor() {
  ::protobuf_message_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_message_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PrintProgress& PrintProgress::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_message_2eproto::scc_info_PrintProgress.base);
  return *internal_default_instance();
}


void PrintProgress::Clear() {
// @@protoc_insertion_point(message_clear_start:network_messages.PrintProgress)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool PrintProgress::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:network_messages.PrintProgress)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:network_messages.PrintProgress)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:network_messages.PrintProgress)
  return false;
#undef DO_
}

void PrintProgress::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:network_messages.PrintProgress)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:network_messages.PrintProgress)
}

::google::protobuf::uint8* PrintProgress::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:network_messages.PrintProgress)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:network_messages.PrintProgress)
  return target;
}

size_t PrintProgress::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:network_messages.PrintProgress)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PrintProgress::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:network_messages.PrintProgress)
  GOOGLE_DCHECK_NE(&from, this);
  const PrintProgress* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PrintProgress>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:network_messages.PrintProgress)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:network_messages.PrintProgress)
    MergeFrom(*source);
  }
}

void PrintProgress::MergeFrom(const PrintProgress& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:network_messages.PrintProgress)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void PrintProgress::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:network_messages.PrintProgress)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PrintProgress::CopyFrom(const PrintProgress& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:network_messages.PrintProgress)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PrintProgress::IsInitialized() const {
  return true;
}

void PrintProgress::Swap(PrintProgress* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PrintProgress::InternalSwap(PrintProgress* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PrintProgress::GetMetadata() const {
  protobuf_message_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_message_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MachineConfig::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MachineConfig::kPacketCodeFieldNumber;
const int MachineConfig::kModelCodeFieldNumber;
const int MachineConfig::kMachineNoFieldNumber;
const int MachineConfig::kVersionFieldNumber;
const int MachineConfig::kSubVersionFieldNumber;
const int MachineConfig::kNeedLicenseFieldNumber;
const int MachineConfig::kHasDoorFieldNumber;
const int MachineConfig::kHasErmFieldNumber;
const int MachineConfig::kBUpTDownConfigFieldNumber;
const int MachineConfig::kPrinterUnitFieldNumber;
const int MachineConfig::kZUpperLimitFieldNumber;
const int MachineConfig::kProjectorProtocolFieldNumber;
const int MachineConfig::kNoOfMaskPointsFieldNumber;
const int MachineConfig::kMaxIntensityFieldNumber;
const int MachineConfig::kMinIntensityFieldNumber;
const int MachineConfig::kGProjectWidthFieldNumber;
const int MachineConfig::kGProjectHeightFieldNumber;
const int MachineConfig::kRowIdFieldNumber;
const int MachineConfig::kMaxIntensitySensorFieldNumber;
const int MachineConfig::kMinIntensitySensorFieldNumber;
const int MachineConfig::kHasPlungerFieldNumber;
const int MachineConfig::kTDownZHomePosFieldNumber;
const int MachineConfig::kVacuumTimerFieldNumber;
const int MachineConfig::kSensorSetPointVacuumFieldNumber;
const int MachineConfig::kSensorSetPointFieldNumber;
const int MachineConfig::kSensorThresholdFieldNumber;
const int MachineConfig::kXShiftFieldNumber;
const int MachineConfig::kYShiftFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MachineConfig::MachineConfig()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_message_2eproto::scc_info_MachineConfig.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:network_messages.MachineConfig)
}
MachineConfig::MachineConfig(const MachineConfig& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  machineno_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.machineno().size() > 0) {
    machineno_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.machineno_);
  }
  ::memcpy(&packetcode_, &from.packetcode_,
    static_cast<size_t>(reinterpret_cast<char*>(&minintensitysensor_) -
    reinterpret_cast<char*>(&packetcode_)) + sizeof(minintensitysensor_));
  // @@protoc_insertion_point(copy_constructor:network_messages.MachineConfig)
}

void MachineConfig::SharedCtor() {
  machineno_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&packetcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&minintensitysensor_) -
      reinterpret_cast<char*>(&packetcode_)) + sizeof(minintensitysensor_));
}

MachineConfig::~MachineConfig() {
  // @@protoc_insertion_point(destructor:network_messages.MachineConfig)
  SharedDtor();
}

void MachineConfig::SharedDtor() {
  machineno_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void MachineConfig::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* MachineConfig::descriptor() {
  ::protobuf_message_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_message_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MachineConfig& MachineConfig::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_message_2eproto::scc_info_MachineConfig.base);
  return *internal_default_instance();
}


void MachineConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:network_messages.MachineConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  machineno_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&packetcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&minintensitysensor_) -
      reinterpret_cast<char*>(&packetcode_)) + sizeof(minintensitysensor_));
  _internal_metadata_.Clear();
}

bool MachineConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:network_messages.MachineConfig)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 packetCode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &packetcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 ModelCode = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &modelcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string MachineNo = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_machineno()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->machineno().data(), static_cast<int>(this->machineno().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "network_messages.MachineConfig.MachineNo"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 Version = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &version_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 SubVersion = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &subversion_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool NeedLicense = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &needlicense_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float PrinterUnit = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(61u /* 61 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &printerunit_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 ZUpperLimit = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &zupperlimit_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 ProjectorProtocol = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &projectorprotocol_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 NoOfMaskPoints = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &noofmaskpoints_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 MaxIntensity = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &maxintensity_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 MinIntensity = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &minintensity_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool HasDoor = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &hasdoor_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool HasErm = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 112 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &haserm_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 gProjectWidth = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u /* 120 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &gprojectwidth_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 gProjectHeight = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(128u /* 128 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &gprojectheight_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool BUpTDownConfig = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(136u /* 136 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &buptdownconfig_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 rowId = 18;
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(144u /* 144 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &rowid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool HasPlunger = 19;
      case 19: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(152u /* 152 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &hasplunger_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 TDownZHomePos = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(160u /* 160 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &tdownzhomepos_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float vacuumTimer = 21;
      case 21: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(173u /* 173 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &vacuumtimer_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float SensorSetPointVacuum = 22;
      case 22: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(181u /* 181 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &sensorsetpointvacuum_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float SensorSetPoint = 23;
      case 23: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(189u /* 189 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &sensorsetpoint_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float SensorThreshold = 24;
      case 24: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(197u /* 197 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &sensorthreshold_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float XShift = 25;
      case 25: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(205u /* 205 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &xshift_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float YShift = 26;
      case 26: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(213u /* 213 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &yshift_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 MaxIntensitySensor = 27;
      case 27: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(216u /* 216 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &maxintensitysensor_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 MinIntensitySensor = 28;
      case 28: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(224u /* 224 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &minintensitysensor_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:network_messages.MachineConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:network_messages.MachineConfig)
  return false;
#undef DO_
}

void MachineConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:network_messages.MachineConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 packetCode = 1;
  if (this->packetcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->packetcode(), output);
  }

  // uint32 ModelCode = 2;
  if (this->modelcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->modelcode(), output);
  }

  // string MachineNo = 3;
  if (this->machineno().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->machineno().data(), static_cast<int>(this->machineno().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "network_messages.MachineConfig.MachineNo");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->machineno(), output);
  }

  // uint32 Version = 4;
  if (this->version() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->version(), output);
  }

  // uint32 SubVersion = 5;
  if (this->subversion() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->subversion(), output);
  }

  // bool NeedLicense = 6;
  if (this->needlicense() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->needlicense(), output);
  }

  // float PrinterUnit = 7;
  if (this->printerunit() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(7, this->printerunit(), output);
  }

  // uint32 ZUpperLimit = 8;
  if (this->zupperlimit() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->zupperlimit(), output);
  }

  // uint32 ProjectorProtocol = 9;
  if (this->projectorprotocol() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->projectorprotocol(), output);
  }

  // uint32 NoOfMaskPoints = 10;
  if (this->noofmaskpoints() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(10, this->noofmaskpoints(), output);
  }

  // uint32 MaxIntensity = 11;
  if (this->maxintensity() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(11, this->maxintensity(), output);
  }

  // uint32 MinIntensity = 12;
  if (this->minintensity() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(12, this->minintensity(), output);
  }

  // bool HasDoor = 13;
  if (this->hasdoor() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(13, this->hasdoor(), output);
  }

  // bool HasErm = 14;
  if (this->haserm() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(14, this->haserm(), output);
  }

  // uint32 gProjectWidth = 15;
  if (this->gprojectwidth() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(15, this->gprojectwidth(), output);
  }

  // uint32 gProjectHeight = 16;
  if (this->gprojectheight() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(16, this->gprojectheight(), output);
  }

  // bool BUpTDownConfig = 17;
  if (this->buptdownconfig() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(17, this->buptdownconfig(), output);
  }

  // uint32 rowId = 18;
  if (this->rowid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(18, this->rowid(), output);
  }

  // bool HasPlunger = 19;
  if (this->hasplunger() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(19, this->hasplunger(), output);
  }

  // uint32 TDownZHomePos = 20;
  if (this->tdownzhomepos() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(20, this->tdownzhomepos(), output);
  }

  // float vacuumTimer = 21;
  if (this->vacuumtimer() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(21, this->vacuumtimer(), output);
  }

  // float SensorSetPointVacuum = 22;
  if (this->sensorsetpointvacuum() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(22, this->sensorsetpointvacuum(), output);
  }

  // float SensorSetPoint = 23;
  if (this->sensorsetpoint() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(23, this->sensorsetpoint(), output);
  }

  // float SensorThreshold = 24;
  if (this->sensorthreshold() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(24, this->sensorthreshold(), output);
  }

  // float XShift = 25;
  if (this->xshift() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(25, this->xshift(), output);
  }

  // float YShift = 26;
  if (this->yshift() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(26, this->yshift(), output);
  }

  // uint32 MaxIntensitySensor = 27;
  if (this->maxintensitysensor() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(27, this->maxintensitysensor(), output);
  }

  // uint32 MinIntensitySensor = 28;
  if (this->minintensitysensor() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(28, this->minintensitysensor(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:network_messages.MachineConfig)
}

::google::protobuf::uint8* MachineConfig::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:network_messages.MachineConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 packetCode = 1;
  if (this->packetcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->packetcode(), target);
  }

  // uint32 ModelCode = 2;
  if (this->modelcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->modelcode(), target);
  }

  // string MachineNo = 3;
  if (this->machineno().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->machineno().data(), static_cast<int>(this->machineno().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "network_messages.MachineConfig.MachineNo");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->machineno(), target);
  }

  // uint32 Version = 4;
  if (this->version() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->version(), target);
  }

  // uint32 SubVersion = 5;
  if (this->subversion() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->subversion(), target);
  }

  // bool NeedLicense = 6;
  if (this->needlicense() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(6, this->needlicense(), target);
  }

  // float PrinterUnit = 7;
  if (this->printerunit() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(7, this->printerunit(), target);
  }

  // uint32 ZUpperLimit = 8;
  if (this->zupperlimit() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->zupperlimit(), target);
  }

  // uint32 ProjectorProtocol = 9;
  if (this->projectorprotocol() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(9, this->projectorprotocol(), target);
  }

  // uint32 NoOfMaskPoints = 10;
  if (this->noofmaskpoints() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(10, this->noofmaskpoints(), target);
  }

  // uint32 MaxIntensity = 11;
  if (this->maxintensity() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(11, this->maxintensity(), target);
  }

  // uint32 MinIntensity = 12;
  if (this->minintensity() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(12, this->minintensity(), target);
  }

  // bool HasDoor = 13;
  if (this->hasdoor() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(13, this->hasdoor(), target);
  }

  // bool HasErm = 14;
  if (this->haserm() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(14, this->haserm(), target);
  }

  // uint32 gProjectWidth = 15;
  if (this->gprojectwidth() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(15, this->gprojectwidth(), target);
  }

  // uint32 gProjectHeight = 16;
  if (this->gprojectheight() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(16, this->gprojectheight(), target);
  }

  // bool BUpTDownConfig = 17;
  if (this->buptdownconfig() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(17, this->buptdownconfig(), target);
  }

  // uint32 rowId = 18;
  if (this->rowid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(18, this->rowid(), target);
  }

  // bool HasPlunger = 19;
  if (this->hasplunger() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(19, this->hasplunger(), target);
  }

  // uint32 TDownZHomePos = 20;
  if (this->tdownzhomepos() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(20, this->tdownzhomepos(), target);
  }

  // float vacuumTimer = 21;
  if (this->vacuumtimer() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(21, this->vacuumtimer(), target);
  }

  // float SensorSetPointVacuum = 22;
  if (this->sensorsetpointvacuum() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(22, this->sensorsetpointvacuum(), target);
  }

  // float SensorSetPoint = 23;
  if (this->sensorsetpoint() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(23, this->sensorsetpoint(), target);
  }

  // float SensorThreshold = 24;
  if (this->sensorthreshold() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(24, this->sensorthreshold(), target);
  }

  // float XShift = 25;
  if (this->xshift() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(25, this->xshift(), target);
  }

  // float YShift = 26;
  if (this->yshift() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(26, this->yshift(), target);
  }

  // uint32 MaxIntensitySensor = 27;
  if (this->maxintensitysensor() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(27, this->maxintensitysensor(), target);
  }

  // uint32 MinIntensitySensor = 28;
  if (this->minintensitysensor() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(28, this->minintensitysensor(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:network_messages.MachineConfig)
  return target;
}

size_t MachineConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:network_messages.MachineConfig)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string MachineNo = 3;
  if (this->machineno().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->machineno());
  }

  // uint32 packetCode = 1;
  if (this->packetcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->packetcode());
  }

  // uint32 ModelCode = 2;
  if (this->modelcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->modelcode());
  }

  // uint32 Version = 4;
  if (this->version() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->version());
  }

  // uint32 SubVersion = 5;
  if (this->subversion() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->subversion());
  }

  // float PrinterUnit = 7;
  if (this->printerunit() != 0) {
    total_size += 1 + 4;
  }

  // uint32 ZUpperLimit = 8;
  if (this->zupperlimit() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->zupperlimit());
  }

  // uint32 ProjectorProtocol = 9;
  if (this->projectorprotocol() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->projectorprotocol());
  }

  // uint32 NoOfMaskPoints = 10;
  if (this->noofmaskpoints() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->noofmaskpoints());
  }

  // uint32 MaxIntensity = 11;
  if (this->maxintensity() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->maxintensity());
  }

  // uint32 MinIntensity = 12;
  if (this->minintensity() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->minintensity());
  }

  // bool NeedLicense = 6;
  if (this->needlicense() != 0) {
    total_size += 1 + 1;
  }

  // bool HasDoor = 13;
  if (this->hasdoor() != 0) {
    total_size += 1 + 1;
  }

  // bool HasErm = 14;
  if (this->haserm() != 0) {
    total_size += 1 + 1;
  }

  // bool BUpTDownConfig = 17;
  if (this->buptdownconfig() != 0) {
    total_size += 2 + 1;
  }

  // uint32 gProjectWidth = 15;
  if (this->gprojectwidth() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->gprojectwidth());
  }

  // uint32 gProjectHeight = 16;
  if (this->gprojectheight() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->gprojectheight());
  }

  // uint32 rowId = 18;
  if (this->rowid() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->rowid());
  }

  // bool HasPlunger = 19;
  if (this->hasplunger() != 0) {
    total_size += 2 + 1;
  }

  // uint32 TDownZHomePos = 20;
  if (this->tdownzhomepos() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->tdownzhomepos());
  }

  // float vacuumTimer = 21;
  if (this->vacuumtimer() != 0) {
    total_size += 2 + 4;
  }

  // float SensorSetPointVacuum = 22;
  if (this->sensorsetpointvacuum() != 0) {
    total_size += 2 + 4;
  }

  // float SensorSetPoint = 23;
  if (this->sensorsetpoint() != 0) {
    total_size += 2 + 4;
  }

  // float SensorThreshold = 24;
  if (this->sensorthreshold() != 0) {
    total_size += 2 + 4;
  }

  // float XShift = 25;
  if (this->xshift() != 0) {
    total_size += 2 + 4;
  }

  // float YShift = 26;
  if (this->yshift() != 0) {
    total_size += 2 + 4;
  }

  // uint32 MaxIntensitySensor = 27;
  if (this->maxintensitysensor() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->maxintensitysensor());
  }

  // uint32 MinIntensitySensor = 28;
  if (this->minintensitysensor() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->minintensitysensor());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MachineConfig::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:network_messages.MachineConfig)
  GOOGLE_DCHECK_NE(&from, this);
  const MachineConfig* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MachineConfig>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:network_messages.MachineConfig)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:network_messages.MachineConfig)
    MergeFrom(*source);
  }
}

void MachineConfig::MergeFrom(const MachineConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:network_messages.MachineConfig)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.machineno().size() > 0) {

    machineno_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.machineno_);
  }
  if (from.packetcode() != 0) {
    set_packetcode(from.packetcode());
  }
  if (from.modelcode() != 0) {
    set_modelcode(from.modelcode());
  }
  if (from.version() != 0) {
    set_version(from.version());
  }
  if (from.subversion() != 0) {
    set_subversion(from.subversion());
  }
  if (from.printerunit() != 0) {
    set_printerunit(from.printerunit());
  }
  if (from.zupperlimit() != 0) {
    set_zupperlimit(from.zupperlimit());
  }
  if (from.projectorprotocol() != 0) {
    set_projectorprotocol(from.projectorprotocol());
  }
  if (from.noofmaskpoints() != 0) {
    set_noofmaskpoints(from.noofmaskpoints());
  }
  if (from.maxintensity() != 0) {
    set_maxintensity(from.maxintensity());
  }
  if (from.minintensity() != 0) {
    set_minintensity(from.minintensity());
  }
  if (from.needlicense() != 0) {
    set_needlicense(from.needlicense());
  }
  if (from.hasdoor() != 0) {
    set_hasdoor(from.hasdoor());
  }
  if (from.haserm() != 0) {
    set_haserm(from.haserm());
  }
  if (from.buptdownconfig() != 0) {
    set_buptdownconfig(from.buptdownconfig());
  }
  if (from.gprojectwidth() != 0) {
    set_gprojectwidth(from.gprojectwidth());
  }
  if (from.gprojectheight() != 0) {
    set_gprojectheight(from.gprojectheight());
  }
  if (from.rowid() != 0) {
    set_rowid(from.rowid());
  }
  if (from.hasplunger() != 0) {
    set_hasplunger(from.hasplunger());
  }
  if (from.tdownzhomepos() != 0) {
    set_tdownzhomepos(from.tdownzhomepos());
  }
  if (from.vacuumtimer() != 0) {
    set_vacuumtimer(from.vacuumtimer());
  }
  if (from.sensorsetpointvacuum() != 0) {
    set_sensorsetpointvacuum(from.sensorsetpointvacuum());
  }
  if (from.sensorsetpoint() != 0) {
    set_sensorsetpoint(from.sensorsetpoint());
  }
  if (from.sensorthreshold() != 0) {
    set_sensorthreshold(from.sensorthreshold());
  }
  if (from.xshift() != 0) {
    set_xshift(from.xshift());
  }
  if (from.yshift() != 0) {
    set_yshift(from.yshift());
  }
  if (from.maxintensitysensor() != 0) {
    set_maxintensitysensor(from.maxintensitysensor());
  }
  if (from.minintensitysensor() != 0) {
    set_minintensitysensor(from.minintensitysensor());
  }
}

void MachineConfig::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:network_messages.MachineConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MachineConfig::CopyFrom(const MachineConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:network_messages.MachineConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MachineConfig::IsInitialized() const {
  return true;
}

void MachineConfig::Swap(MachineConfig* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MachineConfig::InternalSwap(MachineConfig* other) {
  using std::swap;
  machineno_.Swap(&other->machineno_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(packetcode_, other->packetcode_);
  swap(modelcode_, other->modelcode_);
  swap(version_, other->version_);
  swap(subversion_, other->subversion_);
  swap(printerunit_, other->printerunit_);
  swap(zupperlimit_, other->zupperlimit_);
  swap(projectorprotocol_, other->projectorprotocol_);
  swap(noofmaskpoints_, other->noofmaskpoints_);
  swap(maxintensity_, other->maxintensity_);
  swap(minintensity_, other->minintensity_);
  swap(needlicense_, other->needlicense_);
  swap(hasdoor_, other->hasdoor_);
  swap(haserm_, other->haserm_);
  swap(buptdownconfig_, other->buptdownconfig_);
  swap(gprojectwidth_, other->gprojectwidth_);
  swap(gprojectheight_, other->gprojectheight_);
  swap(rowid_, other->rowid_);
  swap(hasplunger_, other->hasplunger_);
  swap(tdownzhomepos_, other->tdownzhomepos_);
  swap(vacuumtimer_, other->vacuumtimer_);
  swap(sensorsetpointvacuum_, other->sensorsetpointvacuum_);
  swap(sensorsetpoint_, other->sensorsetpoint_);
  swap(sensorthreshold_, other->sensorthreshold_);
  swap(xshift_, other->xshift_);
  swap(yshift_, other->yshift_);
  swap(maxintensitysensor_, other->maxintensitysensor_);
  swap(minintensitysensor_, other->minintensitysensor_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata MachineConfig::GetMetadata() const {
  protobuf_message_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_message_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MaterialConfig::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MaterialConfig::kPacketCodeFieldNumber;
const int MaterialConfig::kNameFieldNumber;
const int MaterialConfig::kLayerThicknessFieldNumber;
const int MaterialConfig::kBurnInLayersFieldNumber;
const int MaterialConfig::kBurnInCureTimeFieldNumber;
const int MaterialConfig::kNormalCureTimeFieldNumber;
const int MaterialConfig::kBurnIntensityFieldNumber;
const int MaterialConfig::kIntensityFieldNumber;
const int MaterialConfig::kRowIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MaterialConfig::MaterialConfig()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_message_2eproto::scc_info_MaterialConfig.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:network_messages.MaterialConfig)
}
MaterialConfig::MaterialConfig(const MaterialConfig& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  ::memcpy(&packetcode_, &from.packetcode_,
    static_cast<size_t>(reinterpret_cast<char*>(&rowid_) -
    reinterpret_cast<char*>(&packetcode_)) + sizeof(rowid_));
  // @@protoc_insertion_point(copy_constructor:network_messages.MaterialConfig)
}

void MaterialConfig::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&packetcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&rowid_) -
      reinterpret_cast<char*>(&packetcode_)) + sizeof(rowid_));
}

MaterialConfig::~MaterialConfig() {
  // @@protoc_insertion_point(destructor:network_messages.MaterialConfig)
  SharedDtor();
}

void MaterialConfig::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void MaterialConfig::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* MaterialConfig::descriptor() {
  ::protobuf_message_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_message_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MaterialConfig& MaterialConfig::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_message_2eproto::scc_info_MaterialConfig.base);
  return *internal_default_instance();
}


void MaterialConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:network_messages.MaterialConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&packetcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&rowid_) -
      reinterpret_cast<char*>(&packetcode_)) + sizeof(rowid_));
  _internal_metadata_.Clear();
}

bool MaterialConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:network_messages.MaterialConfig)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 packetCode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &packetcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string Name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "network_messages.MaterialConfig.Name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 LayerThickness = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &layerthickness_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 BurnInLayers = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &burninlayers_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float BurnInCureTime = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(45u /* 45 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &burnincuretime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float NormalCureTime = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(53u /* 53 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &normalcuretime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float BurnIntensity = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(61u /* 61 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &burnintensity_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float Intensity = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(69u /* 69 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &intensity_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 rowId = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &rowid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:network_messages.MaterialConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:network_messages.MaterialConfig)
  return false;
#undef DO_
}

void MaterialConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:network_messages.MaterialConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 packetCode = 1;
  if (this->packetcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->packetcode(), output);
  }

  // string Name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "network_messages.MaterialConfig.Name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // uint32 LayerThickness = 3;
  if (this->layerthickness() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->layerthickness(), output);
  }

  // uint32 BurnInLayers = 4;
  if (this->burninlayers() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->burninlayers(), output);
  }

  // float BurnInCureTime = 5;
  if (this->burnincuretime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(5, this->burnincuretime(), output);
  }

  // float NormalCureTime = 6;
  if (this->normalcuretime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(6, this->normalcuretime(), output);
  }

  // float BurnIntensity = 7;
  if (this->burnintensity() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(7, this->burnintensity(), output);
  }

  // float Intensity = 8;
  if (this->intensity() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(8, this->intensity(), output);
  }

  // uint32 rowId = 9;
  if (this->rowid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->rowid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:network_messages.MaterialConfig)
}

::google::protobuf::uint8* MaterialConfig::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:network_messages.MaterialConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 packetCode = 1;
  if (this->packetcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->packetcode(), target);
  }

  // string Name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "network_messages.MaterialConfig.Name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // uint32 LayerThickness = 3;
  if (this->layerthickness() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->layerthickness(), target);
  }

  // uint32 BurnInLayers = 4;
  if (this->burninlayers() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->burninlayers(), target);
  }

  // float BurnInCureTime = 5;
  if (this->burnincuretime() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(5, this->burnincuretime(), target);
  }

  // float NormalCureTime = 6;
  if (this->normalcuretime() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(6, this->normalcuretime(), target);
  }

  // float BurnIntensity = 7;
  if (this->burnintensity() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(7, this->burnintensity(), target);
  }

  // float Intensity = 8;
  if (this->intensity() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(8, this->intensity(), target);
  }

  // uint32 rowId = 9;
  if (this->rowid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(9, this->rowid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:network_messages.MaterialConfig)
  return target;
}

size_t MaterialConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:network_messages.MaterialConfig)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string Name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // uint32 packetCode = 1;
  if (this->packetcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->packetcode());
  }

  // uint32 LayerThickness = 3;
  if (this->layerthickness() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->layerthickness());
  }

  // uint32 BurnInLayers = 4;
  if (this->burninlayers() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->burninlayers());
  }

  // float BurnInCureTime = 5;
  if (this->burnincuretime() != 0) {
    total_size += 1 + 4;
  }

  // float NormalCureTime = 6;
  if (this->normalcuretime() != 0) {
    total_size += 1 + 4;
  }

  // float BurnIntensity = 7;
  if (this->burnintensity() != 0) {
    total_size += 1 + 4;
  }

  // float Intensity = 8;
  if (this->intensity() != 0) {
    total_size += 1 + 4;
  }

  // uint32 rowId = 9;
  if (this->rowid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->rowid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MaterialConfig::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:network_messages.MaterialConfig)
  GOOGLE_DCHECK_NE(&from, this);
  const MaterialConfig* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MaterialConfig>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:network_messages.MaterialConfig)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:network_messages.MaterialConfig)
    MergeFrom(*source);
  }
}

void MaterialConfig::MergeFrom(const MaterialConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:network_messages.MaterialConfig)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.packetcode() != 0) {
    set_packetcode(from.packetcode());
  }
  if (from.layerthickness() != 0) {
    set_layerthickness(from.layerthickness());
  }
  if (from.burninlayers() != 0) {
    set_burninlayers(from.burninlayers());
  }
  if (from.burnincuretime() != 0) {
    set_burnincuretime(from.burnincuretime());
  }
  if (from.normalcuretime() != 0) {
    set_normalcuretime(from.normalcuretime());
  }
  if (from.burnintensity() != 0) {
    set_burnintensity(from.burnintensity());
  }
  if (from.intensity() != 0) {
    set_intensity(from.intensity());
  }
  if (from.rowid() != 0) {
    set_rowid(from.rowid());
  }
}

void MaterialConfig::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:network_messages.MaterialConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MaterialConfig::CopyFrom(const MaterialConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:network_messages.MaterialConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MaterialConfig::IsInitialized() const {
  return true;
}

void MaterialConfig::Swap(MaterialConfig* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MaterialConfig::InternalSwap(MaterialConfig* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(packetcode_, other->packetcode_);
  swap(layerthickness_, other->layerthickness_);
  swap(burninlayers_, other->burninlayers_);
  swap(burnincuretime_, other->burnincuretime_);
  swap(normalcuretime_, other->normalcuretime_);
  swap(burnintensity_, other->burnintensity_);
  swap(intensity_, other->intensity_);
  swap(rowid_, other->rowid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata MaterialConfig::GetMetadata() const {
  protobuf_message_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_message_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MotionConfig::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MotionConfig::kPacketCodeFieldNumber;
const int MotionConfig::kNameFieldNumber;
const int MotionConfig::kLayerZRaiseFieldNumber;
const int MotionConfig::kLayerZLowerFieldNumber;
const int MotionConfig::kLayerTiltRaiseFieldNumber;
const int MotionConfig::kLayerTiltLowerFieldNumber;
const int MotionConfig::kLayerOverliftFieldNumber;
const int MotionConfig::kLayerBreatheFieldNumber;
const int MotionConfig::kLayerSettleFieldNumber;
const int MotionConfig::kLayerTiltPercentFieldNumber;
const int MotionConfig::kCutOffLayersFieldNumber;
const int MotionConfig::kFinalOverLiftFieldNumber;
const int MotionConfig::kBaseLayerSettleFieldNumber;
const int MotionConfig::kRowIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MotionConfig::MotionConfig()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_message_2eproto::scc_info_MotionConfig.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:network_messages.MotionConfig)
}
MotionConfig::MotionConfig(const MotionConfig& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      layer_z_raise_(from.layer_z_raise_),
      layer_z_lower_(from.layer_z_lower_),
      layer_tilt_raise_(from.layer_tilt_raise_),
      layer_tilt_lower_(from.layer_tilt_lower_),
      layer_overlift_(from.layer_overlift_),
      layer_breathe_(from.layer_breathe_),
      layer_settle_(from.layer_settle_),
      layer_tilt_percent_(from.layer_tilt_percent_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  ::memcpy(&packetcode_, &from.packetcode_,
    static_cast<size_t>(reinterpret_cast<char*>(&rowid_) -
    reinterpret_cast<char*>(&packetcode_)) + sizeof(rowid_));
  // @@protoc_insertion_point(copy_constructor:network_messages.MotionConfig)
}

void MotionConfig::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&packetcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&rowid_) -
      reinterpret_cast<char*>(&packetcode_)) + sizeof(rowid_));
}

MotionConfig::~MotionConfig() {
  // @@protoc_insertion_point(destructor:network_messages.MotionConfig)
  SharedDtor();
}

void MotionConfig::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void MotionConfig::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* MotionConfig::descriptor() {
  ::protobuf_message_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_message_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MotionConfig& MotionConfig::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_message_2eproto::scc_info_MotionConfig.base);
  return *internal_default_instance();
}


void MotionConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:network_messages.MotionConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  layer_z_raise_.Clear();
  layer_z_lower_.Clear();
  layer_tilt_raise_.Clear();
  layer_tilt_lower_.Clear();
  layer_overlift_.Clear();
  layer_breathe_.Clear();
  layer_settle_.Clear();
  layer_tilt_percent_.Clear();
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&packetcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&rowid_) -
      reinterpret_cast<char*>(&packetcode_)) + sizeof(rowid_));
  _internal_metadata_.Clear();
}

bool MotionConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:network_messages.MotionConfig)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 packetCode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &packetcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string Name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "network_messages.MotionConfig.Name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 Layer_Z_Raise = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_layer_z_raise())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 26u, input, this->mutable_layer_z_raise())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 Layer_Z_Lower = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_layer_z_lower())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 34u, input, this->mutable_layer_z_lower())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 Layer_Tilt_Raise = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_layer_tilt_raise())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 42u, input, this->mutable_layer_tilt_raise())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 Layer_Tilt_Lower = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_layer_tilt_lower())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 50u, input, this->mutable_layer_tilt_lower())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 Layer_Overlift = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_layer_overlift())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 58u, input, this->mutable_layer_overlift())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 Layer_Breathe = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_layer_breathe())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 66u, input, this->mutable_layer_breathe())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 Layer_Settle = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_layer_settle())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 74u, input, this->mutable_layer_settle())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 Layer_Tilt_Percent = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_layer_tilt_percent())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 82u, input, this->mutable_layer_tilt_percent())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 Cut_Off_Layers = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &cut_off_layers_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 Final_OverLift = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &final_overlift_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 Base_Layer_settle = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &base_layer_settle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 rowId = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 112 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &rowid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:network_messages.MotionConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:network_messages.MotionConfig)
  return false;
#undef DO_
}

void MotionConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:network_messages.MotionConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 packetCode = 1;
  if (this->packetcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->packetcode(), output);
  }

  // string Name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "network_messages.MotionConfig.Name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // repeated uint32 Layer_Z_Raise = 3;
  if (this->layer_z_raise_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(3, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _layer_z_raise_cached_byte_size_));
  }
  for (int i = 0, n = this->layer_z_raise_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->layer_z_raise(i), output);
  }

  // repeated uint32 Layer_Z_Lower = 4;
  if (this->layer_z_lower_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(4, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _layer_z_lower_cached_byte_size_));
  }
  for (int i = 0, n = this->layer_z_lower_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->layer_z_lower(i), output);
  }

  // repeated uint32 Layer_Tilt_Raise = 5;
  if (this->layer_tilt_raise_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(5, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _layer_tilt_raise_cached_byte_size_));
  }
  for (int i = 0, n = this->layer_tilt_raise_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->layer_tilt_raise(i), output);
  }

  // repeated uint32 Layer_Tilt_Lower = 6;
  if (this->layer_tilt_lower_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(6, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _layer_tilt_lower_cached_byte_size_));
  }
  for (int i = 0, n = this->layer_tilt_lower_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->layer_tilt_lower(i), output);
  }

  // repeated uint32 Layer_Overlift = 7;
  if (this->layer_overlift_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(7, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _layer_overlift_cached_byte_size_));
  }
  for (int i = 0, n = this->layer_overlift_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->layer_overlift(i), output);
  }

  // repeated uint32 Layer_Breathe = 8;
  if (this->layer_breathe_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(8, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _layer_breathe_cached_byte_size_));
  }
  for (int i = 0, n = this->layer_breathe_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->layer_breathe(i), output);
  }

  // repeated uint32 Layer_Settle = 9;
  if (this->layer_settle_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(9, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _layer_settle_cached_byte_size_));
  }
  for (int i = 0, n = this->layer_settle_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->layer_settle(i), output);
  }

  // repeated uint32 Layer_Tilt_Percent = 10;
  if (this->layer_tilt_percent_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(10, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _layer_tilt_percent_cached_byte_size_));
  }
  for (int i = 0, n = this->layer_tilt_percent_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->layer_tilt_percent(i), output);
  }

  // uint32 Cut_Off_Layers = 11;
  if (this->cut_off_layers() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(11, this->cut_off_layers(), output);
  }

  // uint32 Final_OverLift = 12;
  if (this->final_overlift() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(12, this->final_overlift(), output);
  }

  // uint32 Base_Layer_settle = 13;
  if (this->base_layer_settle() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(13, this->base_layer_settle(), output);
  }

  // uint32 rowId = 14;
  if (this->rowid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(14, this->rowid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:network_messages.MotionConfig)
}

::google::protobuf::uint8* MotionConfig::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:network_messages.MotionConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 packetCode = 1;
  if (this->packetcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->packetcode(), target);
  }

  // string Name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "network_messages.MotionConfig.Name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // repeated uint32 Layer_Z_Raise = 3;
  if (this->layer_z_raise_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      3,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _layer_z_raise_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->layer_z_raise_, target);
  }

  // repeated uint32 Layer_Z_Lower = 4;
  if (this->layer_z_lower_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      4,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _layer_z_lower_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->layer_z_lower_, target);
  }

  // repeated uint32 Layer_Tilt_Raise = 5;
  if (this->layer_tilt_raise_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      5,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _layer_tilt_raise_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->layer_tilt_raise_, target);
  }

  // repeated uint32 Layer_Tilt_Lower = 6;
  if (this->layer_tilt_lower_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      6,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _layer_tilt_lower_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->layer_tilt_lower_, target);
  }

  // repeated uint32 Layer_Overlift = 7;
  if (this->layer_overlift_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      7,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _layer_overlift_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->layer_overlift_, target);
  }

  // repeated uint32 Layer_Breathe = 8;
  if (this->layer_breathe_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      8,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _layer_breathe_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->layer_breathe_, target);
  }

  // repeated uint32 Layer_Settle = 9;
  if (this->layer_settle_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      9,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _layer_settle_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->layer_settle_, target);
  }

  // repeated uint32 Layer_Tilt_Percent = 10;
  if (this->layer_tilt_percent_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      10,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _layer_tilt_percent_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->layer_tilt_percent_, target);
  }

  // uint32 Cut_Off_Layers = 11;
  if (this->cut_off_layers() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(11, this->cut_off_layers(), target);
  }

  // uint32 Final_OverLift = 12;
  if (this->final_overlift() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(12, this->final_overlift(), target);
  }

  // uint32 Base_Layer_settle = 13;
  if (this->base_layer_settle() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(13, this->base_layer_settle(), target);
  }

  // uint32 rowId = 14;
  if (this->rowid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(14, this->rowid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:network_messages.MotionConfig)
  return target;
}

size_t MotionConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:network_messages.MotionConfig)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated uint32 Layer_Z_Raise = 3;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->layer_z_raise_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _layer_z_raise_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated uint32 Layer_Z_Lower = 4;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->layer_z_lower_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _layer_z_lower_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated uint32 Layer_Tilt_Raise = 5;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->layer_tilt_raise_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _layer_tilt_raise_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated uint32 Layer_Tilt_Lower = 6;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->layer_tilt_lower_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _layer_tilt_lower_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated uint32 Layer_Overlift = 7;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->layer_overlift_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _layer_overlift_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated uint32 Layer_Breathe = 8;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->layer_breathe_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _layer_breathe_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated uint32 Layer_Settle = 9;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->layer_settle_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _layer_settle_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated uint32 Layer_Tilt_Percent = 10;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->layer_tilt_percent_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _layer_tilt_percent_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // string Name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // uint32 packetCode = 1;
  if (this->packetcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->packetcode());
  }

  // uint32 Cut_Off_Layers = 11;
  if (this->cut_off_layers() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->cut_off_layers());
  }

  // uint32 Final_OverLift = 12;
  if (this->final_overlift() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->final_overlift());
  }

  // uint32 Base_Layer_settle = 13;
  if (this->base_layer_settle() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->base_layer_settle());
  }

  // uint32 rowId = 14;
  if (this->rowid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->rowid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MotionConfig::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:network_messages.MotionConfig)
  GOOGLE_DCHECK_NE(&from, this);
  const MotionConfig* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MotionConfig>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:network_messages.MotionConfig)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:network_messages.MotionConfig)
    MergeFrom(*source);
  }
}

void MotionConfig::MergeFrom(const MotionConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:network_messages.MotionConfig)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  layer_z_raise_.MergeFrom(from.layer_z_raise_);
  layer_z_lower_.MergeFrom(from.layer_z_lower_);
  layer_tilt_raise_.MergeFrom(from.layer_tilt_raise_);
  layer_tilt_lower_.MergeFrom(from.layer_tilt_lower_);
  layer_overlift_.MergeFrom(from.layer_overlift_);
  layer_breathe_.MergeFrom(from.layer_breathe_);
  layer_settle_.MergeFrom(from.layer_settle_);
  layer_tilt_percent_.MergeFrom(from.layer_tilt_percent_);
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.packetcode() != 0) {
    set_packetcode(from.packetcode());
  }
  if (from.cut_off_layers() != 0) {
    set_cut_off_layers(from.cut_off_layers());
  }
  if (from.final_overlift() != 0) {
    set_final_overlift(from.final_overlift());
  }
  if (from.base_layer_settle() != 0) {
    set_base_layer_settle(from.base_layer_settle());
  }
  if (from.rowid() != 0) {
    set_rowid(from.rowid());
  }
}

void MotionConfig::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:network_messages.MotionConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MotionConfig::CopyFrom(const MotionConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:network_messages.MotionConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MotionConfig::IsInitialized() const {
  return true;
}

void MotionConfig::Swap(MotionConfig* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MotionConfig::InternalSwap(MotionConfig* other) {
  using std::swap;
  layer_z_raise_.InternalSwap(&other->layer_z_raise_);
  layer_z_lower_.InternalSwap(&other->layer_z_lower_);
  layer_tilt_raise_.InternalSwap(&other->layer_tilt_raise_);
  layer_tilt_lower_.InternalSwap(&other->layer_tilt_lower_);
  layer_overlift_.InternalSwap(&other->layer_overlift_);
  layer_breathe_.InternalSwap(&other->layer_breathe_);
  layer_settle_.InternalSwap(&other->layer_settle_);
  layer_tilt_percent_.InternalSwap(&other->layer_tilt_percent_);
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(packetcode_, other->packetcode_);
  swap(cut_off_layers_, other->cut_off_layers_);
  swap(final_overlift_, other->final_overlift_);
  swap(base_layer_settle_, other->base_layer_settle_);
  swap(rowid_, other->rowid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata MotionConfig::GetMetadata() const {
  protobuf_message_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_message_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Job3D::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Job3D::kPacketCodeFieldNumber;
const int Job3D::kNameFieldNumber;
const int Job3D::kSizeFieldNumber;
const int Job3D::kLastPacketFieldNumber;
const int Job3D::kFileBytesFieldNumber;
const int Job3D::kRowIdFieldNumber;
const int Job3D::kMd5FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Job3D::Job3D()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_message_2eproto::scc_info_Job3D.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:network_messages.Job3D)
}
Job3D::Job3D(const Job3D& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      filebytes_(from.filebytes_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  ::memcpy(&size_, &from.size_,
    static_cast<size_t>(reinterpret_cast<char*>(&rowid_) -
    reinterpret_cast<char*>(&size_)) + sizeof(rowid_));
  // @@protoc_insertion_point(copy_constructor:network_messages.Job3D)
}

void Job3D::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&size_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&rowid_) -
      reinterpret_cast<char*>(&size_)) + sizeof(rowid_));
}

Job3D::~Job3D() {
  // @@protoc_insertion_point(destructor:network_messages.Job3D)
  SharedDtor();
}

void Job3D::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Job3D::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Job3D::descriptor() {
  ::protobuf_message_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_message_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Job3D& Job3D::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_message_2eproto::scc_info_Job3D.base);
  return *internal_default_instance();
}


void Job3D::Clear() {
// @@protoc_insertion_point(message_clear_start:network_messages.Job3D)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  filebytes_.Clear();
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&size_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&rowid_) -
      reinterpret_cast<char*>(&size_)) + sizeof(rowid_));
  _internal_metadata_.Clear();
}

bool Job3D::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:network_messages.Job3D)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 packetCode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &packetcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string Name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "network_messages.Job3D.Name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 Size = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool lastPacket = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &lastpacket_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated bytes fileBytes = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->add_filebytes()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 rowId = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &rowid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool Md5 = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &md5_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:network_messages.Job3D)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:network_messages.Job3D)
  return false;
#undef DO_
}

void Job3D::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:network_messages.Job3D)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 packetCode = 1;
  if (this->packetcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->packetcode(), output);
  }

  // string Name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "network_messages.Job3D.Name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // uint64 Size = 3;
  if (this->size() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->size(), output);
  }

  // bool lastPacket = 4;
  if (this->lastpacket() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->lastpacket(), output);
  }

  // repeated bytes fileBytes = 5;
  for (int i = 0, n = this->filebytes_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      5, this->filebytes(i), output);
  }

  // uint32 rowId = 6;
  if (this->rowid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->rowid(), output);
  }

  // bool Md5 = 7;
  if (this->md5() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(7, this->md5(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:network_messages.Job3D)
}

::google::protobuf::uint8* Job3D::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:network_messages.Job3D)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 packetCode = 1;
  if (this->packetcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->packetcode(), target);
  }

  // string Name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "network_messages.Job3D.Name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // uint64 Size = 3;
  if (this->size() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->size(), target);
  }

  // bool lastPacket = 4;
  if (this->lastpacket() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->lastpacket(), target);
  }

  // repeated bytes fileBytes = 5;
  for (int i = 0, n = this->filebytes_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBytesToArray(5, this->filebytes(i), target);
  }

  // uint32 rowId = 6;
  if (this->rowid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->rowid(), target);
  }

  // bool Md5 = 7;
  if (this->md5() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(7, this->md5(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:network_messages.Job3D)
  return target;
}

size_t Job3D::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:network_messages.Job3D)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated bytes fileBytes = 5;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->filebytes_size());
  for (int i = 0, n = this->filebytes_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
      this->filebytes(i));
  }

  // string Name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // uint64 Size = 3;
  if (this->size() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->size());
  }

  // uint32 packetCode = 1;
  if (this->packetcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->packetcode());
  }

  // bool lastPacket = 4;
  if (this->lastpacket() != 0) {
    total_size += 1 + 1;
  }

  // bool Md5 = 7;
  if (this->md5() != 0) {
    total_size += 1 + 1;
  }

  // uint32 rowId = 6;
  if (this->rowid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->rowid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Job3D::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:network_messages.Job3D)
  GOOGLE_DCHECK_NE(&from, this);
  const Job3D* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Job3D>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:network_messages.Job3D)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:network_messages.Job3D)
    MergeFrom(*source);
  }
}

void Job3D::MergeFrom(const Job3D& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:network_messages.Job3D)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  filebytes_.MergeFrom(from.filebytes_);
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.size() != 0) {
    set_size(from.size());
  }
  if (from.packetcode() != 0) {
    set_packetcode(from.packetcode());
  }
  if (from.lastpacket() != 0) {
    set_lastpacket(from.lastpacket());
  }
  if (from.md5() != 0) {
    set_md5(from.md5());
  }
  if (from.rowid() != 0) {
    set_rowid(from.rowid());
  }
}

void Job3D::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:network_messages.Job3D)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Job3D::CopyFrom(const Job3D& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:network_messages.Job3D)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Job3D::IsInitialized() const {
  return true;
}

void Job3D::Swap(Job3D* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Job3D::InternalSwap(Job3D* other) {
  using std::swap;
  filebytes_.InternalSwap(CastToBase(&other->filebytes_));
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(size_, other->size_);
  swap(packetcode_, other->packetcode_);
  swap(lastpacket_, other->lastpacket_);
  swap(md5_, other->md5_);
  swap(rowid_, other->rowid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Job3D::GetMetadata() const {
  protobuf_message_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_message_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace network_messages
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::network_messages::NetServerCommands* Arena::CreateMaybeMessage< ::network_messages::NetServerCommands >(Arena* arena) {
  return Arena::CreateInternal< ::network_messages::NetServerCommands >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::network_messages::NetClientRes* Arena::CreateMaybeMessage< ::network_messages::NetClientRes >(Arena* arena) {
  return Arena::CreateInternal< ::network_messages::NetClientRes >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::network_messages::PrintProgress* Arena::CreateMaybeMessage< ::network_messages::PrintProgress >(Arena* arena) {
  return Arena::CreateInternal< ::network_messages::PrintProgress >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::network_messages::MachineConfig* Arena::CreateMaybeMessage< ::network_messages::MachineConfig >(Arena* arena) {
  return Arena::CreateInternal< ::network_messages::MachineConfig >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::network_messages::MaterialConfig* Arena::CreateMaybeMessage< ::network_messages::MaterialConfig >(Arena* arena) {
  return Arena::CreateInternal< ::network_messages::MaterialConfig >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::network_messages::MotionConfig* Arena::CreateMaybeMessage< ::network_messages::MotionConfig >(Arena* arena) {
  return Arena::CreateInternal< ::network_messages::MotionConfig >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::network_messages::Job3D* Arena::CreateMaybeMessage< ::network_messages::Job3D >(Arena* arena) {
  return Arena::CreateInternal< ::network_messages::Job3D >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
